{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\add-partner.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin } from \"../../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport UserService from \"../../../services/user-service\";\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\nimport API from \"../../../redux/api/lead-client-api\";\nimport UserAPI from \"../../../redux/api/user-api\";\nimport Config from \"../../../config\";\nimport { partnerContractStatusOptions, partnerVerificationOptions, partnerStatusOptions } from \"../../../constants/defaultValues\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { Collapse, Form, Input, Select, Button, Row, Col, InputNumber } from \"antd\";\n\nvar AddClient = function AddClient(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      primaryClient = _useState4[0],\n      setPrimaryClient = _useState4[1];\n\n  var _useState5 = useState(3),\n      _useState6 = _slicedToArray(_useState5, 2),\n      numOfTestimonials = _useState6[0],\n      setnNumOfTestimonials = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clientAddress = _useState8[0],\n      setClientAddress = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      buttonLoading = _useState10[0],\n      setButtonLoading = _useState10[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var updateMedia = function updateMedia() {\n    var num = window.innerWidth > 1199 ? 3 : window.innerWidth < 1199 && window.innerWidth > 767 ? 2 : 1;\n    setnNumOfTestimonials(num);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", updateMedia);\n    return function () {\n      return window.removeEventListener(\"resize\", updateMedia);\n    };\n  }, []);\n  var Panel = Collapse.Panel;\n  var Option = Select.Option;\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var users, countPartners, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setButtonLoading(true);\n              _context.next = 3;\n              return UserAPI.loadAllUsers({\n                meta: 'filter_count',\n                filter: {\n                  role: {\n                    _eq: \"8091cbf7-fafb-4255-b1be-42a2e1a6d436\"\n                  }\n                }\n              });\n\n            case 3:\n              users = _context.sent;\n              countPartners = users.meta.filter_count;\n              values.code = \"P\" + (countPartners + 1 + \"\").padStart(3, \"0\");\n              values.role = \"8091cbf7-fafb-4255-b1be-42a2e1a6d436\";\n              values.name = values.first_name + \" \" + values.last_name;\n              console.log('values =>', values);\n              _context.prev = 9;\n              _context.next = 12;\n              return UserAPI.addUser(_objectSpread({}, values));\n\n            case 12:\n              user = _context.sent;\n              console.log('user =>', user);\n\n              if (user.data) {\n                UserService.setAdminUser(user.data);\n                notifyUser(\"New Partner Added\", \"success\");\n                history.push(\"/admin/partner/overview\");\n              }\n\n              _context.next = 22;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](9);\n              console.log(_context.t0);\n              notifyUser(JSON.parse(_context.t0.response.data).errors[0].message, \"error\");\n              setButtonLoading(false);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 17]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 18\n    }\n  };\n  var formSubItemLayout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n  var formTailLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 18,\n      offset: 6\n    }\n  };\n\n  var onSelectAddress = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setClientAddress(address.label);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSelectAddress(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    className: \"dashboard-listings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-form change-password-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: onFinish,\n    name: \"dynamic_rule\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"first_name\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Please enter First Name',\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Johan\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"last_name\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Please enter Last Name',\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Smith\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true,\n      message: 'Please enter Email'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"johansmith@example.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please enter Password'\n    }, {\n      validator: function validator(_, value) {\n        return !value.includes(\" \") ? Promise.resolve() : Promise.reject(new Error(\"No spaces allowed\"));\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input.Password, {\n    placeholder: \"Password\",\n    iconRender: function iconRender(visible) {\n      return visible ? /*#__PURE__*/React.createElement(EyeTwoTone, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 71\n        }\n      }) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 88\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"cell\",\n    label: \"Cell\",\n    rules: [{\n      required: false,\n      pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\n      message: 'Please input valid number!' // max: 14\n\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"status\",\n    label: \"Status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"draft\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, partnerStatusOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 45\n      }\n    }, option.text);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"contract_status\",\n    label: \"Contract Status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"pending\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, \"None\"), partnerContractStatusOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    }, option.text);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"verification\",\n    label: \"Verification\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"pending\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, partnerVerificationOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }, option.text);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formTailLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: form.submit,\n    loading: buttonLoading,\n    type: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }, \"Save\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/partner/add-partner.js"],"names":["React","useState","useEffect","connect","signin","useDispatch","notifyUser","UserService","createLeadClient","API","UserAPI","Config","partnerContractStatusOptions","partnerVerificationOptions","partnerStatusOptions","EyeInvisibleOutlined","EyeTwoTone","GooglePlacesAutocomplete","Collapse","Form","Input","Select","Button","Row","Col","InputNumber","AddClient","history","dispatch","submitted","setSubmitted","primaryClient","setPrimaryClient","numOfTestimonials","setnNumOfTestimonials","clientAddress","setClientAddress","buttonLoading","setButtonLoading","useForm","form","updateMedia","num","window","innerWidth","addEventListener","removeEventListener","Panel","Option","onFinish","values","loadAllUsers","meta","filter","role","_eq","users","countPartners","filter_count","code","padStart","name","first_name","last_name","console","log","addUser","user","data","setAdminUser","push","JSON","parse","response","errors","message","formItemLayout","labelCol","span","wrapperCol","formSubItemLayout","formTailLayout","offset","onSelectAddress","address","label","xs","sm","md","lg","required","whitespace","type","validator","_","value","includes","Promise","resolve","reject","Error","visible","pattern","map","option","text","submit","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\r\nimport API from \"../../../redux/api/lead-client-api\";\r\nimport UserAPI from \"../../../redux/api/user-api\";\r\nimport Config from \"../../../config\";\r\nimport { partnerContractStatusOptions, partnerVerificationOptions, partnerStatusOptions } from \"../../../constants/defaultValues\";\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport { Collapse, Form, Input, Select, Button, Row, Col, InputNumber } from \"antd\";\r\n\r\nconst AddClient = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [primaryClient, setPrimaryClient] = useState(false);\r\n    const [numOfTestimonials, setnNumOfTestimonials] = useState(3);\r\n    const [clientAddress, setClientAddress] = useState(null);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const updateMedia = () => {\r\n        var num = window.innerWidth > 1199 ? 3 : (window.innerWidth < 1199 && window.innerWidth > 767) ? 2 : 1\r\n        setnNumOfTestimonials(num);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    }, []);\r\n\r\n\r\n    const { Panel } = Collapse;\r\n    const { Option } = Select;\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        setButtonLoading(true);\r\n        const users = await UserAPI.loadAllUsers({ meta: 'filter_count', filter: { role: { _eq: \"8091cbf7-fafb-4255-b1be-42a2e1a6d436\" } } });\r\n        const countPartners = users.meta.filter_count;\r\n\r\n        values.code = \"P\" + ((countPartners + 1) + \"\").padStart(3, \"0\");\r\n        values.role = \"8091cbf7-fafb-4255-b1be-42a2e1a6d436\";\r\n        values.name = values.first_name + \" \" + values.last_name;\r\n        console.log('values =>', values);\r\n        try {\r\n            var user = await UserAPI.addUser({ ...values });\r\n            console.log('user =>', user);\r\n            if (user.data) {\r\n                UserService.setAdminUser(user.data);\r\n                notifyUser(\"New Partner Added\", \"success\");\r\n                history.push(`/admin/partner/overview`);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            notifyUser(JSON.parse(error.response.data).errors[0].message, \"error\");\r\n            setButtonLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18 },\r\n    };\r\n    const formSubItemLayout = {\r\n        labelCol: { span: 24 },\r\n        wrapperCol: { span: 24 },\r\n    };\r\n    const formTailLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18, offset: 6 },\r\n    };\r\n\r\n\r\n\r\n    const onSelectAddress = async (address) => {\r\n        setClientAddress(address.label);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n\r\n\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"dashboard-listings\">\r\n                <Col span={24}>\r\n                    <div className=\"admin-form change-password-form\">\r\n                        <Form form={form} onFinish={onFinish} name=\"dynamic_rule\" autoComplete=\"off\">\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"first_name\"\r\n                                label=\"First Name\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter First Name',\r\n                                        whitespace: true\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Johan\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"last_name\"\r\n                                label=\"Last Name\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter Last Name', whitespace: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Smith\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                rules={[\r\n                                    {\r\n                                        type: 'email',\r\n                                        required: true,\r\n                                        message: 'Please enter Email',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"johansmith@example.com\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter Password',\r\n                                    },\r\n                                    {\r\n                                        validator: (_, value) =>\r\n                                          !value.includes(\" \")\r\n                                            ? Promise.resolve()\r\n                                            : Promise.reject(new Error(\"No spaces allowed\"))\r\n                                      }\r\n                                ]}\r\n                            >\r\n                                <Input.Password\r\n                                    placeholder=\"Password\"\r\n                                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"cell\"\r\n                                label=\"Cell\"\r\n                                rules={[\r\n                                    {\r\n                                        required: false,\r\n                                        pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\r\n                                        message: 'Please input valid number!',\r\n                                        // max: 14\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Cell\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"status\"\r\n                                label=\"Status\"\r\n                            >\r\n                                <Select defaultValue={\"draft\"}>\r\n                                    {partnerStatusOptions.map((option) => {\r\n                                        return (\r\n                                            <Select.Option value={option.value}>{option.text}</Select.Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"contract_status\"\r\n                                label=\"Contract Status\"\r\n                            >\r\n                                <Select defaultValue={\"pending\"}>\r\n                                    <Select.Option value=\"\">None</Select.Option>\r\n                                    {partnerContractStatusOptions.map((option) => {\r\n                                        return (\r\n                                            <Select.Option value={option.value}>{option.text}</Select.Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"verification\"\r\n                                label=\"Verification\"\r\n                            >\r\n                                <Select defaultValue={\"pending\"}>\r\n                                    {partnerVerificationOptions.map((option) => {\r\n                                        return (\r\n                                            <Select.Option value={option.value}>{option.text}</Select.Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item {...formTailLayout}>\r\n                                <Button onClick={form.submit} loading={buttonLoading} type=\"primary\">Save</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);\r\n"]},"metadata":{},"sourceType":"module"}
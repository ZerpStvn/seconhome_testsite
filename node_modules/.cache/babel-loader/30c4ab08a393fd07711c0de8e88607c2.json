{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\client\\\\tour\\\\CardViewTour.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, Divider, Button, Modal, Input, Form, Spin, Typography, List, Avatar } from \"antd\";\nimport { CommentOutlined, LikeOutlined, DislikeOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport Config from \"../../../config\";\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\nimport { createLeadClientMessage, updateLeadClient } from \"../../../redux/actions/lead-client-actions\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { NotesListCard } from \"../../../components/shared/displayCard\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport moment from \"moment\";\nimport avatar from '../../../assets/images/notes.png';\nvar Meta = Card.Meta;\nvar TextArea = Input.TextArea;\nvar Title = Typography.Title,\n    Paragraph = Typography.Paragraph,\n    Text = Typography.Text,\n    Link = Typography.Link;\n\nvar CardViewTour = function CardViewTour(_ref) {\n  var name = _ref.name,\n      address = _ref.address,\n      approval = _ref.approval,\n      coverImage = _ref.coverImage,\n      liked = _ref.liked,\n      lead = _ref.lead,\n      notes = _ref.notes,\n      leadClientId = _ref.leadClientId,\n      leadClientName = _ref.leadClientName,\n      leadClientPhone = _ref.leadClientPhone,\n      homeID = _ref.homeID,\n      rooms = _ref.rooms;\n  var dispatch = useDispatch();\n  var leadID = lead.id;\n  var imageUrl = coverImage ? \"\".concat(Config.API, \"/assets/\").concat(coverImage) : null;\n  var badgeBG = approval === \"accepted\" ? \"#52c41a\" : approval === \"pending\" ? \"#ff6d00\" : \"#ff0000\";\n  var likeColor = liked == true ? \"#008000\" : \"#000\";\n  var dislikeColor = liked == false ? \"#ff0000\" : \"#000\";\n\n  var _useState = useState(notes !== null ? \"#0000ff\" : \"#000000\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      noteIconColor = _useState2[0],\n      setNoteIconColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openNote = _useState4[0],\n      setOpenNote = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openConnect = _useState6[0],\n      setOpenConnect = _useState6[1];\n\n  var _useState7 = useState(likeColor),\n      _useState8 = _slicedToArray(_useState7, 2),\n      likeButtonColor = _useState8[0],\n      setLikeButtonColor = _useState8[1];\n\n  var _useState9 = useState(dislikeColor),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dislikeButtonColor = _useState10[0],\n      setDislikeButtonColor = _useState10[1];\n\n  var _useState11 = useState(notes !== null ? notes.data : []),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notesValue = _useState12[0],\n      setNotesValue = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      noteData = _useState14[0],\n      setNoteData = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  useEffect(function () {\n    setLikeButtonColor(likeColor);\n    setDislikeButtonColor(dislikeColor);\n  }, [dislikeColor, likeColor]);\n  var contactFormInitialValue = {\n    first_name: leadClientName.split(\" \")[0],\n    last_name: leadClientName.split(\" \")[1],\n    phone: leadClientPhone //message: \"Kindly contact us for more information.\",\n\n  };\n  var timeZone = new Date().getTimezoneOffset();\n  var finalTime;\n\n  if (lead.scheduled_date) {\n    var time = new Date(lead.scheduled_date).getTime();\n    finalTime = time + -timeZone * 60000;\n  }\n\n  var likeHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(likeValue) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(likeValue != null)) {\n                _context.next = 13;\n                break;\n              }\n\n              setLoading(true);\n              data = {\n                \"leads\": {\n                  \"update\": [{\n                    \"id\": leadID,\n                    \"is_liked\": likeValue\n                  }]\n                }\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return dispatch(updateLeadClient(leadClientId, data));\n\n            case 6:\n              // await dispatch(updateLead(leadID, data));\n              if (likeValue === true) {\n                setDislikeButtonColor(\"#000\");\n                setLikeButtonColor(\"#008000\");\n              } else {\n                setDislikeButtonColor(\"#ff0000\");\n                setLikeButtonColor(\"#000\");\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 12:\n              setLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 9]]);\n    }));\n\n    return function likeHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Success:\", _objectSpread({}, values, {\n                home: homeID,\n                client: leadClientId\n              }));\n              setLoading(true);\n              formData = _objectSpread({}, values, {\n                home: homeID,\n                client: leadClientId\n              });\n              _context2.next = 5;\n              return dispatch(createLeadClientMessage(formData));\n\n            case 5:\n              setLoading(false);\n              setOpenConnect(false);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinish(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      notesForm = _Form$useForm2[0];\n\n  var onNotesFinish = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      var newNotesData, updatedNotes;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newNotesData = [].concat(_toConsumableArray(notesValue), [values.notes]);\n              updatedNotes = {\n                notes: {\n                  data: newNotesData\n                }\n              };\n              setLoading(true);\n              _context3.next = 5;\n              return dispatch(updateLead(leadID, updatedNotes));\n\n            case 5:\n              notesForm.resetFields();\n              notesValue.push(values.notes);\n              setLoading(false);\n              setNoteIconColor(\"#0000ff\");\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onNotesFinish(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onNotesFinishFailed = function onNotesFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var getMaxRoomCost = function getMaxRoomCost() {\n    return Math.max.apply(Math, rooms.map(function (room) {\n      return room.base_rate;\n    }));\n  };\n\n  var getMinRoomCost = function getMinRoomCost() {\n    return Math.min.apply(Math, rooms.map(function (room) {\n      return room.base_rate;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    cover: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        position: \"absolute\",\n        left: \"10px\",\n        top: \"10px\",\n        backgroundColor: badgeBG,\n        paddingLeft: 10,\n        paddingRight: 10,\n        borderRadius: 20,\n        color: \"#fff\",\n        textTransform: \"capitalize\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, humanize(approval)), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"200px\",\n        backgroundPosition: \"center center\",\n        backgroundRepeat: \"no-repeat\",\n        objectFit: \"cover\"\n      },\n      alt: \"home-image\",\n      src: imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })),\n    actions: [/*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      onClick: function onClick() {\n        return setOpenNote(true);\n      },\n      \"aria-label\": \"form\",\n      className: \"anticon anticon-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"64 64 896 896\",\n      focusable: \"false\",\n      \"data-icon\": \"form\",\n      width: \"1em\",\n      height: \"1em\",\n      fill: noteIconColor,\n      \"aria-hidden\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 115\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 244\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 440\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, loading && !openConnect && !openNote ? /*#__PURE__*/React.createElement(Spin, {\n      style: {\n        padding: 10,\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LikeOutlined, {\n      key: \"like\",\n      style: {\n        fontSize: \"20px\",\n        color: likeButtonColor\n      },\n      onClick: function onClick() {\n        return likeHandler(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      type: \"vertical\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DislikeOutlined, {\n      key: \"dislike\",\n      style: {\n        fontSize: \"20px\",\n        color: dislikeButtonColor\n      },\n      onClick: function onClick() {\n        return likeHandler(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    })))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    title: name,\n    description: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-details\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, \"$\", getMinRoomCost(), \" - $\", getMaxRoomCost(), \" / Month\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, address), /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paragraph, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      strong: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, \"Date & Time :\", ' '), moment(finalTime).format('MM-DD-YYYY'), \" \", moment(finalTime).format('LT')))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"connect-btn\",\n    onClick: function onClick() {\n      return setOpenConnect(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"Message\"))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add Note\",\n    centered: true,\n    visible: openNote,\n    onCancel: function onCancel() {\n      return setOpenNote(false);\n    },\n    className: \"connect-modal\",\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, notesValue && notesValue.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    dataSource: notesValue,\n    renderItem: function renderItem(note, index) {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: avatar,\n          style: {\n            height: 30,\n            width: 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }\n        }),\n        description: /*#__PURE__*/React.createElement(NotesListCard, {\n          note: note,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 32\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    name: \"notes\",\n    initialValues: {\n      notes: \"\"\n    },\n    onFinish: onNotesFinish,\n    onFinishFailed: onNotesFinishFailed,\n    form: notesForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"notes\",\n    rules: [{\n      required: true,\n      message: \"This field is required!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    onChange: function onChange(e) {\n      return setNoteData(e.target.value);\n    },\n    placeholder: \"Add notes here..!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Message Community\",\n    centered: true,\n    visible: openConnect,\n    onCancel: function onCancel() {\n      return setOpenConnect(false);\n    },\n    className: \"connect-modal\",\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"connect\",\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 20\n    },\n    initialValues: contactFormInitialValue,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"first_name\",\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input your first name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"First Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"last_name\",\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input your last name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Last Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Message\",\n    name: \"message\",\n    rules: [{\n      required: true,\n      message: \"Please input your message!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    placeholder: \"Write your message to the community here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: {\n      offset: 4,\n      span: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\nexport default CardViewTour;","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/client/tour/CardViewTour.jsx"],"names":["React","useEffect","useState","useDispatch","Card","Divider","Button","Modal","Input","Form","Spin","Typography","List","Avatar","CommentOutlined","LikeOutlined","DislikeOutlined","LoadingOutlined","Config","updateLead","createLeadClientMessage","updateLeadClient","SendOutlined","NotesListCard","humanize","moment","avatar","Meta","TextArea","Title","Paragraph","Text","Link","CardViewTour","name","address","approval","coverImage","liked","lead","notes","leadClientId","leadClientName","leadClientPhone","homeID","rooms","dispatch","leadID","id","imageUrl","API","badgeBG","likeColor","dislikeColor","noteIconColor","setNoteIconColor","openNote","setOpenNote","openConnect","setOpenConnect","likeButtonColor","setLikeButtonColor","dislikeButtonColor","setDislikeButtonColor","data","notesValue","setNotesValue","noteData","setNoteData","loading","setLoading","contactFormInitialValue","first_name","split","last_name","phone","timeZone","Date","getTimezoneOffset","finalTime","scheduled_date","time","getTime","likeHandler","likeValue","console","log","onFinish","values","home","client","formData","onFinishFailed","errorInfo","useForm","notesForm","onNotesFinish","newNotesData","updatedNotes","resetFields","push","onNotesFinishFailed","getMaxRoomCost","Math","max","apply","map","room","base_rate","getMinRoomCost","min","position","left","top","backgroundColor","paddingLeft","paddingRight","borderRadius","color","textTransform","width","height","backgroundPosition","backgroundRepeat","objectFit","display","justifyContent","alignItems","marginLeft","marginRight","padding","fontSize","format","length","note","index","required","message","e","target","value","span","whitespace","offset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, Divider, Button, Modal, Input, Form, Spin, Typography, List, Avatar, } from \"antd\";\r\nimport { CommentOutlined, LikeOutlined, DislikeOutlined, LoadingOutlined, } from \"@ant-design/icons\";\r\nimport Config from \"../../../config\";\r\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\r\nimport { createLeadClientMessage, updateLeadClient } from \"../../../redux/actions/lead-client-actions\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { NotesListCard } from \"../../../components/shared/displayCard\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport moment from \"moment\";\r\nimport avatar from '../../../assets/images/notes.png';\r\n\r\nconst { Meta } = Card;\r\nconst { TextArea } = Input;\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\n\r\nconst CardViewTour = ({ name, address, approval, coverImage, liked, lead, notes, leadClientId, leadClientName, leadClientPhone, homeID, rooms, }) => {\r\n  const dispatch = useDispatch();\r\n  const leadID = lead.id;\r\n  const imageUrl = coverImage ? `${Config.API}/assets/${coverImage}` : null;\r\n  const badgeBG = approval === \"accepted\" ? \"#52c41a\" : approval === \"pending\" ? \"#ff6d00\" : \"#ff0000\";\r\n  const likeColor = liked == true ? \"#008000\" : \"#000\";\r\n  const dislikeColor = liked == false ? \"#ff0000\" : \"#000\";\r\n  const [noteIconColor, setNoteIconColor] = useState(notes !== null ? \"#0000ff\" : \"#000000\");\r\n  const [openNote, setOpenNote] = useState(false);\r\n  const [openConnect, setOpenConnect] = useState(false);\r\n  const [likeButtonColor, setLikeButtonColor] = useState(likeColor);\r\n  const [dislikeButtonColor, setDislikeButtonColor] = useState(dislikeColor);\r\n  const [notesValue, setNotesValue] = useState(\r\n    notes !== null ? notes.data : []\r\n  );\r\n  const [noteData, setNoteData] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLikeButtonColor(likeColor);\r\n    setDislikeButtonColor(dislikeColor);\r\n  }, [dislikeColor, likeColor]);\r\n\r\n  const contactFormInitialValue = {\r\n    first_name: leadClientName.split(\" \")[0],\r\n    last_name: leadClientName.split(\" \")[1],\r\n    phone: leadClientPhone,\r\n    //message: \"Kindly contact us for more information.\",\r\n  };\r\n  const timeZone = new Date().getTimezoneOffset();\r\n  let finalTime;\r\n  if (lead.scheduled_date) {\r\n    let time = new Date(lead.scheduled_date).getTime();\r\n    finalTime = time + (-timeZone * 60000)\r\n\r\n  }\r\n\r\n\r\n  const likeHandler = async (likeValue) => {\r\n    if (likeValue != null) {\r\n\r\n      setLoading(true);\r\n      const data = {\r\n        \"leads\": {\r\n          \"update\": [{ \"id\": leadID, \"is_liked\": likeValue }],\r\n        }\r\n      }\r\n      try {\r\n        await dispatch(updateLeadClient(leadClientId, data));\r\n        // await dispatch(updateLead(leadID, data));\r\n\r\n        if (likeValue === true) {\r\n          setDislikeButtonColor(\"#000\");\r\n          setLikeButtonColor(\"#008000\");\r\n        } else {\r\n          setDislikeButtonColor(\"#ff0000\");\r\n          setLikeButtonColor(\"#000\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Success:\", { ...values, home: homeID, client: leadClientId });\r\n    setLoading(true);\r\n    const formData = { ...values, home: homeID, client: leadClientId };\r\n    await dispatch(createLeadClientMessage(formData));\r\n    setLoading(false);\r\n    setOpenConnect(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const [notesForm] = Form.useForm();\r\n\r\n  const onNotesFinish = async (values) => {\r\n    const newNotesData = [...notesValue, values.notes];\r\n    const updatedNotes = { notes: { data: newNotesData } };\r\n    setLoading(true);\r\n    await dispatch(updateLead(leadID, updatedNotes));\r\n    notesForm.resetFields();\r\n    notesValue.push(values.notes);\r\n    setLoading(false);\r\n    setNoteIconColor(\"#0000ff\");\r\n  };\r\n\r\n  const onNotesFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const getMaxRoomCost = () => {\r\n    return Math.max.apply(\r\n      Math,\r\n      rooms.map(function (room) {\r\n        return room.base_rate;\r\n      })\r\n    );\r\n  };\r\n\r\n  const getMinRoomCost = () => {\r\n    return Math.min.apply(\r\n      Math,\r\n      rooms.map(function (room) {\r\n        return room.base_rate;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        cover={\r\n          <div>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: \"10px\",\r\n                backgroundColor: badgeBG,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                borderRadius: 20,\r\n                color: \"#fff\",\r\n                textTransform: \"capitalize\",\r\n              }}\r\n            >\r\n              {humanize(approval)}\r\n            </span>\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"200px\",\r\n                backgroundPosition: \"center center\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                objectFit: \"cover\",\r\n              }}\r\n              alt=\"home-image\"\r\n              src={imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\"}\r\n            />\r\n          </div>\r\n        }\r\n        actions={[\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <span role=\"img\" onClick={() => setOpenNote(true)} aria-label=\"form\" className=\"anticon anticon-form\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"form\" width=\"1em\" height=\"1em\" fill={noteIconColor} aria-hidden=\"true\"><path d=\"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\"></path><path d=\"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\"></path></svg></span>\r\n          </div>,\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            {loading && !openConnect && !openNote ? (\r\n              <Spin\r\n                style={{\r\n                  padding: 10,\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <React.Fragment>\r\n                <LikeOutlined\r\n                  key=\"like\"\r\n                  style={{ fontSize: \"20px\", color: likeButtonColor }}\r\n                  onClick={() => likeHandler(true)}\r\n                />\r\n                <Divider type=\"vertical\" />\r\n                <DislikeOutlined\r\n                  key=\"dislike\"\r\n                  style={{ fontSize: \"20px\", color: dislikeButtonColor }}\r\n                  onClick={() => likeHandler(false)}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </div>,\r\n        ]}\r\n      >\r\n        <div className=\"card-content\">\r\n          <Meta\r\n            title={name}\r\n            description={\r\n              <div className=\"card-details\">\r\n                <p>\r\n                  ${getMinRoomCost()} - ${getMaxRoomCost()} / Month\r\n                </p>\r\n                <p>{address}</p>\r\n                <Typography>\r\n                  <Paragraph>\r\n                    <Text strong>\r\n                      Date & Time :{' '}\r\n                    </Text>\r\n                    {moment(finalTime).format('MM-DD-YYYY')} {moment(finalTime).format('LT')}\r\n                  </Paragraph>\r\n                </Typography>\r\n\r\n              </div>\r\n            }\r\n          />\r\n          <Button\r\n            className=\"connect-btn\"\r\n            onClick={() => setOpenConnect(true)}\r\n          >\r\n            Message\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n      <Modal\r\n        title=\"Add Note\"\r\n        centered\r\n        visible={openNote}\r\n        onCancel={() => setOpenNote(false)}\r\n        className=\"connect-modal\"\r\n        footer={null}\r\n      >\r\n        {notesValue && notesValue.length > 0 ? (\r\n          <List\r\n            dataSource={notesValue}\r\n            renderItem={(note, index) => (\r\n              <List.Item key={index}>\r\n                <List.Item.Meta\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  avatar={\r\n                    <Avatar\r\n                      src={avatar}\r\n                      style={{ height: 30, width: 30 }}\r\n                    />\r\n                  }\r\n                  description={<NotesListCard note={note} />}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          ></List>\r\n        ) : null}\r\n        <Form\r\n          name=\"notes\"\r\n          initialValues={{ notes: \"\" }}\r\n          onFinish={onNotesFinish}\r\n          onFinishFailed={onNotesFinishFailed}\r\n          form={notesForm}\r\n        >\r\n          <Form.Item\r\n            name=\"notes\"\r\n            rules={[{ required: true, message: \"This field is required!\" }]}\r\n          >\r\n            <TextArea\r\n              rows={4}\r\n              onChange={(e) => setNoteData(e.target.value)}\r\n              placeholder=\"Add notes here..!\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Message Community\"\r\n        centered\r\n        visible={openConnect}\r\n        onCancel={() => setOpenConnect(false)}\r\n        className=\"connect-modal\"\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"connect\"\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          initialValues={contactFormInitialValue}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"first_name\"\r\n            rules={[\r\n              { required: true, whitespace: true, message: \"Please input your first name!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"First Name\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"last_name\"\r\n            rules={[\r\n              { required: true, whitespace: true, message: \"Please input your last name!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Last Name\" />\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            rules={[\r\n              { required: true, message: \"Please input your phone number!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Phone\" />\r\n          </Form.Item> */}\r\n          <Form.Item\r\n            label=\"Message\"\r\n            name=\"message\"\r\n            rules={[{ required: true, message: \"Please input your message!\" }]}\r\n          >\r\n            <TextArea rows={4} placeholder=\"Write your message to the community here\" />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CardViewTour;\r\n"]},"metadata":{},"sourceType":"module"}
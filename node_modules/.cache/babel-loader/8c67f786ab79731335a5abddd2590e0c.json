{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\home-owner\\\\leads\\\\clients\\\\list-clients.js\";\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllLeadClients as _listAllLeadClients } from \"../../../../redux/actions/lead-client-actions\";\nimport { getLeadById as _getLeadById } from \"../../../../redux/actions/lead-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Skeleton, Card, Descriptions } from \"antd\";\nimport { compose } from \"redux\";\nimport { humanize } from \"../../../../helpers/string-helper\";\nimport { getNumberWithOrdinal } from \"../../../../helpers/number-helper\";\n\nvar ListClients = function ListClients(_ref) {\n  var leadId = _ref.leadId,\n      editLead = _ref.editLead,\n      editLeadLoading = _ref.editLeadLoading;\n  var dispatch = useDispatch(); // useEffect(() => {\n  // }, []);\n\n  var leadClientList = [];\n\n  if (editLead) {\n    if (editLead.client) {\n      leadClientList.push(editLead.client);\n\n      if (editLead.client.second_contact) {\n        leadClientList.push(editLead.client.second_contact);\n      }\n\n      if (editLead.client.third_contact) {\n        leadClientList.push(editLead.client.third_contact);\n      }\n    }\n  }\n\n  function formatNumber(e) {\n    if (e) {\n      var x = e.toString().replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\n      return !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\n    }\n  }\n\n  var clientDetails = leadClientList && leadClientList.map(function (client, index) {\n    return /*#__PURE__*/React.createElement(Card, {\n      title: \"\".concat(index > 0 ? getNumberWithOrdinal(index + 1) : \"\", \" Client Details\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions, {\n      column: 1,\n      layout: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, client.name), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Relationship\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, client.relationship ? humanize(client.relationship) : ''), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"tell:\".concat(client.phone),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }\n    }, formatNumber(client.phone))), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"tell:\".concat(client.cell),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }\n    }, formatNumber(client.cell))), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, client.email)));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Skeleton, {\n    loading: editLeadLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, clientDetails));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    editLead: state.lead.editLead,\n    editLeadLoading: state.lead.editLeadLoading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllLeadClients: function listAllLeadClients() {\n      return dispatch(_listAllLeadClients());\n    },\n    getLeadById: function getLeadById() {\n      return dispatch(_getLeadById());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ListClients);","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/home-owner/leads/clients/list-clients.js"],"names":["React","useEffect","connect","listAllLeadClients","getLeadById","useDispatch","Skeleton","Card","Descriptions","compose","humanize","getNumberWithOrdinal","ListClients","leadId","editLead","editLeadLoading","dispatch","leadClientList","client","push","second_contact","third_contact","formatNumber","e","x","toString","replace","match","clientDetails","map","index","name","relationship","phone","cell","email","mapStateToProps","state","lead","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllLeadClients } from \"../../../../redux/actions/lead-client-actions\";\r\nimport { getLeadById } from \"../../../../redux/actions/lead-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Skeleton, Card, Descriptions } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { humanize } from \"../../../../helpers/string-helper\";\r\nimport { getNumberWithOrdinal } from \"../../../../helpers/number-helper\";\r\n\r\nconst ListClients = ({ leadId, editLead, editLeadLoading }) => {\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n\r\n  // }, []);\r\n\r\n  var leadClientList = [];\r\n\r\n  if (editLead) {\r\n\r\n    if (editLead.client) {\r\n      leadClientList.push(editLead.client);\r\n      if (editLead.client.second_contact) {\r\n        leadClientList.push(editLead.client.second_contact)\r\n      }\r\n      if (editLead.client.third_contact) {\r\n        leadClientList.push(editLead.client.third_contact)\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  function formatNumber(e){\r\n    if(e){\r\n    var x = e.toString().replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\r\n    return !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\r\n    \r\n    }\r\n  }\r\n  const clientDetails =\r\n    leadClientList &&\r\n    leadClientList.map((client, index) => (\r\n      <Card\r\n        title={`${index > 0 ? getNumberWithOrdinal(index + 1) : \"\"\r\n          } Client Details`}\r\n      >\r\n        <Descriptions column={1} layout=\"horizontal\">\r\n          <Descriptions.Item label=\"Name\">{client.name}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Relationship\">\r\n            {client.relationship ? humanize(client.relationship) : ''}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Phone\"><a href={`tell:${client.phone}`}>{formatNumber(client.phone)}</a></Descriptions.Item>\r\n          <Descriptions.Item label=\"Cell\"><a href={`tell:${client.cell}`}>{formatNumber(client.cell)}</a></Descriptions.Item>\r\n          <Descriptions.Item label=\"Email\">{client.email}</Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <Skeleton loading={editLeadLoading}>{clientDetails}</Skeleton>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    editLead: state.lead.editLead,\r\n    editLeadLoading: state.lead.editLeadLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllLeadClients: () => dispatch(listAllLeadClients()),\r\n    getLeadById: () => dispatch(getLeadById()),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\r\n  ListClients\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
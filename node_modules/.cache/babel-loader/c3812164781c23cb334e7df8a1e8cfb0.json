{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\tours.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport UserService from \"../../../services/user-service\";\nimport API from \"../../../redux/api/lead-client-api\";\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\nimport { Breadcrumb, Tabs, message, Table, Popconfirm, Button } from \"antd\";\nimport moment from 'moment';\nimport RescheduleTour from './RescheduleTour';\nvar TabPane = Tabs.TabPane;\n\nvar Tours = function Tours(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allLeads = _useState4[0],\n      setAllLeads = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scheduleTour = _useState6[0],\n      setScheduleTour = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      scheduledTour = _useState8[0],\n      setScheduledTour = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pastTour = _useState10[0],\n      setPastTour = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      primaryClientLoaded = _useState12[0],\n      setPrimaryClientLoaded = _useState12[1];\n\n  var user = UserService.getAdminUser();\n  var timeZone = new Date().getTimezoneOffset();\n  useEffect(function () {\n    !primaryClientLoaded && getPrimaryClient();\n  }, [primaryClientLoaded]);\n\n  var getPrimaryClient = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var leadClient, leadData, tempScheduleTour, tempScheduledTour, tempPastTour;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.listAllLeadClients({\n                fields: \"*,leads.*,leads.home.*\",\n                filter: {\n                  user: {\n                    _eq: user.id\n                  }\n                }\n              });\n\n            case 2:\n              leadClient = _context.sent;\n\n              if (leadClient.data.length > 0) {\n                // console.log(leadClient.data, '<==leadClient.data');\n                leadData = leadClient.data[0].leads;\n                tempScheduleTour = [];\n                tempScheduledTour = [];\n                tempPastTour = [];\n                leadData.forEach(function (Item, index) {\n                  // console.log(Item, 'Item');\n                  if (Item.home && (Item.approval == \"accepted\" || Item.approval == \"pending\")) {\n                    var finalTime;\n\n                    if (Item.scheduled_date) {\n                      var time = new Date(Item.scheduled_date).getTime();\n                      finalTime = time + -timeZone * 60000;\n                    }\n\n                    if (Item.tour_status === 'scheduled' && !!Item.scheduled_date && new Date(finalTime).getTime() < new Date().getTime()) {\n                      tempPastTour.push({\n                        key: index,\n                        communityName: Item.home && Item.home.name,\n                        clientName: leadClient.data[0].name,\n                        dateTime: Item.scheduled_date ? \"\".concat(moment(finalTime).format('MM-DD-YYYY'), \" \").concat(moment(finalTime).format('LT')) : \"N/A\"\n                      });\n                    } else if (Item.tour_status === 'scheduled' && !!Item.scheduled_date) {\n                      var _finalTime;\n\n                      if (Item.scheduled_date) {\n                        var _time = new Date(Item.scheduled_date).getTime();\n\n                        _finalTime = _time + -timeZone * 60000;\n                      }\n\n                      tempScheduledTour.push({\n                        key: index,\n                        communityName: Item.home && Item.home.name,\n                        clientName: leadClient.data[0].name,\n                        dateTime: Item.scheduled_date ? \"\".concat(moment(_finalTime).format('MM-DD-YYYY'), \" \").concat(moment(_finalTime).format('LT')) : \"N/A\",\n                        action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RescheduleTour, {\n                          LeadId: Item.id,\n                          updateLeadData: updateLeadData,\n                          Date: Item.scheduled_date && moment(new Date(_finalTime), \"YYYY-MM-DD, hh:mm A\"),\n                          buttonTitle: \"Reschedule\",\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 68,\n                            columnNumber: 33\n                          }\n                        }), /*#__PURE__*/React.createElement(Popconfirm, {\n                          title: \"Are you sure you want to cancel?\",\n                          onConfirm: function onConfirm() {\n                            return updateLeadData(Item.id, {\n                              tour_status: \"canceled\"\n                            });\n                          },\n                          onCancel: popConfirmCancel,\n                          okText: \"Yes\",\n                          cancelText: \"No\",\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 69,\n                            columnNumber: 33\n                          }\n                        }, /*#__PURE__*/React.createElement(Button, {\n                          danger: true,\n                          shape: \"round\",\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 75,\n                            columnNumber: 34\n                          }\n                        }, \"Cancel\")))\n                      });\n                    } else {\n                      var _finalTime2;\n\n                      if (Item.scheduled_date) {\n                        var _time2 = new Date(Item.scheduled_date).getTime();\n\n                        _finalTime2 = _time2 + -timeZone * 60000;\n                      }\n\n                      console.log(Item);\n                      tempScheduleTour.push({\n                        key: index,\n                        communityName: Item.home && Item.home.name,\n                        clientName: leadClient.data[0].name,\n                        //dateTime: Item.scheduled_date ? `${moment(Item.scheduled_date).format('MM-DD-YYYY')} ${moment(Item.scheduled_date).format('LT')}` : \"N/A\",\n                        action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RescheduleTour, {\n                          LeadId: Item.id,\n                          updateLeadData: updateLeadData,\n                          Date: Item.scheduled_date && moment(new Date(_finalTime2), \"YYYY-MM-DD, hh:mm A\"),\n                          buttonTitle: \"Schedule\",\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 93,\n                            columnNumber: 33\n                          }\n                        }))\n                      });\n                    }\n                  }\n                });\n                setScheduleTour(tempScheduleTour);\n                setScheduledTour(tempScheduledTour);\n                setPastTour(tempPastTour);\n                setPrimaryClientLoaded(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getPrimaryClient() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var popConfirmCancel = function popConfirmCancel(e) {// message.error('Click on No');\n  };\n\n  var updateLeadData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(LeadId, Data) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return dispatch(updateLead(LeadId, Data));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 8:\n              getPrimaryClient();\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n\n    return function updateLeadData(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var scheduledTourColumns = [{\n    title: 'Community Name',\n    dataIndex: 'communityName' //sorter: (a, b) => a.communityName.localeCompare(b.communityName),\n\n  }, {\n    title: 'Client Name',\n    dataIndex: 'clientName' // sorter: {\n    //     compare: (a, b) => a.clientName - b.clientName,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Date & Time',\n    dataIndex: 'dateTime' //sorter: (a, b) => a.dateTime.localeCompare(b.dateTime),\n\n  }, {\n    title: 'Action',\n    dataIndex: 'action' // sorter: {\n    //     compare: (a, b) => a.action - b.action,\n    //     multiple: 1,\n    // },\n\n  }];\n  var scheduleTourColumns = [{\n    title: 'Community Name',\n    dataIndex: 'communityName' //sorter: (a, b) => a.communityName.localeCompare(b.communityName),\n\n  }, {\n    title: 'Client Name',\n    dataIndex: 'clientName' // sorter: {\n    //     compare: (a, b) => a.clientName - b.clientName,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Action',\n    dataIndex: 'action' // sorter: {\n    //     compare: (a, b) => a.action - b.action,\n    //     multiple: 1,\n    // },\n\n  }];\n  var pastTourColumns = [{\n    title: 'Community Name',\n    dataIndex: 'communityName' // sorter: {\n    //     compare: (a, b) => a.communityName - b.communityName,\n    //     multiple: 4,\n    // },\n\n  }, {\n    title: 'Client Name',\n    dataIndex: 'clientName' // sorter: {\n    //     compare: (a, b) => a.clientName - b.clientName,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Date & Time',\n    dataIndex: 'dateTime' // sorter: {\n    //     compare: (a, b) => a.dateTime - b.dateTime,\n    //     multiple: 2,\n    // },\n\n  }];\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"Client\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Communities\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"Tours\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"scheduleTour\",\n    onChange: function onChange() {\n      return console.log(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Schedule Tour\",\n    key: \"scheduleTour\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: scheduleTourColumns,\n    dataSource: scheduleTour,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Scheduled Tour\",\n    key: \"scheduledTour\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: scheduledTourColumns,\n    dataSource: scheduledTour,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Past Tour\",\n    key: \"pastTour\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: pastTourColumns,\n    dataSource: pastTour,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tours);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/admin/client/tours.js"],"names":["React","useState","useEffect","connect","useDispatch","UserService","API","updateLead","Breadcrumb","Tabs","message","Table","Popconfirm","Button","moment","RescheduleTour","TabPane","Tours","history","dispatch","submitted","setSubmitted","allLeads","setAllLeads","scheduleTour","setScheduleTour","scheduledTour","setScheduledTour","pastTour","setPastTour","primaryClientLoaded","setPrimaryClientLoaded","user","getAdminUser","timeZone","Date","getTimezoneOffset","getPrimaryClient","listAllLeadClients","fields","filter","_eq","id","leadClient","data","length","leadData","leads","tempScheduleTour","tempScheduledTour","tempPastTour","forEach","Item","index","home","approval","finalTime","scheduled_date","time","getTime","tour_status","push","key","communityName","name","clientName","dateTime","format","action","updateLeadData","popConfirmCancel","console","log","e","LeadId","Data","scheduledTourColumns","title","dataIndex","scheduleTourColumns","pastTourColumns","onChange","pagination","filters","sorter","extra","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport API from \"../../../redux/api/lead-client-api\";\r\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\r\nimport { Breadcrumb, Tabs, message, Table, Popconfirm, Button } from \"antd\";\r\nimport moment from 'moment';\r\nimport RescheduleTour from './RescheduleTour';\r\n\r\nconst { TabPane } = Tabs;\r\nconst Tours = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [allLeads, setAllLeads] = useState({});\r\n    const [scheduleTour, setScheduleTour] = useState([]);\r\n    const [scheduledTour, setScheduledTour] = useState([]);\r\n    const [pastTour, setPastTour] = useState([]);\r\n    const [primaryClientLoaded, setPrimaryClientLoaded] = useState(false);\r\n    const user = UserService.getAdminUser();\r\n    const timeZone = new Date().getTimezoneOffset();\r\n\r\n    useEffect(() => {\r\n        !primaryClientLoaded && getPrimaryClient();\r\n    }, [primaryClientLoaded]);\r\n\r\n\r\n    const getPrimaryClient = async () => {\r\n        var leadClient = await API.listAllLeadClients({ fields: \"*,leads.*,leads.home.*\", filter: { user: { _eq: user.id } } });\r\n        if (leadClient.data.length > 0) {\r\n            // console.log(leadClient.data, '<==leadClient.data');\r\n            let leadData = leadClient.data[0].leads;\r\n            let tempScheduleTour = [];\r\n            let tempScheduledTour = [];\r\n            let tempPastTour = [];\r\n            leadData.forEach((Item, index) => {\r\n                // console.log(Item, 'Item');\r\n                if (Item.home && (Item.approval == \"accepted\" || Item.approval == \"pending\")) {\r\n                    let finalTime;\r\n                    if (Item.scheduled_date) {\r\n                        let time = new Date(Item.scheduled_date).getTime();\r\n                        finalTime = time + (-timeZone * 60000)\r\n\r\n                    }\r\n                    if (Item.tour_status === 'scheduled' && !!Item.scheduled_date && (new Date(finalTime).getTime() < new Date().getTime())) {\r\n                        tempPastTour.push({\r\n                            key: index,\r\n                            communityName: Item.home && Item.home.name,\r\n                            clientName: leadClient.data[0].name,\r\n                            dateTime: Item.scheduled_date ? `${moment(finalTime).format('MM-DD-YYYY')} ${moment(finalTime).format('LT')}` : \"N/A\",\r\n                        });\r\n                    }\r\n                    else if (Item.tour_status === 'scheduled' && !!Item.scheduled_date) {\r\n                        let finalTime;\r\n                        if (Item.scheduled_date) {\r\n                            let time = new Date(Item.scheduled_date).getTime();\r\n                            finalTime = time + (-timeZone * 60000)\r\n\r\n                        }\r\n                        tempScheduledTour.push({\r\n                            key: index,\r\n                            communityName: Item.home && Item.home.name,\r\n                            clientName: leadClient.data[0].name,\r\n                            dateTime: Item.scheduled_date ? `${moment(finalTime).format('MM-DD-YYYY')} ${moment(finalTime).format('LT')}` : \"N/A\",\r\n                            action: <>\r\n                                <RescheduleTour LeadId={Item.id} updateLeadData={updateLeadData} Date={Item.scheduled_date && moment(new Date(finalTime), \"YYYY-MM-DD, hh:mm A\")} buttonTitle={\"Reschedule\"} />\r\n                                <Popconfirm\r\n                                    title=\"Are you sure you want to cancel?\"\r\n                                    onConfirm={() => updateLeadData(Item.id, { tour_status: \"canceled\" })}\r\n                                    onCancel={popConfirmCancel}\r\n                                    okText=\"Yes\"\r\n                                    cancelText=\"No\"\r\n                                ><Button danger shape=\"round\" >Cancel</Button>\r\n                                </Popconfirm></>,\r\n                        });\r\n                    }\r\n                    else {\r\n                        let finalTime;\r\n                        if (Item.scheduled_date) {\r\n                            let time = new Date(Item.scheduled_date).getTime();\r\n                            finalTime = time + (-timeZone * 60000)\r\n\r\n                        }\r\n                        console.log(Item);\r\n                        tempScheduleTour.push({\r\n                            key: index,\r\n                            communityName: Item.home && Item.home.name,\r\n                            clientName: leadClient.data[0].name,\r\n                            //dateTime: Item.scheduled_date ? `${moment(Item.scheduled_date).format('MM-DD-YYYY')} ${moment(Item.scheduled_date).format('LT')}` : \"N/A\",\r\n                            action: <>\r\n                                <RescheduleTour LeadId={Item.id} updateLeadData={updateLeadData} Date={Item.scheduled_date && moment(new Date(finalTime), \"YYYY-MM-DD, hh:mm A\")} buttonTitle={\"Schedule\"} /></>,\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            setScheduleTour(tempScheduleTour);\r\n            setScheduledTour(tempScheduledTour);\r\n            setPastTour(tempPastTour);\r\n            setPrimaryClientLoaded(true);\r\n\r\n        }\r\n    }\r\n    const popConfirmCancel = (e) => {\r\n        // message.error('Click on No');\r\n    }\r\n\r\n    const updateLeadData = async (LeadId, Data) => {\r\n        try {\r\n            await dispatch(updateLead(LeadId, Data));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        getPrimaryClient();\r\n    }\r\n\r\n    const scheduledTourColumns = [\r\n        {\r\n            title: 'Community Name',\r\n            dataIndex: 'communityName',\r\n            //sorter: (a, b) => a.communityName.localeCompare(b.communityName),\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'clientName',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.clientName - b.clientName,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Date & Time',\r\n            dataIndex: 'dateTime',\r\n            //sorter: (a, b) => a.dateTime.localeCompare(b.dateTime),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.action - b.action,\r\n            //     multiple: 1,\r\n            // },\r\n        },\r\n    ];\r\n    const scheduleTourColumns = [\r\n        {\r\n            title: 'Community Name',\r\n            dataIndex: 'communityName',\r\n            //sorter: (a, b) => a.communityName.localeCompare(b.communityName),\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'clientName',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.clientName - b.clientName,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.action - b.action,\r\n            //     multiple: 1,\r\n            // },\r\n        },\r\n    ];\r\n    const pastTourColumns = [\r\n        {\r\n            title: 'Community Name',\r\n            dataIndex: 'communityName',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.communityName - b.communityName,\r\n            //     multiple: 4,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'clientName',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.clientName - b.clientName,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Date & Time',\r\n            dataIndex: 'dateTime',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.dateTime - b.dateTime,\r\n            //     multiple: 2,\r\n            // },\r\n        },\r\n    ];\r\n\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>Client</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Communities</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Tours</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div>\r\n                <Tabs defaultActiveKey=\"scheduleTour\" onChange={() => console.log(0)}>\r\n                    <TabPane tab=\"Schedule Tour\" key=\"scheduleTour\">\r\n                        <Table columns={scheduleTourColumns} dataSource={scheduleTour} onChange={onChange} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Scheduled Tour\" key=\"scheduledTour\">\r\n                        <Table columns={scheduledTourColumns} dataSource={scheduledTour} onChange={onChange} />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"Past Tour\" key=\"pastTour\">\r\n                        <Table columns={pastTourColumns} dataSource={pastTour} onChange={onChange} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n\r\n        </React.Fragment >\r\n    );\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tours);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\mainSearch.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin as _signin } from \"../../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport MapViewCommunity from \"./search-map\";\nimport homeApi from \"../../../redux/api/home-api\";\nimport leadApi from \"../../../redux/api/lead-api\";\nimport DisplayCard from \"./DisplayCard\";\nimport { Pagination, Dropdown, Menu, InputNumber, Empty, Form, Input, Select, Radio, Checkbox, Button, Card, Row, Col, Spin, List, Avatar, Modal, Tooltip, Popconfirm, Switch } from \"antd\";\nimport Icon, { PhoneOutlined } from \"@ant-design/icons\";\nimport { FilterFilled, InfoCircleOutlined, LeftOutlined } from \"@ant-design/icons\";\nimport { maxBy } from \"ramda\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport leadClientAPI from \"../../../redux/api/lead-client-api\";\nimport userService from \"../../../services/user-service\";\nimport API from \"../../../redux/api/saved-search\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport Config from \"../../../config\";\nimport { useParams } from \"react-router\";\nimport { devicesAcceptedOptions, mileageOptions, specialServicesOptions, dietOptions } from \"../../../constants/defaultValues\";\nimport SendMessage from \"./send-message\";\nimport Search from \"antd/lib/transfer/search\";\nimport { GoogleMap, useLoadScript, StandaloneSearchBox } from \"google-maps-react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\nvar confirm = Modal.confirm;\nGeocode.setApiKey(Config.googleMapsAPIkey);\nvar Option = Select.Option;\n\nvar _useLoadScript = useLoadScript({\n  googleMapsApiKey: \"YOUR_API_KEY\" // Replace with your Google Maps API key\n\n}),\n    isLoaded = _useLoadScript.isLoaded,\n    loadError = _useLoadScript.loadError;\n\nvar handleSelect = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n    var results, latLng;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return geocodeByAddress(address);\n\n          case 3:\n            results = _context.sent;\n            _context.next = 6;\n            return getLatLng(results[0]);\n\n          case 6:\n            latLng = _context.sent;\n            console.log(\"Selected location:\", latLng); // Do something with the selected location, such as updating state or making API calls\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"Error selecting location:\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function handleSelect(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar DashboardSearch = function DashboardSearch(_ref2) {\n  var history = _ref2.history;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"City\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signin: function signin(email, password) {\n      return dispatch(_signin(email, password));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardSearch);","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/mainSearch.js"],"names":["React","useState","useEffect","connect","signin","useDispatch","MapViewCommunity","homeApi","leadApi","DisplayCard","Pagination","Dropdown","Menu","InputNumber","Empty","Form","Input","Select","Radio","Checkbox","Button","Card","Row","Col","Spin","List","Avatar","Modal","Tooltip","Popconfirm","Switch","Icon","PhoneOutlined","FilterFilled","InfoCircleOutlined","LeftOutlined","maxBy","humanize","leadClientAPI","userService","API","notifyUser","GooglePlacesAutocomplete","Geocode","Config","useParams","devicesAcceptedOptions","mileageOptions","specialServicesOptions","dietOptions","SendMessage","Search","GoogleMap","useLoadScript","StandaloneSearchBox","PlacesAutocomplete","geocodeByAddress","getLatLng","confirm","setApiKey","googleMapsAPIkey","Option","googleMapsApiKey","isLoaded","loadError","handleSelect","address","results","latLng","console","log","error","DashboardSearch","history","mapStateToProps","state","mapDispatchToProps","dispatch","email","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MapViewCommunity from \"./search-map\";\r\nimport homeApi from \"../../../redux/api/home-api\";\r\nimport leadApi from \"../../../redux/api/lead-api\";\r\nimport DisplayCard from \"./DisplayCard\";\r\nimport {\r\n  Pagination,\r\n  Dropdown,\r\n  Menu,\r\n  InputNumber,\r\n  Empty,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Radio,\r\n  Checkbox,\r\n  Button,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Spin,\r\n  List,\r\n  Avatar,\r\n  Modal,\r\n  Tooltip,\r\n  Popconfirm,\r\n  Switch,\r\n} from \"antd\";\r\nimport Icon, { PhoneOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  FilterFilled,\r\n  InfoCircleOutlined,\r\n  LeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { maxBy } from \"ramda\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport leadClientAPI from \"../../../redux/api/lead-client-api\";\r\nimport userService from \"../../../services/user-service\";\r\nimport API from \"../../../redux/api/saved-search\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\nimport Geocode from \"react-geocode\";\r\nimport Config from \"../../../config\";\r\nimport { useParams } from \"react-router\";\r\nimport {\r\n  devicesAcceptedOptions,\r\n  mileageOptions,\r\n  specialServicesOptions,\r\n  dietOptions,\r\n} from \"../../../constants/defaultValues\";\r\nimport SendMessage from \"./send-message\";\r\nimport Search from \"antd/lib/transfer/search\";\r\n\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  StandaloneSearchBox,\r\n} from \"google-maps-react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-google-places-autocomplete\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nGeocode.setApiKey(Config.googleMapsAPIkey);\r\n\r\nconst { Option } = Select;\r\nconst { isLoaded, loadError } = useLoadScript({\r\n  googleMapsApiKey: \"YOUR_API_KEY\", // Replace with your Google Maps API key\r\n});\r\n\r\nconst handleSelect = async (address) => {\r\n  try {\r\n    const results = await geocodeByAddress(address);\r\n    const latLng = await getLatLng(results[0]);\r\n    console.log(\"Selected location:\", latLng);\r\n    // Do something with the selected location, such as updating state or making API calls\r\n  } catch (error) {\r\n    console.error(\"Error selecting location:\", error);\r\n  }\r\n};\r\nconst DashboardSearch = ({ history }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <Search placeholder=\"City\" />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    signin: (email, password) => dispatch(signin(email, password)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardSearch);\r\n"]},"metadata":{},"sourceType":"module"}
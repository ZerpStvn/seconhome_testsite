{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { Types } from \"../constants/resident-types\";\nimport API from \"../api/resident-api\";\nexport function listAllResidents(params) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.listAllResidents(params).then(function (data) {\n                dispatch({\n                  type: Types.GET_RESIDENT_LIST,\n                  payload: {\n                    data: data.data,\n                    residentListLoading: false\n                  }\n                });\n              }, function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function getResidentById(id) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return API.getResidentById(id, params).then(function (data) {\n                dispatch({\n                  type: Types.GET_EDIT_RESIDENT,\n                  payload: {\n                    data: data.data,\n                    editResidentLoading: false\n                  }\n                });\n              }, function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context2.next = 7;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport function createResident(formData) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return API.createResident(formData).then(function (data) {\n                dispatch({\n                  type: Types.ADD_RESIDENT,\n                  payload: {\n                    message: \"Resident Updated\",\n                    success: true\n                  }\n                });\n              }, function (error) {\n                console.log(error.response);\n\n                if (error.response && error.response.data && error.response.data.message) {\n                  dispatch({\n                    type: Types.ADD_RESIDENT,\n                    payload: {\n                      success: false,\n                      message: error.response.data.message\n                    }\n                  });\n                }\n              });\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: Types.ADD_RESIDENT,\n                payload: {\n                  message: \"There is an error\",\n                  success: false\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 5]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              try {\n                dispatch({\n                  type: Types.ADD_RESIDENT,\n                  payload: {}\n                });\n                window.location = window.location.origin;\n              } catch (e) {}\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}\nexport function updateResident(id, formData) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return API.updateResident(id, formData).then(function (data) {\n                dispatch({\n                  type: Types.EDIT_RESIDENT,\n                  payload: {\n                    message: \"Resident Updated\",\n                    success: true\n                  }\n                });\n              }, function (error) {\n                console.log(error.response);\n\n                if (error.response && error.response.data && error.response.data.message) {\n                  dispatch({\n                    type: Types.EDIT_RESIDENT,\n                    payload: {\n                      success: false,\n                      message: error.response.data.message\n                    }\n                  });\n                }\n              });\n\n            case 3:\n              _context5.next = 7;\n              break;\n\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 5]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/redux/actions/resident-actions.js"],"names":["Types","API","listAllResidents","params","dispatch","getState","then","data","type","GET_RESIDENT_LIST","payload","residentListLoading","error","console","log","getResidentById","id","GET_EDIT_RESIDENT","editResidentLoading","createResident","formData","ADD_RESIDENT","message","success","response","window","location","origin","e","updateResident","EDIT_RESIDENT"],"mappings":"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","sourcesContent":["import { Types } from \"../constants/resident-types\";\r\nimport API from \"../api/resident-api\";\r\n\r\nexport function listAllResidents(params) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.listAllResidents(params).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.GET_RESIDENT_LIST,\r\n            payload: {data:data.data,residentListLoading:false},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n}\r\n\r\nexport function getResidentById(id,params = {}) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.getResidentById(id,params).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.GET_EDIT_RESIDENT,\r\n            payload: {data:data.data,editResidentLoading:false},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      \r\n    }\r\n  };\r\n    \r\n}\r\n\r\nexport function createResident(formData) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.createResident(formData).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.ADD_RESIDENT,\r\n            payload: {message:\"Resident Updated\",success:true},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error.response);\r\n        if(error.response && error.response.data && error.response.data.message) {\r\n          dispatch({\r\n            type: Types.ADD_RESIDENT,\r\n            payload: {success: false, message: error.response.data.message},\r\n          });\r\n        }  \r\n        }\r\n      );\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Types.ADD_RESIDENT,\r\n        payload: {message:\"There is an error\",success:false},\r\n      });\r\n    }\r\n  };\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      dispatch({\r\n        type: Types.ADD_RESIDENT,\r\n        payload: {},\r\n      });\r\n      window.location = window.location.origin;\r\n    } catch (e) {}\r\n  };\r\n}\r\n\r\nexport function updateResident(id,formData) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.updateResident(id,formData).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.EDIT_RESIDENT,\r\n            payload: {message:\"Resident Updated\",success:true},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error.response);\r\n        if(error.response && error.response.data && error.response.data.message) {\r\n          dispatch({\r\n            type: Types.EDIT_RESIDENT,\r\n            payload: {success: false, message: error.response.data.message},\r\n          });\r\n        }  \r\n        }\r\n      );\r\n    } catch (e) {\r\n      \r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\home-owner\\\\communities\\\\rooms\\\\list-rooms.js\";\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllRooms as _listAllRooms, setRoomListLoading as _setRoomListLoading, deleteRoom as _deleteRoom, cloneRoom as _cloneRoom } from \"../../../../redux/actions/room-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { notifyUser } from \"../../../../services/notification-service\";\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Tooltip, Popconfirm } from \"antd\";\nimport { compose } from \"redux\";\nimport { EditOutlined, CopyOutlined, DeleteOutlined, FilterFilled } from '@ant-design/icons';\nimport { data } from \"jquery\";\nimport { roomTypesOptions, roomCareTypesOptions, floorLevelOptions, bathroomTypesOptions } from \"../../../../constants/defaultValues\";\nimport { clone, values } from \"ramda\";\nimport { getNumberWithOrdinal } from \"../../../../helpers/number-helper\";\nimport { getColumnSearchProps } from \"../../../../helpers/columnSearchProps\";\nimport { humanize } from \"../../../../helpers/string-helper\";\n\nvar ListRooms = function ListRooms(_ref) {\n  var homeId = _ref.homeId,\n      roomList = _ref.roomList,\n      roomListLoading = _ref.roomListLoading,\n      roomMessage = _ref.roomMessage,\n      roomUpdated = _ref.roomUpdated,\n      roomListMeta = _ref.roomListMeta;\n\n  var _useState = useState({\n    pageSize: 20,\n    current: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var _useState5 = useState({\n    home: {\n      _eq: homeId\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var _useState7 = useState(roomListLoading),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      initialLoader = _useState10[0],\n      setInitialLoader = _useState10[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (roomListLoading || initialLoader) {\n      dispatch(_listAllRooms({\n        filter: filters,\n        sort: sort,\n        page: pagination.current,\n        limit: pagination.pageSize,\n        meta: \"*\"\n      }));\n      setInitialLoader(false);\n    }\n\n    if (roomListMeta) {\n      setPagination(_objectSpread({}, pagination, {\n        total: roomListMeta.filter_count\n      }));\n    }\n\n    if (roomUpdated) {\n      notifyUser(roomMessage, \"success\");\n    }\n\n    setLoading(roomListLoading);\n    return function () {\n      console.log(\"Rooms Unmounting\");\n    };\n  }, [roomListLoading]);\n\n  var handelTableChange = function handelTableChange(_ref2, tableFilters, sorter) {\n    var current = _ref2.current;\n    console.log(tableFilters);\n\n    if (sorter && sorter.field) {\n      if (sorter.order == \"ascend\") {\n        setSort(sorter.field);\n      } else {\n        setSort(\"-\" + sorter.field);\n      }\n    }\n\n    var _filters = {};\n    Object.entries(tableFilters).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n\n      var orFilter = [];\n\n      if (value) {\n        switch (key) {\n          case \"type\":\n            _filters.type = {\n              _in: value\n            };\n            break;\n\n          case \"room_care_type\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                room_care_type: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"floor_level\":\n            _filters.floor_level = {\n              _in: value\n            };\n            break;\n\n          case \"name\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                name: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"base_rate\":\n            _filters.base_rate = {\n              _in: value\n            };\n            break;\n\n          case \"bathroom_type\":\n            _filters.bathroom_type = {\n              _in: value\n            };\n            break;\n\n          default:\n            break;\n        }\n      } else {}\n    });\n    setFilters(_objectSpread({}, _filters, {\n      home: {\n        _eq: homeId\n      }\n    }));\n    setPagination(_objectSpread({}, pagination, {\n      current: current\n    }));\n    dispatch(_setRoomListLoading(true));\n  };\n\n  var columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    //...getColumnSearchProps('name'),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/owner/communities/\".concat(homeId, \"/rooms/\").concat(room.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, text));\n    }\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    //filters: roomTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 44\n      }\n    })),\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, humanize(text));\n    }\n  }, {\n    title: 'Bathroom Type',\n    dataIndex: 'bathroom_type',\n    key: 'bathroom_type',\n    //filters: bathroomTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 44\n      }\n    })),\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, humanize(text));\n    }\n  }, {\n    title: 'Pricing',\n    dataIndex: 'base_rate',\n    key: 'base_rate',\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    //...getColumnSearchProps('base_rate'),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, text && \"$\".concat(text));\n    }\n  }, {\n    title: 'Room Care Type',\n    dataIndex: 'room_care_type',\n    key: 'room_care_type',\n    //filters: roomCareTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 44\n      }\n    })),\n    render: function render(room_care_type) {\n      return room_care_type !== null && room_care_type.map(function (tag) {\n        return /*#__PURE__*/React.createElement(Tag, {\n          color: \"blue\",\n          key: tag,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }\n        }, humanize(tag));\n      });\n    }\n  }, {\n    title: 'Floor Level',\n    dataIndex: 'floor_level',\n    key: 'floor_level',\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    //filters: floorLevelOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 44\n      }\n    })),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, text && \"\".concat(getNumberWithOrdinal(text), \" Floor\"));\n    }\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Edit\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/owner/communities/\".concat(homeId, \"/rooms/\").concat(room.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 93\n        }\n      }))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Clone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        onClick: function onClick() {\n          handelOnClone(room.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CopyOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Delete\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Are you sure to delete this Room?\",\n        onConfirm: function onConfirm() {\n          handelOnDelete(room.key);\n        },\n        okText: \"Yes\",\n        cancelText: \"No\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        onClick: function onClick() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }];\n\n  var handelOnDelete = function handelOnDelete(id) {\n    setLoading(true); // dispatch(setRoomListLoading(true));\n\n    dispatch(_deleteRoom(id));\n  };\n\n  var handelOnClone = function handelOnClone(id) {\n    setLoading(true); // dispatch(setRoomListLoading(true));\n\n    dispatch(_cloneRoom(id));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    style: {\n      marginBottom: 16\n    },\n    className: \"btn-group-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"/dashboard/owner/communities/\".concat(homeId, \"/rooms/add\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Add Room\")), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    loading: roomListLoading || initialLoader,\n    dataSource: roomList.map(function (_ref5) {\n      var name = _ref5.name,\n          type = _ref5.type,\n          base_rate = _ref5.base_rate,\n          id = _ref5.id,\n          room_care_type = _ref5.room_care_type,\n          floor_level = _ref5.floor_level,\n          bathroom_type = _ref5.bathroom_type;\n      return {\n        name: name,\n        type: type,\n        base_rate: base_rate,\n        room_care_type: room_care_type,\n        floor_level: floor_level,\n        key: id,\n        bathroom_type: bathroom_type\n      };\n    }),\n    pagination: pagination,\n    onChange: handelTableChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomList: state.room.roomList,\n    roomListLoading: state.room.roomListLoading,\n    roomListMeta: state.room.roomListMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllRooms: function listAllRooms() {\n      return dispatch(_listAllRooms());\n    },\n    setRoomListLoading: function setRoomListLoading() {\n      return dispatch(_setRoomListLoading());\n    },\n    deleteRoom: function deleteRoom() {\n      return dispatch(_deleteRoom());\n    },\n    cloneRoom: function cloneRoom() {\n      return dispatch(_cloneRoom());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ListRooms);","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/home-owner/communities/rooms/list-rooms.js"],"names":["React","useEffect","useState","useRef","connect","listAllRooms","setRoomListLoading","deleteRoom","cloneRoom","useDispatch","Link","notifyUser","List","Divider","Row","Col","Button","PageHeader","Table","Tag","Space","Breadcrumb","Tooltip","Popconfirm","compose","EditOutlined","CopyOutlined","DeleteOutlined","FilterFilled","data","roomTypesOptions","roomCareTypesOptions","floorLevelOptions","bathroomTypesOptions","clone","values","getNumberWithOrdinal","getColumnSearchProps","humanize","ListRooms","homeId","roomList","roomListLoading","roomMessage","roomUpdated","roomListMeta","pageSize","current","pagination","setPagination","sort","setSort","home","_eq","filters","setFilters","loading","setLoading","initialLoader","setInitialLoader","dispatch","filter","page","limit","meta","total","filter_count","console","log","handelTableChange","tableFilters","sorter","field","order","_filters","Object","entries","forEach","key","value","orFilter","type","_in","map","push","room_care_type","_contains","_or","floor_level","name","base_rate","bathroom_type","columns","title","dataIndex","sortDirections","render","text","room","filterIcon","tag","handelOnClone","handelOnDelete","id","marginBottom","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllRooms, setRoomListLoading, deleteRoom, cloneRoom } from \"../../../../redux/actions/room-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { notifyUser } from \"../../../../services/notification-service\";\r\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Tooltip, Popconfirm } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { EditOutlined, CopyOutlined, DeleteOutlined, FilterFilled } from '@ant-design/icons';\r\nimport { data } from \"jquery\";\r\nimport { roomTypesOptions, roomCareTypesOptions, floorLevelOptions, bathroomTypesOptions } from \"../../../../constants/defaultValues\";\r\nimport { clone, values } from \"ramda\";\r\nimport { getNumberWithOrdinal } from \"../../../../helpers/number-helper\";\r\nimport { getColumnSearchProps } from \"../../../../helpers/columnSearchProps\";\r\nimport { humanize } from \"../../../../helpers/string-helper\";\r\n\r\nconst ListRooms = ({ homeId, roomList, roomListLoading, roomMessage, roomUpdated, roomListMeta }) => {\r\n\r\n  const [pagination, setPagination] = useState({\r\n    pageSize: 20,\r\n    current: 1,\r\n  });\r\n  const [sort, setSort] = useState([]);\r\n  const [filters, setFilters] = useState({ home: { _eq: homeId } });\r\n  const [loading, setLoading] = useState(roomListLoading);\r\n  const [initialLoader, setInitialLoader] = useState(true);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (roomListLoading || initialLoader) {\r\n      dispatch(listAllRooms({ filter: filters, sort, page: pagination.current, limit: pagination.pageSize, meta: \"*\" }));\r\n      setInitialLoader(false);\r\n    }\r\n    if (roomListMeta) {\r\n      setPagination({ ...pagination, total: roomListMeta.filter_count })\r\n    }\r\n    if (roomUpdated) {\r\n      notifyUser(roomMessage, \"success\");\r\n    }\r\n    setLoading(roomListLoading);\r\n    return () => {\r\n      console.log(\"Rooms Unmounting\");\r\n    };\r\n  }, [roomListLoading]);\r\n\r\n  const handelTableChange = ({ current }, tableFilters, sorter) => {\r\n    console.log(tableFilters);\r\n    if (sorter && sorter.field) {\r\n      if (sorter.order == \"ascend\") {\r\n        setSort(sorter.field);\r\n      } else {\r\n        setSort(\"-\" + sorter.field);\r\n      }\r\n    }\r\n\r\n    let _filters = {};\r\n\r\n\r\n    Object.entries(tableFilters).forEach(([key, value]) => {\r\n      let orFilter = [];\r\n      if (value) {\r\n        switch (key) {\r\n          case \"type\":\r\n            _filters.type = { _in: value }\r\n            break;\r\n\r\n          case \"room_care_type\":\r\n            orFilter = [];\r\n            value.map((data) => { orFilter.push({ room_care_type: { _contains: data } }) })\r\n            _filters._or = orFilter;\r\n            break;\r\n          case \"floor_level\":\r\n            _filters.floor_level = { _in: value }\r\n            break;\r\n          case \"name\":\r\n            orFilter = [];\r\n            value.map((data) => { orFilter.push({ name: { _contains: data } }) })\r\n            _filters._or = orFilter;\r\n            break;\r\n          case \"base_rate\":\r\n            _filters.base_rate = { _in: value }\r\n            break;\r\n          case \"bathroom_type\":\r\n            _filters.bathroom_type = { _in: value }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n\r\n      }\r\n\r\n    });\r\n    setFilters({ ..._filters, home: { _eq: homeId } });\r\n    setPagination({ ...pagination, current });\r\n    dispatch(setRoomListLoading(true));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      //sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      //...getColumnSearchProps('name'),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          <Link to={`/owner/communities/${homeId}/rooms/${room.key}`}>{text}</Link>\r\n\r\n        </Space>\r\n      )\r\n    },\r\n\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n      //filters: roomTypesOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      //sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {humanize(text)}\r\n\r\n        </Space>\r\n      )\r\n    },\r\n    {\r\n      title: 'Bathroom Type',\r\n      dataIndex: 'bathroom_type',\r\n      key: 'bathroom_type',\r\n      //filters: bathroomTypesOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      //sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {humanize(text)}\r\n\r\n        </Space>\r\n      )\r\n    },\r\n\r\n    {\r\n      title: 'Pricing',\r\n      dataIndex: 'base_rate',\r\n      key: 'base_rate',\r\n      //sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      //...getColumnSearchProps('base_rate'),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {text && `$${text}`}\r\n          {/* {`$${text}`} */}\r\n        </Space>\r\n      )\r\n\r\n    },\r\n    {\r\n      title: 'Room Care Type',\r\n      dataIndex: 'room_care_type',\r\n      key: 'room_care_type',\r\n      //filters: roomCareTypesOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      render: (room_care_type) => (\r\n        room_care_type !== null && room_care_type.map(tag => (\r\n          <Tag color=\"blue\" key={tag}>\r\n            {humanize(tag)}\r\n          </Tag>\r\n        ))\r\n      )\r\n    },\r\n    {\r\n      title: 'Floor Level',\r\n      dataIndex: 'floor_level',\r\n      key: 'floor_level',\r\n      //sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      //filters: floorLevelOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {text && `${getNumberWithOrdinal(text)} Floor`}\r\n\r\n        </Space>\r\n      )\r\n    },\r\n\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          <Tooltip title=\"Edit\"><Link to={`/owner/communities/${homeId}/rooms/${room.key}`}><EditOutlined /></Link></Tooltip>\r\n          <Tooltip title=\"Clone\">\r\n            <Link onClick={() => { handelOnClone(room.key) }}>\r\n              <CopyOutlined />\r\n            </Link>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Delete\">\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this Room?\"\r\n              onConfirm={() => { handelOnDelete(room.key) }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\">\r\n              <Link onClick={() => { }}>\r\n                <DeleteOutlined />\r\n              </Link>\r\n            </Popconfirm>\r\n\r\n          </Tooltip>\r\n\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handelOnDelete = (id) => {\r\n    setLoading(true);\r\n    // dispatch(setRoomListLoading(true));\r\n    dispatch(deleteRoom(id))\r\n  }\r\n  const handelOnClone = (id) => {\r\n    setLoading(true);\r\n    // dispatch(setRoomListLoading(true));\r\n    dispatch(cloneRoom(id))\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={30}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n          <Space style={{ marginBottom: 16 }} className=\"btn-group-right\">\r\n            <Button href={`/dashboard/owner/communities/${homeId}/rooms/add`}>Add Room</Button>\r\n          </Space>\r\n          <Table\r\n            columns={columns}\r\n            loading={roomListLoading || initialLoader}\r\n            dataSource={\r\n              roomList.map(({ name, type, base_rate, id, room_care_type, floor_level, bathroom_type }) => {\r\n                return { name, type, base_rate, room_care_type, floor_level, key: id, bathroom_type };\r\n              })\r\n            }\r\n            pagination={pagination}\r\n            onChange={handelTableChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomList: state.room.roomList,\r\n    roomListLoading: state.room.roomListLoading,\r\n    roomListMeta: state.room.roomListMeta,\r\n\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllRooms: () => dispatch(listAllRooms()),\r\n    setRoomListLoading: () => dispatch(setRoomListLoading()),\r\n    deleteRoom: () => dispatch(deleteRoom()),\r\n    cloneRoom: () => dispatch(cloneRoom()),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ListRooms);\r\n"]},"metadata":{},"sourceType":"module"}
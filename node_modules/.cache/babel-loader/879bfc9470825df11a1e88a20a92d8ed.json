{"ast":null,"code":"import AxiosLib from \"./lib/http-axios-lib\";\nimport UserService from \"./../services/user-service\";\n\nvar _request = function _request(method, url, data) {\n  var isJson = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var binaryResponse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var options = {\n    method: method,\n    url: url,\n    responseType: binaryResponse ? \"blob\" : \"json\"\n  };\n\n  if (data && method === \"GET\") {\n    options.params = data;\n  } else if (data) {\n    options.data = data;\n\n    if (isJson) {\n      options.headers = {\n        \"Content-Type\": \"application/json\"\n      };\n    } else {\n      options.headers = {\n        \"Content-Type\": \"multipart/form-data\"\n      };\n    }\n  }\n\n  return new Promise(function (resolve, reject) {\n    AxiosLib.request(options).then(function (response) {\n      var data = response.data;\n\n      if (typeof data != \"object\" && response.data !== \"\") {\n        data = JSON.parse(data);\n      }\n\n      resolve(data);\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error && error.response && error.response.status) {\n        if (error.response.status === 401) {\n          UserService.signOut();\n          window.location.reload();\n        } else if (error.response.status === 403) {} else if (error.response.status === 500) {}\n      } else {}\n\n      reject(error);\n    });\n  });\n};\n\nvar DataAccessService = {\n  get: function get(url, data) {\n    var isJson = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var binaryResponse = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    return _request(\"GET\", url, data, isJson, binaryResponse);\n  },\n  post: function post(url, data) {\n    var isJson = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return _request(\"POST\", url, data, isJson);\n  },\n  delete: function _delete(url) {\n    return _request(\"DELETE\", url);\n  },\n  put: function put(url, data) {\n    return _request(\"PUT\", url, data);\n  },\n  patch: function patch(url, data) {\n    return _request(\"PATCH\", url, data);\n  }\n};\nexport default DataAccessService;","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/services/axios-service.js"],"names":["AxiosLib","UserService","_request","method","url","data","isJson","binaryResponse","options","responseType","params","headers","Promise","resolve","reject","request","then","response","JSON","parse","catch","error","console","log","status","signOut","window","location","reload","DataAccessService","get","post","delete","put","patch"],"mappings":"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","sourcesContent":["import AxiosLib from \"./lib/http-axios-lib\";\r\nimport UserService from \"./../services/user-service\";\r\nconst _request = (method, url, data, isJson = true, binaryResponse = false) => {\r\n  let options = {\r\n    method: method,\r\n    url: url,\r\n    responseType: binaryResponse ? \"blob\" : \"json\",\r\n  };\r\n  if (data && method === \"GET\") {\r\n    options.params = data;\r\n  } else if (data) {\r\n    options.data = data;\r\n    if (isJson) {\r\n      options.headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n    } else {\r\n      options.headers = { \"Content-Type\": \"multipart/form-data\" };\r\n    }\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    AxiosLib.request(options)\r\n      .then((response) => {\r\n        let data = response.data;\r\n        if (typeof data != \"object\" && response.data !== \"\") {\r\n          data = JSON.parse(data);\r\n        }\r\n        resolve(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (error && error.response && error.response.status) {\r\n          if (error.response.status === 401) {\r\n            UserService.signOut();\r\n            window.location.reload();\r\n          } else if (error.response.status === 403) {\r\n          } else if (error.response.status === 500) {\r\n          }\r\n        } else {\r\n        }\r\n\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst DataAccessService = {\r\n  get(url, data, isJson = true, binaryResponse = false) {\r\n    return _request(\"GET\", url, data, isJson, binaryResponse);\r\n  },\r\n  post(url, data, isJson = true) {\r\n    return _request(\"POST\", url, data, isJson);\r\n  },\r\n  delete(url) {\r\n    return _request(\"DELETE\", url);\r\n  },\r\n  put(url, data) {\r\n    return _request(\"PUT\", url, data);\r\n  },\r\n  patch(url, data) {\r\n    return _request(\"PATCH\", url, data);\r\n  },\r\n};\r\n\r\nexport default DataAccessService;\r\n"]},"metadata":{},"sourceType":"module"}
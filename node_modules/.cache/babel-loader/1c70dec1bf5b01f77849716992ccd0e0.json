{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\mainSearch.js\";\nimport React from \"react\";\nimport { GoogleAPI } from \"google-maps-react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nfunction main_search() {\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var results, latLng;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return geocodeByAddress(address);\n\n            case 3:\n              results = _context.sent;\n              _context.next = 6;\n              return getLatLng(results[0]);\n\n            case 6:\n              latLng = _context.sent;\n              console.log(\"Selected location:\", latLng); // Do something with the selected location, such as updating state or making API calls\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error selecting location:\", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, \"main_search\");\n}\n\nexport default main_search;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/mainSearch.js"],"names":["React","GoogleAPI","PlacesAutocomplete","geocodeByAddress","getLatLng","main_search","handleSelect","address","results","latLng","console","log","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;;AAIA,SAASC,WAAT,GAAuB;AACrB,MAAMC,YAAY;AAAA,wEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKJ,gBAAgB,CAACI,OAAD,CAFrB;;AAAA;AAEXC,cAAAA,OAFW;AAAA;AAAA,qBAGIJ,SAAS,CAACI,OAAO,CAAC,CAAD,CAAR,CAHb;;AAAA;AAGXC,cAAAA,MAHW;AAIjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC,EAJiB,CAKjB;;AALiB;AAAA;;AAAA;AAAA;AAAA;AAOjBC,cAAAA,OAAO,CAACE,KAAR,CAAc,2BAAd;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZN,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["import React from \"react\";\r\nimport { GoogleAPI } from \"google-maps-react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nfunction main_search() {\r\n  const handleSelect = async (address) => {\r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      const latLng = await getLatLng(results[0]);\r\n      console.log(\"Selected location:\", latLng);\r\n      // Do something with the selected location, such as updating state or making API calls\r\n    } catch (error) {\r\n      console.error(\"Error selecting location:\", error);\r\n    }\r\n  };\r\n  return <div>main_search</div>;\r\n}\r\n\r\nexport default main_search;\r\n"]},"metadata":{},"sourceType":"module"}
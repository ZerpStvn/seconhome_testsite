{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\mainSearch.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport GooglePlacesAutocomplete, { geocodeByPlaceId, getLatLng } from \"react-google-places-autocomplete\";\nimport config from \"../../../config\";\n\nvar HomeList = function HomeList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      homes = _useState2[0],\n      setHomes = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchTerm = _useState4[0],\n      setSearchTerm = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filteredHomes = _useState6[0],\n      setFilteredHomes = _useState6[1];\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"https://api.secondhomeseniors.com/items/homes/\");\n\n            case 3:\n              response = _context.sent;\n              setHomes(response.data.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error fetching data:\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var filteredData = homes.filter(function (home) {\n      var searchFields = [home.city, home.zipCode, home.country];\n      return searchFields.some(function (field) {\n        return field.toLowerCase().includes(searchTerm.toLowerCase());\n      });\n    });\n    setFilteredHomes(filteredData);\n  }, [homes, searchTerm]);\n\n  var handlePlaceSelect = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(place) {\n      var placeId, geocodeResponse, selectedPlace, address, categories, categorySuggestions, suggestions;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              placeId = place.place_id;\n              _context2.next = 4;\n              return geocodeByPlaceId(placeId);\n\n            case 4:\n              geocodeResponse = _context2.sent;\n              selectedPlace = geocodeResponse[0];\n              address = selectedPlace.formatted_address;\n              console.log(\"Selected place:\", address); // Extract categories from the address\n\n              categories = {\n                City: \"City\",\n                Neighbors: \"Neighbors\",\n                School: \"School\"\n              };\n              categorySuggestions = Object.entries(categories).map(function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 2),\n                    categoryKey = _ref4[0],\n                    categoryValue = _ref4[1];\n\n                return {\n                  description: categoryValue,\n                  matched_substrings: [{\n                    offset: 0,\n                    length: categoryValue.length\n                  }],\n                  types: [categoryKey]\n                };\n              });\n              suggestions = [].concat(_toConsumableArray(categorySuggestions), _toConsumableArray(place.structured_formatting.main_text_matched_substrings.map(function (matchedSubstring) {\n                return {\n                  description: matchedSubstring.offset === 0 ? place.description : matchedSubstring.value,\n                  matched_substrings: [{\n                    offset: matchedSubstring.offset === 0 ? 0 : matchedSubstring.offset - 1,\n                    length: matchedSubstring.offset === 0 ? place.description.length : matchedSubstring.value.length\n                  }],\n                  types: [\"suggestion\"]\n                };\n              })));\n              setSearchTerm(address);\n              place.suggestions = suggestions;\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Error selecting place:\", _context2.t0);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 15]]);\n    }));\n\n    return function handlePlaceSelect(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var renderCustomSuggestion = function renderCustomSuggestion(suggestion) {\n    var suggestionStyle = {\n      fontWeight: suggestion.types.includes(\"suggestion\") ? \"normal\" : \"bold\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: suggestionStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, suggestion.types.includes(\"suggestion\") ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, suggestion.description) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, suggestion.types[0]), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }), suggestion.description));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    apiKey: config.googleMapsAPIkey,\n    autocompletionRequest: {\n      types: [\"(cities)\"]\n    },\n    selectProps: {\n      value: searchTerm,\n      onChange: function onChange(_ref5) {\n        var value = _ref5.value;\n        return setSearchTerm(value);\n      },\n      placeholder: \"Search by city, zip code, or country\",\n      renderSuggestion: renderCustomSuggestion\n    },\n    onLoadFailed: function onLoadFailed(error) {\n      return console.error(\"Error loading Google Maps API\", error);\n    },\n    debounce: 300,\n    onSelect: handlePlaceSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, filteredHomes.map(function (home) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: home.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"City: \", home.city), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Country: \", home.country), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Zip Code: \", home.zipCode));\n  })));\n};\n\nexport default HomeList; // \"https://api.secondhomeseniors.com/items/homes/\"","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/mainSearch.js"],"names":["React","useEffect","useState","axios","GooglePlacesAutocomplete","geocodeByPlaceId","getLatLng","config","HomeList","homes","setHomes","searchTerm","setSearchTerm","filteredHomes","setFilteredHomes","fetchData","get","response","data","console","error","filteredData","filter","home","searchFields","city","zipCode","country","some","field","toLowerCase","includes","handlePlaceSelect","place","placeId","place_id","geocodeResponse","selectedPlace","address","formatted_address","log","categories","City","Neighbors","School","categorySuggestions","Object","entries","map","categoryKey","categoryValue","description","matched_substrings","offset","length","types","suggestions","structured_formatting","main_text_matched_substrings","matchedSubstring","value","renderCustomSuggestion","suggestion","suggestionStyle","fontWeight","googleMapsAPIkey","onChange","placeholder","renderSuggestion","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport GooglePlacesAutocomplete, {\r\n  geocodeByPlaceId,\r\n  getLatLng,\r\n} from \"react-google-places-autocomplete\";\r\nimport config from \"../../../config\";\r\nconst HomeList = () => {\r\n  const [homes, setHomes] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filteredHomes, setFilteredHomes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.secondhomeseniors.com/items/homes/\"\r\n      );\r\n      setHomes(response.data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filteredData = homes.filter((home) => {\r\n      const searchFields = [home.city, home.zipCode, home.country];\r\n      return searchFields.some((field) =>\r\n        field.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    });\r\n    setFilteredHomes(filteredData);\r\n  }, [homes, searchTerm]);\r\n\r\n  const handlePlaceSelect = async (place) => {\r\n    try {\r\n      const placeId = place.place_id;\r\n      const geocodeResponse = await geocodeByPlaceId(placeId);\r\n      const selectedPlace = geocodeResponse[0];\r\n      const address = selectedPlace.formatted_address;\r\n      console.log(\"Selected place:\", address);\r\n\r\n      // Extract categories from the address\r\n      const categories = {\r\n        City: \"City\",\r\n        Neighbors: \"Neighbors\",\r\n        School: \"School\",\r\n      };\r\n      const categorySuggestions = Object.entries(categories).map(\r\n        ([categoryKey, categoryValue]) => ({\r\n          description: categoryValue,\r\n          matched_substrings: [\r\n            {\r\n              offset: 0,\r\n              length: categoryValue.length,\r\n            },\r\n          ],\r\n          types: [categoryKey],\r\n        })\r\n      );\r\n\r\n      const suggestions = [\r\n        ...categorySuggestions,\r\n        ...place.structured_formatting.main_text_matched_substrings.map(\r\n          (matchedSubstring) => ({\r\n            description:\r\n              matchedSubstring.offset === 0\r\n                ? place.description\r\n                : matchedSubstring.value,\r\n            matched_substrings: [\r\n              {\r\n                offset:\r\n                  matchedSubstring.offset === 0\r\n                    ? 0\r\n                    : matchedSubstring.offset - 1,\r\n                length:\r\n                  matchedSubstring.offset === 0\r\n                    ? place.description.length\r\n                    : matchedSubstring.value.length,\r\n              },\r\n            ],\r\n            types: [\"suggestion\"],\r\n          })\r\n        ),\r\n      ];\r\n\r\n      setSearchTerm(address);\r\n      place.suggestions = suggestions;\r\n    } catch (error) {\r\n      console.error(\"Error selecting place:\", error);\r\n    }\r\n  };\r\n\r\n  const renderCustomSuggestion = (suggestion) => {\r\n    const suggestionStyle = {\r\n      fontWeight: suggestion.types.includes(\"suggestion\") ? \"normal\" : \"bold\",\r\n    };\r\n\r\n    return (\r\n      <div style={suggestionStyle}>\r\n        {suggestion.types.includes(\"suggestion\") ? (\r\n          <span>{suggestion.description}</span>\r\n        ) : (\r\n          <span>\r\n            <strong>{suggestion.types[0]}</strong>\r\n            <br />\r\n            {suggestion.description}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GooglePlacesAutocomplete\r\n        apiKey={config.googleMapsAPIkey}\r\n        autocompletionRequest={{\r\n          types: [\"(cities)\"],\r\n        }}\r\n        selectProps={{\r\n          value: searchTerm,\r\n          onChange: ({ value }) => setSearchTerm(value),\r\n          placeholder: \"Search by city, zip code, or country\",\r\n          renderSuggestion: renderCustomSuggestion,\r\n        }}\r\n        onLoadFailed={(error) =>\r\n          console.error(\"Error loading Google Maps API\", error)\r\n        }\r\n        debounce={300}\r\n        onSelect={handlePlaceSelect}\r\n      />\r\n      <ul>\r\n        {filteredHomes.map((home) => (\r\n          <li key={home.id}>\r\n            <p>City: {home.city}</p>\r\n            <p>Country: {home.country}</p>\r\n            <p>Zip Code: {home.zipCode}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeList;\r\n\r\n// \"https://api.secondhomeseniors.com/items/homes/\"\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\communities\\\\rooms\\\\list-rooms.js\";\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllRooms as _listAllRooms, setRoomListLoading as _setRoomListLoading, deleteRoom as _deleteRoom, cloneRoom as _cloneRoom, updateRoom } from \"../../../../../redux/actions/room-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { notifyUser } from \"../../../../../services/notification-service\";\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Tooltip, Popconfirm, Select } from \"antd\";\nimport { compose } from \"redux\";\nimport { EditOutlined, CopyOutlined, DeleteOutlined, FilterFilled } from '@ant-design/icons';\nimport { data } from \"jquery\";\nimport { roomTypesOptions, roomCareTypesOptions, floorLevelOptions, bathroomTypesOptions, statusOptions } from \"../../../../../constants/defaultValues\";\nimport { clone, values } from \"ramda\";\nimport { getNumberWithOrdinal } from \"../../../../../helpers/number-helper\";\nimport { getColumnSearchProps } from \"../../../../../helpers/columnSearchProps\";\nimport { humanize } from \"../../../../../helpers/string-helper\";\nimport API from \"../../../../../redux/api/room-api\";\nimport UserService from \"../../../../../services/user-service\";\n\nvar ListRooms = function ListRooms(_ref) {\n  var homeId = _ref.homeId,\n      roomList = _ref.roomList,\n      roomListLoading = _ref.roomListLoading,\n      roomMessage = _ref.roomMessage,\n      roomUpdated = _ref.roomUpdated,\n      roomListMeta = _ref.roomListMeta;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState({\n    pageSize: 20,\n    current: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var _useState5 = useState({\n    home: {\n      _eq: id\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var user = UserService.getAdminUser();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (loading || roomListLoading) {\n      dispatch(_listAllRooms({\n        filter: filters,\n        sort: sort,\n        page: pagination.current,\n        limit: pagination.pageSize,\n        meta: \"*\"\n      }));\n    }\n\n    if (roomListMeta) {\n      setPagination(_objectSpread({}, pagination, {\n        total: roomListMeta.filter_count\n      }));\n    }\n\n    if (roomUpdated) {\n      notifyUser(roomMessage, \"success\");\n    }\n\n    setLoading(roomListLoading);\n    return function () {\n      console.log(\"Rooms Unmounting\");\n    };\n  }, [roomListLoading]);\n\n  var handelTableChange = function handelTableChange(_ref2, tableFilters, sorter) {\n    var current = _ref2.current;\n    console.log(tableFilters);\n\n    if (sorter && sorter.field) {\n      if (sorter.order == \"ascend\") {\n        setSort(sorter.field);\n      } else {\n        setSort(\"-\" + sorter.field);\n      }\n    }\n\n    var _filters = {};\n    Object.entries(tableFilters).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n\n      var orFilter = [];\n\n      if (value) {\n        switch (key) {\n          case \"type\":\n            _filters.type = {\n              _in: value\n            };\n            break;\n\n          case \"room_care_type\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                room_care_type: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"floor_level\":\n            _filters.floor_level = {\n              _in: value\n            };\n            break;\n\n          case \"name\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                name: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"base_rate\":\n            _filters.base_rate = {\n              _in: value\n            };\n            break;\n\n          case \"bathroom_type\":\n            _filters.bathroom_type = {\n              _in: value\n            };\n            break;\n\n          case \"status\":\n            _filters.status = {\n              _in: value\n            };\n            break;\n\n          default:\n            break;\n        }\n      } else {}\n    });\n    setFilters(_objectSpread({}, _filters, {\n      home: {\n        _eq: homeId\n      }\n    }));\n    setPagination(_objectSpread({}, pagination, {\n      current: current\n    }));\n    setLoading(true);\n    dispatch(_setRoomListLoading(true));\n  };\n\n  var columns = [_objectSpread({\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend']\n  }, getColumnSearchProps('name'), {\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"cap-letter\",\n        to: \"/admin/partners/communities/\".concat(homeId, \"/rooms/\").concat(room.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, text));\n    }\n  }), {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    filters: roomTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 44\n      }\n    })),\n    sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, humanize(text));\n    }\n  }, {\n    title: 'Bathroom Type',\n    dataIndex: 'bathroom_type',\n    key: 'bathroom_type',\n    filters: bathroomTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 44\n      }\n    })),\n    sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, humanize(text));\n    }\n  }, _objectSpread({\n    title: 'Pricing',\n    dataIndex: 'base_rate',\n    key: 'base_rate',\n    sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend']\n  }, getColumnSearchProps('base_rate'), {\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, text && \"$\".concat(text));\n    }\n  }), {\n    title: 'Room Care Type',\n    dataIndex: 'room_care_type',\n    key: 'room_care_type',\n    filters: roomCareTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 44\n      }\n    })),\n    render: function render(room_care_type) {\n      return room_care_type && room_care_type.map(function (tag) {\n        return /*#__PURE__*/React.createElement(Tag, {\n          color: \"blue\",\n          key: tag,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }\n        }, humanize(tag));\n      });\n    }\n  }, {\n    title: 'Floor Level',\n    dataIndex: 'floor_level',\n    key: 'floor_level',\n    sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    filters: floorLevelOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 44\n      }\n    })),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      }, text && \"\".concat(getNumberWithOrdinal(text), \" Floor\"));\n    }\n  }, // {\n  //   title: 'Status',\n  //   dataIndex: 'status',\n  //   key: 'status',\n  //   sorter: true,\n  //   sortDirections: ['ascend', 'descend', 'ascend'],\n  //   filters: statusOptions,\n  //   filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\n  //   render: (text, room) => (\n  //     <Space size=\"middle\">\n  //       {humanize(text)}\n  //       ,\n  //     </Space>\n  //   ),\n  //   render: (value, room) => (\n  //     <Select\n  //       style={{ width: \"130px\" }}\n  //       defaultValue={value}\n  //       onChange={(value) => handelStatusChange(value, room.key)}\n  //     >\n  //       {statusOptions.map((option) => {\n  //         return (\n  //           <Select.Option value={option.value}>{option.text}</Select.Option>\n  //         );\n  //       })}\n  //     </Select>\n  //   ),\n  // },\n  {\n    title: 'Action',\n    key: 'action',\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Edit\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/partners/communities/\".concat(homeId, \"/rooms/\").concat(room.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 102\n        }\n      }))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Clone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        onClick: function onClick() {\n          handelOnClone(room.key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CopyOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Delete\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Are you sure to delete this Room?\",\n        onConfirm: function onConfirm() {\n          handelOnDelete(room.key);\n        },\n        okText: \"Yes\",\n        cancelText: \"No\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        onClick: function onClick() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }];\n\n  var handelStatusChange = function handelStatusChange(value, roomId) {\n    dispatch(updateRoom(roomId, {\n      status: value\n    }));\n  };\n\n  var handelOnDelete = function handelOnDelete(id) {\n    setLoading(true); // dispatch(setRoomListLoading(true));\n\n    dispatch(_deleteRoom(id));\n  };\n\n  var handelOnClone = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              console.log(id);\n              values = roomList.filter(function (Item, Index) {\n                return parseInt(Item.id) === parseInt(id);\n              }); // console.log('dsafsfsf', values);\n              // dispatch(setRoomListLoading(true));\n              // dispatch(cloneRoom(id));\n\n              _context2.next = 5;\n              return API.cloneRoom(id).then( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Data) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          values.user_created = user.id;\n                          values.id = Data;\n                          _context.next = 4;\n                          return dispatch(updateRoom(Data, values));\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handelOnClone(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    style: {\n      marginBottom: 16\n    },\n    className: \"btn-group-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"/dashboard/admin/partners/communities/\".concat(homeId, \"/rooms/add\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Add Room\")), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    loading: loading,\n    dataSource: roomList.map(function (_ref7) {\n      var name = _ref7.name,\n          type = _ref7.type,\n          base_rate = _ref7.base_rate,\n          id = _ref7.id,\n          room_care_type = _ref7.room_care_type,\n          floor_level = _ref7.floor_level,\n          bathroom_type = _ref7.bathroom_type,\n          status = _ref7.status;\n      return {\n        name: name,\n        type: type,\n        base_rate: base_rate,\n        room_care_type: room_care_type,\n        floor_level: floor_level,\n        key: id,\n        bathroom_type: bathroom_type,\n        status: status\n      };\n    }),\n    pagination: pagination,\n    onChange: handelTableChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomList: state.room.roomList,\n    roomListLoading: state.room.roomListLoading,\n    roomListMeta: state.room.roomListMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllRooms: function listAllRooms() {\n      return dispatch(_listAllRooms());\n    },\n    setRoomListLoading: function setRoomListLoading() {\n      return dispatch(_setRoomListLoading());\n    },\n    deleteRoom: function deleteRoom() {\n      return dispatch(_deleteRoom());\n    },\n    cloneRoom: function cloneRoom() {\n      return dispatch(_cloneRoom());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ListRooms);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/partner/communities/rooms/list-rooms.js"],"names":["React","useEffect","useState","useRef","connect","listAllRooms","setRoomListLoading","deleteRoom","cloneRoom","updateRoom","useDispatch","Link","useParams","notifyUser","List","Divider","Row","Col","Button","PageHeader","Table","Tag","Space","Breadcrumb","Tooltip","Popconfirm","Select","compose","EditOutlined","CopyOutlined","DeleteOutlined","FilterFilled","data","roomTypesOptions","roomCareTypesOptions","floorLevelOptions","bathroomTypesOptions","statusOptions","clone","values","getNumberWithOrdinal","getColumnSearchProps","humanize","API","UserService","ListRooms","homeId","roomList","roomListLoading","roomMessage","roomUpdated","roomListMeta","id","pageSize","current","pagination","setPagination","sort","setSort","home","_eq","filters","setFilters","loading","setLoading","user","getAdminUser","dispatch","filter","page","limit","meta","total","filter_count","console","log","handelTableChange","tableFilters","sorter","field","order","_filters","Object","entries","forEach","key","value","orFilter","type","_in","map","push","room_care_type","_contains","_or","floor_level","name","base_rate","bathroom_type","status","columns","title","dataIndex","sortDirections","render","text","room","filterIcon","tag","handelOnClone","handelOnDelete","handelStatusChange","roomId","Item","Index","parseInt","then","Data","user_created","marginBottom","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAY,IAAZA,aAAT,EAAuBC,kBAAkB,IAAlBA,mBAAvB,EAA2CC,UAAU,IAAVA,WAA3C,EAAuDC,SAAS,IAATA,UAAvD,EAAkEC,UAAlE,QAAoF,2CAApF;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AAEA,SAASC,UAAT,QAA2B,8CAA3B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,MAAlC,EAA0CC,UAA1C,EAAsDC,KAAtD,EAA6DC,GAA7D,EAAkEC,KAAlE,EAAyEC,UAAzE,EAAqFC,OAArF,EAA8FC,UAA9F,EAA0GC,MAA1G,QAAwH,MAAxH;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,cAArC,EAAqDC,YAArD,QAAyE,mBAAzE;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,EAAiDC,iBAAjD,EAAoEC,oBAApE,EAA0FC,aAA1F,QAA+G,wCAA/G;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,oBAAT,QAAqC,sCAArC;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,QAAT,QAAyB,sCAAzB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmF;AAAA,MAAhFC,MAAgF,QAAhFA,MAAgF;AAAA,MAAxEC,QAAwE,QAAxEA,QAAwE;AAAA,MAA9DC,eAA8D,QAA9DA,eAA8D;AAAA,MAA7CC,WAA6C,QAA7CA,WAA6C;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,mBACpFvC,SAAS,EAD2E;AAAA,MAC3FwC,EAD2F,cAC3FA,EAD2F;;AAAA,kBAE/DlD,QAAQ,CAAC;AAC3CmD,IAAAA,QAAQ,EAAE,EADiC;AAE3CC,IAAAA,OAAO,EAAE;AAFkC,GAAD,CAFuD;AAAA;AAAA,MAE5FC,UAF4F;AAAA,MAEhFC,aAFgF;;AAAA,mBAM3EtD,QAAQ,CAAC,EAAD,CANmE;AAAA;AAAA,MAM5FuD,IAN4F;AAAA,MAMtFC,OANsF;;AAAA,mBAOrExD,QAAQ,CAAC;AAAEyD,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAG,EAAER;AAAP;AAAR,GAAD,CAP6D;AAAA;AAAA,MAO5FS,OAP4F;AAAA,MAOnFC,UAPmF;;AAAA,mBAQrE5D,QAAQ,CAAC,IAAD,CAR6D;AAAA;AAAA,MAQ5F6D,OAR4F;AAAA,MAQnFC,UARmF;;AAUnG,MAAMC,IAAI,GAAGrB,WAAW,CAACsB,YAAZ,EAAb;AACA,MAAMC,QAAQ,GAAGzD,WAAW,EAA5B;AACAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI8D,OAAO,IAAIf,eAAf,EAAgC;AAC9BmB,MAAAA,QAAQ,CAAC9D,aAAY,CAAC;AAAE+D,QAAAA,MAAM,EAAEP,OAAV;AAAmBJ,QAAAA,IAAI,EAAJA,IAAnB;AAAyBY,QAAAA,IAAI,EAAEd,UAAU,CAACD,OAA1C;AAAmDgB,QAAAA,KAAK,EAAEf,UAAU,CAACF,QAArE;AAA+EkB,QAAAA,IAAI,EAAE;AAArF,OAAD,CAAb,CAAR;AACD;;AACD,QAAIpB,YAAJ,EAAkB;AAChBK,MAAAA,aAAa,mBAAMD,UAAN;AAAkBiB,QAAAA,KAAK,EAAErB,YAAY,CAACsB;AAAtC,SAAb;AACD;;AACD,QAAIvB,WAAJ,EAAiB;AACfrC,MAAAA,UAAU,CAACoC,WAAD,EAAc,SAAd,CAAV;AACD;;AACDe,IAAAA,UAAU,CAAChB,eAAD,CAAV;AACA,WAAO,YAAM;AACX0B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFD;AAGD,GAdQ,EAcN,CAAC3B,eAAD,CAdM,CAAT;;AAgBA,MAAM4B,iBAAiB,GAAG,SAApBA,iBAAoB,QAAcC,YAAd,EAA4BC,MAA5B,EAAuC;AAAA,QAApCxB,OAAoC,SAApCA,OAAoC;AAC/DoB,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;;AACA,QAAIC,MAAM,IAAIA,MAAM,CAACC,KAArB,EAA4B;AAC1B,UAAID,MAAM,CAACE,KAAP,IAAgB,QAApB,EAA8B;AAC5BtB,QAAAA,OAAO,CAACoB,MAAM,CAACC,KAAR,CAAP;AACD,OAFD,MAEO;AACLrB,QAAAA,OAAO,CAAC,MAAMoB,MAAM,CAACC,KAAd,CAAP;AACD;AACF;;AAED,QAAIE,QAAQ,GAAG,EAAf;AAGAC,IAAAA,MAAM,CAACC,OAAP,CAAeN,YAAf,EAA6BO,OAA7B,CAAqC,iBAAkB;AAAA;AAAA,UAAhBC,GAAgB;AAAA,UAAXC,KAAW;;AACrD,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAID,KAAJ,EAAW;AACT,gBAAQD,GAAR;AACE,eAAK,MAAL;AACEJ,YAAAA,QAAQ,CAACO,IAAT,GAAgB;AAAEC,cAAAA,GAAG,EAAEH;AAAP,aAAhB;AACA;;AAEF,eAAK,gBAAL;AACEC,YAAAA,QAAQ,GAAG,EAAX;AACAD,YAAAA,KAAK,CAACI,GAAN,CAAU,UAAC1D,IAAD,EAAU;AAAEuD,cAAAA,QAAQ,CAACI,IAAT,CAAc;AAAEC,gBAAAA,cAAc,EAAE;AAAEC,kBAAAA,SAAS,EAAE7D;AAAb;AAAlB,eAAd;AAAwD,aAA9E;AACAiD,YAAAA,QAAQ,CAACa,GAAT,GAAeP,QAAf;AACA;;AACF,eAAK,aAAL;AACEN,YAAAA,QAAQ,CAACc,WAAT,GAAuB;AAAEN,cAAAA,GAAG,EAAEH;AAAP,aAAvB;AACA;;AACF,eAAK,MAAL;AACEC,YAAAA,QAAQ,GAAG,EAAX;AACAD,YAAAA,KAAK,CAACI,GAAN,CAAU,UAAC1D,IAAD,EAAU;AAAEuD,cAAAA,QAAQ,CAACI,IAAT,CAAc;AAAEK,gBAAAA,IAAI,EAAE;AAAEH,kBAAAA,SAAS,EAAE7D;AAAb;AAAR,eAAd;AAA8C,aAApE;AACAiD,YAAAA,QAAQ,CAACa,GAAT,GAAeP,QAAf;AACA;;AACF,eAAK,WAAL;AACEN,YAAAA,QAAQ,CAACgB,SAAT,GAAqB;AAAER,cAAAA,GAAG,EAAEH;AAAP,aAArB;AACA;;AACF,eAAK,eAAL;AACEL,YAAAA,QAAQ,CAACiB,aAAT,GAAyB;AAAET,cAAAA,GAAG,EAAEH;AAAP,aAAzB;AACA;;AACF,eAAK,QAAL;AACEL,YAAAA,QAAQ,CAACkB,MAAT,GAAkB;AAAEV,cAAAA,GAAG,EAAEH;AAAP,aAAlB;AACA;;AAEF;AACE;AA7BJ;AA+BD,OAhCD,MAgCO,CAEN;AAEF,KAtCD;AAuCAxB,IAAAA,UAAU,mBAAMmB,QAAN;AAAgBtB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,GAAG,EAAEd;AAAP;AAAtB,OAAV;AACAU,IAAAA,aAAa,mBAAMD,UAAN;AAAkBD,MAAAA,OAAO,EAAPA;AAAlB,OAAb;AACAU,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,QAAQ,CAAC7D,mBAAkB,CAAC,IAAD,CAAnB,CAAR;AACD,GAxDD;;AA0DA,MAAM8F,OAAO,GAAG;AAEZC,IAAAA,KAAK,EAAE,MAFK;AAGZC,IAAAA,SAAS,EAAE,MAHC;AAIZjB,IAAAA,GAAG,EAAE,MAJO;AAKZP,IAAAA,MAAM,EAAE,IALI;AAMZyB,IAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB;AANJ,KAOT9D,oBAAoB,CAAC,MAAD,CAPX;AAQZ+D,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP;AAAA,0BACN,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,EAAE,wCAAiC5D,MAAjC,oBAAiD4D,IAAI,CAACrB,GAAtD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6FoB,IAA7F,CADF,CADM;AAAA;AARI,MAgBd;AACEJ,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEjB,IAAAA,GAAG,EAAE,MAHP;AAIExB,IAAAA,OAAO,EAAE5B,gBAJX;AAKE0E,IAAAA,UAAU,eAAG,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CALf;AAME7B,IAAAA,MAAM,EAAE,IANV;AAOEyB,IAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,CAPlB;AAQEC,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP;AAAA,0BACN,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhE,QAAQ,CAAC+D,IAAD,CADX,CADM;AAAA;AARV,GAhBc,EA+Bd;AACEJ,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,SAAS,EAAE,eAFb;AAGEjB,IAAAA,GAAG,EAAE,eAHP;AAIExB,IAAAA,OAAO,EAAEzB,oBAJX;AAKEuE,IAAAA,UAAU,eAAG,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CALf;AAME7B,IAAAA,MAAM,EAAE,IANV;AAOEyB,IAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,CAPlB;AAQEC,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP;AAAA,0BACN,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhE,QAAQ,CAAC+D,IAAD,CADX,CADM;AAAA;AARV,GA/Bc;AAgDZJ,IAAAA,KAAK,EAAE,SAhDK;AAiDZC,IAAAA,SAAS,EAAE,WAjDC;AAkDZjB,IAAAA,GAAG,EAAE,WAlDO;AAmDZP,IAAAA,MAAM,EAAE,IAnDI;AAoDZyB,IAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB;AApDJ,KAqDT9D,oBAAoB,CAAC,WAAD,CArDX;AAsDZ+D,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP;AAAA,0BACN,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,eAAQA,IAAR,CADP,CADM;AAAA;AAtDI,MA6Dd;AACEJ,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,SAAS,EAAE,gBAFb;AAGEjB,IAAAA,GAAG,EAAE,gBAHP;AAIExB,IAAAA,OAAO,EAAE3B,oBAJX;AAKEyE,IAAAA,UAAU,eAAG,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CALf;AAMEH,IAAAA,MAAM,EAAE,gBAACZ,cAAD;AAAA,aACNA,cAAc,IAAIA,cAAc,CAACF,GAAf,CAAmB,UAAAkB,GAAG;AAAA,4BACtC,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAkB,UAAA,GAAG,EAAEA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGlE,QAAQ,CAACkE,GAAD,CADX,CADsC;AAAA,OAAtB,CADZ;AAAA;AANV,GA7Dc,EA2Ed;AACEP,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEjB,IAAAA,GAAG,EAAE,aAHP;AAIEP,IAAAA,MAAM,EAAE,IAJV;AAKEyB,IAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,CALlB;AAME1C,IAAAA,OAAO,EAAE1B,iBANX;AAOEwE,IAAAA,UAAU,eAAG,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CAPf;AAQEH,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP;AAAA,0BACN,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,cAAOjE,oBAAoB,CAACiE,IAAD,CAA3B,WADP,CADM;AAAA;AARV,GA3Ec,EAyFd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACEJ,IAAAA,KAAK,EAAE,QADT;AAEEhB,IAAAA,GAAG,EAAE,QAFP;AAGEmB,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP;AAAA,0BACN,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsB,oBAAC,IAAD;AAAM,QAAA,EAAE,wCAAiC5D,MAAjC,oBAAiD4D,IAAI,CAACrB,GAAtD,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArE,CAAtB,CADF,eAEE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,mBAAM;AAAEwB,UAAAA,aAAa,CAACH,IAAI,CAACrB,GAAN,CAAb;AAAyB,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,eAQE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,mCADR;AAEE,QAAA,SAAS,EAAE,qBAAM;AAAEyB,UAAAA,cAAc,CAACJ,IAAI,CAACrB,GAAN,CAAd;AAA0B,SAF/C;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,UAAU,EAAC,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,mBAAM,CAAG,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF,CARF,CADM;AAAA;AAHV,GAtHc,CAAhB;;AAoJA,MAAM0B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACzB,KAAD,EAAQ0B,MAAR,EAAmB;AAC5C7C,IAAAA,QAAQ,CAAC1D,UAAU,CAACuG,MAAD,EAAS;AAAEb,MAAAA,MAAM,EAAEb;AAAV,KAAT,CAAX,CAAR;AACD,GAFD;;AAIA,MAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAAC1D,EAAD,EAAQ;AAC7BY,IAAAA,UAAU,CAAC,IAAD,CAAV,CAD6B,CAE7B;;AACAG,IAAAA,QAAQ,CAAC5D,WAAU,CAAC6C,EAAD,CAAX,CAAR;AACD,GAJD;;AAKA,MAAMyD,aAAa;AAAA,yEAAG,kBAAOzD,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBY,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAYvB,EAAZ;AACIb,cAAAA,MAHgB,GAGPQ,QAAQ,CAACqB,MAAT,CAAgB,UAAC6C,IAAD,EAAOC,KAAP,EAAiB;AAC5C,uBAAOC,QAAQ,CAACF,IAAI,CAAC7D,EAAN,CAAR,KAAsB+D,QAAQ,CAAC/D,EAAD,CAArC;AACD,eAFY,CAHO,EAMpB;AACA;AACA;;AARoB;AAAA,qBASdT,GAAG,CAACnC,SAAJ,CAAc4C,EAAd,EAAkBgE,IAAlB;AAAA,qFAAuB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAC3B9E,0BAAAA,MAAM,CAAC+E,YAAP,GAAsBrD,IAAI,CAACb,EAA3B;AACAb,0BAAAA,MAAM,CAACa,EAAP,GAAYiE,IAAZ;AAF2B;AAAA,iCAGrBlD,QAAQ,CAAC1D,UAAU,CAAC4G,IAAD,EAAO9E,MAAP,CAAX,CAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAvB;;AAAA;AAAA;AAAA;AAAA,kBATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbsE,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAiBA,sBACE,uDACE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,EAAjC;AAAqC,IAAA,EAAE,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEU,MAAAA,YAAY,EAAE;AAAhB,KAAd;AAAoC,IAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,kDAA2CzE,MAA3C,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEsD,OADX;AAEE,IAAA,OAAO,EAAErC,OAFX;AAGE,IAAA,UAAU,EACRhB,QAAQ,CAAC2C,GAAT,CAAa,iBAAuF;AAAA,UAApFM,IAAoF,SAApFA,IAAoF;AAAA,UAA9ER,IAA8E,SAA9EA,IAA8E;AAAA,UAAxES,SAAwE,SAAxEA,SAAwE;AAAA,UAA7D7C,EAA6D,SAA7DA,EAA6D;AAAA,UAAzDwC,cAAyD,SAAzDA,cAAyD;AAAA,UAAzCG,WAAyC,SAAzCA,WAAyC;AAAA,UAA5BG,aAA4B,SAA5BA,aAA4B;AAAA,UAAbC,MAAa,SAAbA,MAAa;AAClG,aAAO;AAAEH,QAAAA,IAAI,EAAJA,IAAF;AAAQR,QAAAA,IAAI,EAAJA,IAAR;AAAcS,QAAAA,SAAS,EAATA,SAAd;AAAyBL,QAAAA,cAAc,EAAdA,cAAzB;AAAyCG,QAAAA,WAAW,EAAXA,WAAzC;AAAsDV,QAAAA,GAAG,EAAEjC,EAA3D;AAA+D8C,QAAAA,aAAa,EAAbA,aAA/D;AAA8EC,QAAAA,MAAM,EAANA;AAA9E,OAAP;AACD,KAFD,CAJJ;AAQE,IAAA,UAAU,EAAE5C,UARd;AASE,IAAA,QAAQ,EAAEqB,iBATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF;AAsBD,CA1RD;;AA4RA,SAAS4C,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACL1E,IAAAA,QAAQ,EAAE0E,KAAK,CAACf,IAAN,CAAW3D,QADhB;AAELC,IAAAA,eAAe,EAAEyE,KAAK,CAACf,IAAN,CAAW1D,eAFvB;AAGLG,IAAAA,YAAY,EAAEsE,KAAK,CAACf,IAAN,CAAWvD;AAHpB,GAAP;AAMD;;AAED,SAASuE,kBAAT,CAA4BvD,QAA5B,EAAsC;AACpC,SAAO;AACL9D,IAAAA,YAAY,EAAE;AAAA,aAAM8D,QAAQ,CAAC9D,aAAY,EAAb,CAAd;AAAA,KADT;AAELC,IAAAA,kBAAkB,EAAE;AAAA,aAAM6D,QAAQ,CAAC7D,mBAAkB,EAAnB,CAAd;AAAA,KAFf;AAGLC,IAAAA,UAAU,EAAE;AAAA,aAAM4D,QAAQ,CAAC5D,WAAU,EAAX,CAAd;AAAA,KAHP;AAILC,IAAAA,SAAS,EAAE;AAAA,aAAM2D,QAAQ,CAAC3D,UAAS,EAAV,CAAd;AAAA;AAJN,GAAP;AAMD;;AAED,eAAemB,OAAO,CAACvB,OAAO,CAACoH,eAAD,EAAkBE,kBAAlB,CAAR,CAAP,CAAsD7E,SAAtD,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllRooms, setRoomListLoading, deleteRoom, cloneRoom, updateRoom } from \"../../../../../redux/actions/room-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { notifyUser } from \"../../../../../services/notification-service\";\r\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Tooltip, Popconfirm, Select } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { EditOutlined, CopyOutlined, DeleteOutlined, FilterFilled } from '@ant-design/icons';\r\nimport { data } from \"jquery\";\r\nimport { roomTypesOptions, roomCareTypesOptions, floorLevelOptions, bathroomTypesOptions, statusOptions } from \"../../../../../constants/defaultValues\";\r\nimport { clone, values } from \"ramda\";\r\nimport { getNumberWithOrdinal } from \"../../../../../helpers/number-helper\";\r\nimport { getColumnSearchProps } from \"../../../../../helpers/columnSearchProps\";\r\nimport { humanize } from \"../../../../../helpers/string-helper\";\r\nimport API from \"../../../../../redux/api/room-api\";\r\nimport UserService from \"../../../../../services/user-service\";\r\n\r\n\r\n\r\nconst ListRooms = ({ homeId, roomList, roomListLoading, roomMessage, roomUpdated, roomListMeta }) => {\r\n  const { id } = useParams();\r\n  const [pagination, setPagination] = useState({\r\n    pageSize: 20,\r\n    current: 1,\r\n  });\r\n  const [sort, setSort] = useState([]);\r\n  const [filters, setFilters] = useState({ home: { _eq: id } });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const user = UserService.getAdminUser();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (loading || roomListLoading) {\r\n      dispatch(listAllRooms({ filter: filters, sort, page: pagination.current, limit: pagination.pageSize, meta: \"*\" }));\r\n    }\r\n    if (roomListMeta) {\r\n      setPagination({ ...pagination, total: roomListMeta.filter_count })\r\n    }\r\n    if (roomUpdated) {\r\n      notifyUser(roomMessage, \"success\");\r\n    }\r\n    setLoading(roomListLoading);\r\n    return () => {\r\n      console.log(\"Rooms Unmounting\");\r\n    };\r\n  }, [roomListLoading]);\r\n\r\n  const handelTableChange = ({ current }, tableFilters, sorter) => {\r\n    console.log(tableFilters);\r\n    if (sorter && sorter.field) {\r\n      if (sorter.order == \"ascend\") {\r\n        setSort(sorter.field);\r\n      } else {\r\n        setSort(\"-\" + sorter.field);\r\n      }\r\n    }\r\n\r\n    let _filters = {};\r\n\r\n\r\n    Object.entries(tableFilters).forEach(([key, value]) => {\r\n      let orFilter = [];\r\n      if (value) {\r\n        switch (key) {\r\n          case \"type\":\r\n            _filters.type = { _in: value }\r\n            break;\r\n\r\n          case \"room_care_type\":\r\n            orFilter = [];\r\n            value.map((data) => { orFilter.push({ room_care_type: { _contains: data } }) })\r\n            _filters._or = orFilter;\r\n            break;\r\n          case \"floor_level\":\r\n            _filters.floor_level = { _in: value }\r\n            break;\r\n          case \"name\":\r\n            orFilter = [];\r\n            value.map((data) => { orFilter.push({ name: { _contains: data } }) })\r\n            _filters._or = orFilter;\r\n            break;\r\n          case \"base_rate\":\r\n            _filters.base_rate = { _in: value }\r\n            break;\r\n          case \"bathroom_type\":\r\n            _filters.bathroom_type = { _in: value }\r\n            break;\r\n          case \"status\":\r\n            _filters.status = { _in: value }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n\r\n      }\r\n\r\n    });\r\n    setFilters({ ..._filters, home: { _eq: homeId } });\r\n    setPagination({ ...pagination, current });\r\n    setLoading(true);\r\n    dispatch(setRoomListLoading(true));\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      ...getColumnSearchProps('name'),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          <Link className=\"cap-letter\" to={`/admin/partners/communities/${homeId}/rooms/${room.key}`}>{text}</Link>\r\n\r\n        </Space>\r\n      )\r\n    },\r\n\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n      filters: roomTypesOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {humanize(text)}\r\n\r\n        </Space>\r\n      )\r\n    },\r\n    {\r\n      title: 'Bathroom Type',\r\n      dataIndex: 'bathroom_type',\r\n      key: 'bathroom_type',\r\n      filters: bathroomTypesOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {humanize(text)}\r\n\r\n        </Space>\r\n      )\r\n    },\r\n\r\n    {\r\n      title: 'Pricing',\r\n      dataIndex: 'base_rate',\r\n      key: 'base_rate',\r\n      sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      ...getColumnSearchProps('base_rate'),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {text && `$${text}`}\r\n        </Space>\r\n      )\r\n\r\n    },\r\n    {\r\n      title: 'Room Care Type',\r\n      dataIndex: 'room_care_type',\r\n      key: 'room_care_type',\r\n      filters: roomCareTypesOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      render: (room_care_type) => (\r\n        room_care_type && room_care_type.map(tag => (\r\n          <Tag color=\"blue\" key={tag}>\r\n            {humanize(tag)}\r\n          </Tag>\r\n        ))\r\n      )\r\n    },\r\n    {\r\n      title: 'Floor Level',\r\n      dataIndex: 'floor_level',\r\n      key: 'floor_level',\r\n      sorter: true,\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      filters: floorLevelOptions,\r\n      filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          {text && `${getNumberWithOrdinal(text)} Floor`}\r\n        </Space>\r\n      )\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'status',\r\n    //   key: 'status',\r\n    //   sorter: true,\r\n    //   sortDirections: ['ascend', 'descend', 'ascend'],\r\n    //   filters: statusOptions,\r\n    //   filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n    //   render: (text, room) => (\r\n    //     <Space size=\"middle\">\r\n    //       {humanize(text)}\r\n    //       ,\r\n    //     </Space>\r\n    //   ),\r\n    //   render: (value, room) => (\r\n    //     <Select\r\n    //       style={{ width: \"130px\" }}\r\n    //       defaultValue={value}\r\n    //       onChange={(value) => handelStatusChange(value, room.key)}\r\n    //     >\r\n    //       {statusOptions.map((option) => {\r\n    //         return (\r\n    //           <Select.Option value={option.value}>{option.text}</Select.Option>\r\n    //         );\r\n    //       })}\r\n    //     </Select>\r\n    //   ),\r\n    // },\r\n\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          <Tooltip title=\"Edit\"><Link to={`/admin/partners/communities/${homeId}/rooms/${room.key}`}><EditOutlined /></Link></Tooltip>\r\n          <Tooltip title=\"Clone\">\r\n            <Link onClick={() => { handelOnClone(room.key) }}>\r\n              <CopyOutlined />\r\n            </Link>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Delete\">\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this Room?\"\r\n              onConfirm={() => { handelOnDelete(room.key) }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\">\r\n              <Link onClick={() => { }}>\r\n                <DeleteOutlined />\r\n              </Link>\r\n            </Popconfirm>\r\n\r\n          </Tooltip>\r\n\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handelStatusChange = (value, roomId) => {\r\n    dispatch(updateRoom(roomId, { status: value }));\r\n  };\r\n\r\n  const handelOnDelete = (id) => {\r\n    setLoading(true);\r\n    // dispatch(setRoomListLoading(true));\r\n    dispatch(deleteRoom(id))\r\n  }\r\n  const handelOnClone = async (id) => {\r\n    setLoading(true);\r\n    console.log(id);\r\n    let values = roomList.filter((Item, Index) => {\r\n      return parseInt(Item.id) === parseInt(id);\r\n    });\r\n    // console.log('dsafsfsf', values);\r\n    // dispatch(setRoomListLoading(true));\r\n    // dispatch(cloneRoom(id));\r\n    await API.cloneRoom(id).then(async (Data) => {\r\n      values.user_created = user.id;\r\n      values.id = Data;\r\n      await dispatch(updateRoom(Data, values));\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={30}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n          <Space style={{ marginBottom: 16 }} className=\"btn-group-right\">\r\n            <Button href={`/dashboard/admin/partners/communities/${homeId}/rooms/add`}>Add Room</Button>\r\n          </Space>\r\n          <Table\r\n            columns={columns}\r\n            loading={loading}\r\n            dataSource={\r\n              roomList.map(({ name, type, base_rate, id, room_care_type, floor_level, bathroom_type, status }) => {\r\n                return { name, type, base_rate, room_care_type, floor_level, key: id, bathroom_type, status };\r\n              })\r\n            }\r\n            pagination={pagination}\r\n            onChange={handelTableChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomList: state.room.roomList,\r\n    roomListLoading: state.room.roomListLoading,\r\n    roomListMeta: state.room.roomListMeta,\r\n\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllRooms: () => dispatch(listAllRooms()),\r\n    setRoomListLoading: () => dispatch(setRoomListLoading()),\r\n    deleteRoom: () => dispatch(deleteRoom()),\r\n    cloneRoom: () => dispatch(cloneRoom()),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ListRooms);\r\n"]},"metadata":{},"sourceType":"module"}
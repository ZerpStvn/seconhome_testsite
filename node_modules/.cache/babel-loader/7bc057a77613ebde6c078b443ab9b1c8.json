{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\home-owner\\\\leads\\\\residents\\\\medical.js\";\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllResidents as _listAllResidents } from \"../../../../redux/actions/resident-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Tag, Skeleton, Card, Descriptions } from \"antd\";\nimport { compose } from \"redux\";\nimport \"../../../../helpers/string-helper\";\nimport { getNumberWithOrdinal } from \"../../../../helpers/number-helper\";\nimport { humanize } from \"../../../../helpers/string-helper\";\nimport { residentDialysis } from \"../../../../constants/defaultValues\";\n\nvar Medical = function Medical(_ref) {\n  var editLead = _ref.editLead,\n      editLeadLoading = _ref.editLeadLoading;\n  console.log(editLead, 'editLead');\n  var dispatch = useDispatch();\n  var residentList = [];\n\n  if (editLead) {\n    if (editLead.client) {\n      if (editLead.client.primary_resident) {\n        residentList.push(editLead.client.primary_resident);\n      }\n\n      if (editLead.client.second_resident) {\n        residentList.push(editLead.client.second_resident);\n      }\n    }\n  }\n\n  var residentDetails = residentList && residentList.map(function (resiedent, index) {\n    return /*#__PURE__*/React.createElement(Card, {\n      title: \"\".concat(index > 0 ? getNumberWithOrdinal(index + 1) : \"\", \" Resident Medical Details\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions, {\n      column: 1,\n      layout: \"horizontal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Cognition\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.cognition)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Wanders\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, resiedent.wanders == \"during_day_night\" ? \"During Day/Night\" : humanize(resiedent.wanders)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Confused\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.confused)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Sundowning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.sundowning)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Dysphagia\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.dysphagia)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Hospice\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.hospice)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Behavior\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, resiedent.behavior == \"physical_verbal\" ? \"Physical/Verbal\" : humanize(resiedent.behavior)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Insulin\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.insulin)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Glucose Testing\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.glucose_testing)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Hearing\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.hearing)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Sight\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.sight)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Speech\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, resiedent.speech == \"non_verbal\" ? \"Non-Verbal\" : humanize(resiedent.speech)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Dialysis\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, residentDialysis.map(function (item) {\n      if (item.value == resiedent.dialysis) {\n        return item.text;\n      }\n    })), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Recent Stroke\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.recent_stroke)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Allergies\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, resiedent.allergies == \"food_medication\" ? \"Food/Medication\" : humanize(resiedent.allergies)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Multiple Sclerosis\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.multiple_sclerosis)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Mental Illness\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.mental_illness)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Suicidal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.suicidal)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Bedridden\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.bedridden)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Wounds\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.wounds)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Parkinson's\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.parkinsons)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"HIV\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.hiv)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Medication List\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.medication_list)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Medical Notes\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, humanize(resiedent.medical_notes))));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Skeleton, {\n    loading: editLeadLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, residentDetails));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    editLead: state.lead.editLead,\n    editLeadLoading: state.lead.residentListLoading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllResidents: function listAllResidents() {\n      return dispatch(_listAllResidents());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Medical);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/home-owner/leads/residents/medical.js"],"names":["React","useEffect","connect","listAllResidents","useDispatch","Tag","Skeleton","Card","Descriptions","compose","getNumberWithOrdinal","humanize","residentDialysis","Medical","editLead","editLeadLoading","console","log","dispatch","residentList","client","primary_resident","push","second_resident","residentDetails","map","resiedent","index","cognition","wanders","confused","sundowning","dysphagia","hospice","behavior","insulin","glucose_testing","hearing","sight","speech","item","value","dialysis","text","recent_stroke","allergies","multiple_sclerosis","mental_illness","suicidal","bedridden","wounds","parkinsons","hiv","medication_list","medical_notes","mapStateToProps","state","lead","residentListLoading","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllResidents } from \"../../../../redux/actions/resident-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Tag, Skeleton, Card, Descriptions } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { } from \"../../../../helpers/string-helper\";\r\nimport { getNumberWithOrdinal } from \"../../../../helpers/number-helper\";\r\nimport { humanize } from \"../../../../helpers/string-helper\";\r\nimport { residentDialysis } from \"../../../../constants/defaultValues\";\r\n\r\n\r\n\r\n\r\nconst Medical = ({ editLead, editLeadLoading }) => {\r\n  console.log(editLead, 'editLead');\r\n\r\n  const dispatch = useDispatch();\r\n  var residentList = [];\r\n  if (editLead) {\r\n    if (editLead.client) {\r\n      if (editLead.client.primary_resident) {\r\n        residentList.push(editLead.client.primary_resident)\r\n      }\r\n      if (editLead.client.second_resident) {\r\n        residentList.push(editLead.client.second_resident)\r\n      }\r\n    }\r\n  }\r\n\r\n  const residentDetails = residentList && residentList.map((resiedent, index) => (\r\n    <Card title={`${index > 0 ? getNumberWithOrdinal(index + 1) : \"\"} Resident Medical Details`}>\r\n      <Descriptions column={1} layout=\"horizontal\">\r\n        <Descriptions.Item label=\"Cognition\">{humanize(resiedent.cognition)}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Wanders\">{resiedent.wanders == \"during_day_night\" ? \"During Day/Night\" : (humanize(resiedent.wanders))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Confused\">{humanize(resiedent.confused)}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Sundowning\">{humanize(resiedent.sundowning)}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Dysphagia\">{humanize(resiedent.dysphagia)}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Hospice\">{(humanize(resiedent.hospice))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Behavior\">{resiedent.behavior == \"physical_verbal\" ? \"Physical/Verbal\" : humanize(resiedent.behavior)}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Insulin\">{(humanize(resiedent.insulin))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Glucose Testing\">{(humanize(resiedent.glucose_testing))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Hearing\">{(humanize(resiedent.hearing))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Sight\">{(humanize(resiedent.sight))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Speech\">{resiedent.speech == \"non_verbal\" ? \"Non-Verbal\" : (humanize(resiedent.speech))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Dialysis\">\r\n          {residentDialysis.map((item) => {\r\n            if (item.value == resiedent.dialysis) {\r\n              return item.text\r\n            }\r\n          })}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Recent Stroke\">{(humanize(resiedent.recent_stroke))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Allergies\">{resiedent.allergies == \"food_medication\" ? \"Food/Medication\" : humanize(resiedent.allergies)}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Multiple Sclerosis\">{(humanize(resiedent.multiple_sclerosis))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Mental Illness\">{(humanize(resiedent.mental_illness))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Suicidal\">{(humanize(resiedent.suicidal))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Bedridden\">{(humanize(resiedent.bedridden))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Wounds\">{(humanize(resiedent.wounds))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Parkinson's\">{(humanize(resiedent.parkinsons))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"HIV\">{(humanize(resiedent.hiv))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Medication List\">{(humanize(resiedent.medication_list))}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Medical Notes\">{(humanize(resiedent.medical_notes))}</Descriptions.Item>\r\n\r\n      </Descriptions>\r\n\r\n    </Card>\r\n  ))\r\n\r\n  return (\r\n    <>\r\n      <Skeleton loading={editLeadLoading}>\r\n        {residentDetails}\r\n      </Skeleton>\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    editLead: state.lead.editLead,\r\n    editLeadLoading: state.lead.residentListLoading\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllResidents: () => dispatch(listAllResidents())\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Medical);\r\n"]},"metadata":{},"sourceType":"module"}
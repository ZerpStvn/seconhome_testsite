{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\listFavorite.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin } from \"../../../redux/actions/auth-actions\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport UserService from \"../../../services/user-service\";\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\nimport API from \"../../../redux/api/lead-client-api\";\nimport UserAPI from \"../../../redux/api/user-api\";\nimport Config from \"../../../config\";\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\nimport { mileageOptions, clientRelationShipOptions, leadSourceOptions } from \"../../../constants/defaultValues\";\nimport { Breadcrumb, Tabs, Popconfirm, message, Collapse, Form, Input, Select, Table, Checkbox, Button, Card, Row, Col, Spin, List, Avatar } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport { PhoneOutlined, LikeOutlined, DislikeOutlined } from \"@ant-design/icons\";\nimport { EditSvg } from \"../../../components/shared/svg/edit\";\nimport { EyeSvg } from \"../../../components/shared/svg/eye\";\nimport { PenSvg } from \"../../../components/shared/svg/pen\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport { listAllLikedLeadClients, setLeadClientListLoading } from \"../../../redux/actions/lead-client-actions\";\nvar TabPane = Tabs.TabPane;\n\nvar AdminListFavorite = function AdminListFavorite(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allLeads = _useState4[0],\n      setAllLeads = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      likeLeadData = _useState6[0],\n      setLikeLeadData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      disLikeLeadData = _useState8[0],\n      setDisLikeLeadData = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      primaryClientLoaded = _useState10[0],\n      setPrimaryClientLoaded = _useState10[1];\n\n  var user = UserService.getAdminUser();\n  useEffect(function () {\n    primaryClientLoaded && getPrimaryClient();\n  }, [primaryClientLoaded]);\n\n  function popConfirmCancel(e) {\n    console.log(e);\n    message.error('Canceled');\n  }\n\n  var getPrimaryClient = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var leadClient, leadData, likedData, disLikedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.listAllLeadClients({\n                fields: \"leads.*,leads.home.*\",\n                filter: {\n                  user: {\n                    _eq: user.id\n                  }\n                }\n              });\n\n            case 2:\n              leadClient = _context.sent;\n\n              if (leadClient.data) {\n                console.log(leadClient);\n                leadData = leadClient.data[0].leads;\n                likedData = [];\n                disLikedData = [];\n                leadData.forEach(function (Item, index) {\n                  if (Item.is_liked) {\n                    if (Item.home) {\n                      likedData.push({\n                        key: \"like_\".concat(index),\n                        name: Item.home.name,\n                        address: Item.home.address_line_1,\n                        city: Item.home.city,\n                        state: Item.home.state,\n                        clientStatus: humanize(Item.approval.replaceAll('_', ' ')),\n                        verification: humanize(Item.home.verification),\n                        action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n                          style: {\n                            width: \"130px\"\n                          },\n                          defaultValue: Item.is_liked,\n                          onChange: function onChange(text) {\n                            return likeHandler(Item.id, text);\n                          },\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 69,\n                            columnNumber: 33\n                          }\n                        }, /*#__PURE__*/React.createElement(Select.Option, {\n                          value: 1,\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 74,\n                            columnNumber: 37\n                          }\n                        }, \"Like\"), /*#__PURE__*/React.createElement(Select.Option, {\n                          value: 0,\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 75,\n                            columnNumber: 37\n                          }\n                        }, \"Dislike\"), /*#__PURE__*/React.createElement(Select.Option, {\n                          value: null,\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 76,\n                            columnNumber: 37\n                          }\n                        }, \"Neither\")))\n                      });\n                    }\n                  } else if (Item.is_liked === 0) {\n                    if (Item.home) {\n                      disLikedData.push({\n                        key: \"dislike_\".concat(index),\n                        name: Item.home.name,\n                        address: Item.home.address_line_1,\n                        city: Item.home.city,\n                        state: Item.home.state,\n                        clientStatus: humanize(Item.approval.replaceAll('_', ' ')),\n                        verification: humanize(Item.home.verification),\n                        action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n                          style: {\n                            width: \"130px\"\n                          },\n                          defaultValue: Item.is_liked,\n                          onChange: function onChange(text) {\n                            return likeHandler(Item.id, text);\n                          },\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 104,\n                            columnNumber: 33\n                          }\n                        }, /*#__PURE__*/React.createElement(Select.Option, {\n                          value: 1,\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 109,\n                            columnNumber: 37\n                          }\n                        }, \"Like\"), /*#__PURE__*/React.createElement(Select.Option, {\n                          value: 0,\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 110,\n                            columnNumber: 37\n                          }\n                        }, \"Dislike\"), /*#__PURE__*/React.createElement(Select.Option, {\n                          value: null,\n                          __self: _this,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 111,\n                            columnNumber: 37\n                          }\n                        }, \"Neither\")))\n                      });\n                    }\n                  }\n                });\n                setLikeLeadData(likedData);\n                setDisLikeLeadData(disLikedData);\n                setPrimaryClientLoaded(false);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getPrimaryClient() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var likeHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Id, likeValue) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // setPrimaryClientLoaded(true);\n              data = {\n                is_liked: likeValue\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return dispatch(updateLead(Id, data));\n\n            case 4:\n              setPrimaryClientLoaded(true);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 7]]);\n    }));\n\n    return function likeHandler(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: 'Name',\n    dataIndex: 'name' // sorter: {\n    //     compare: (a, b) => a.name - b.name,\n    //     multiple: 4,\n    // },\n\n  }, {\n    title: 'Address',\n    dataIndex: 'address' // sorter: {\n    //     compare: (a, b) => a.address - b.address,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'City',\n    dataIndex: 'city' // sorter: {\n    //     compare: (a, b) => a.city - b.city,\n    //     multiple: 2,\n    // },\n\n  }, // {\n  //     title: 'State',\n  //     dataIndex: 'state',\n  //     sorter: {\n  //         compare: (a, b) => a.state - b.state,\n  //         multiple: 1,\n  //     },\n  // },\n  {\n    title: 'Client Status',\n    dataIndex: 'clientStatus' // sorter: {\n    //     compare: (a, b) => a.clientStatus - b.clientStatus,\n    //     multiple: 1,\n    // },\n\n  }, // {\n  //     title: 'Verification',\n  //     dataIndex: 'verification',\n  //     sorter: {\n  //         compare: (a, b) => a.verification - b.verification,\n  //         multiple: 1,\n  //     },\n  // },\n  {\n    title: 'Action',\n    dataIndex: 'action' // sorter: {\n    //     compare: (a, b) => a.action - b.action,\n    //     multiple: 1,\n    // },\n\n  }];\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, console.log('ll:', user), /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 35\n    }\n  }, \"Client \")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"cap-letter\",\n    to: \"/admin/client/overview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 35\n    }\n  }, user && user.client && user.client.length > 0 && user.client[0].name)), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"Favorites/Dislikes\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"favorites\",\n    onChange: function onChange() {\n      return console.log(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Favorites\",\n    key: \"favorites\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: likeLeadData,\n    onChange: onChange,\n    loading: primaryClientLoaded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Dislikes\",\n    key: \"dislikes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: disLikeLeadData,\n    onChange: onChange,\n    loading: primaryClientLoaded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminListFavorite);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/client/listFavorite.js"],"names":["React","useState","useEffect","connect","signin","Link","useDispatch","notifyUser","UserService","createLeadClient","API","UserAPI","Config","updateLead","mileageOptions","clientRelationShipOptions","leadSourceOptions","Breadcrumb","Tabs","Popconfirm","message","Collapse","Form","Input","Select","Table","Checkbox","Button","Card","Row","Col","Spin","List","Avatar","Icon","PhoneOutlined","LikeOutlined","DislikeOutlined","EditSvg","EyeSvg","PenSvg","humanize","listAllLikedLeadClients","setLeadClientListLoading","TabPane","AdminListFavorite","history","dispatch","submitted","setSubmitted","allLeads","setAllLeads","likeLeadData","setLikeLeadData","disLikeLeadData","setDisLikeLeadData","primaryClientLoaded","setPrimaryClientLoaded","user","getAdminUser","getPrimaryClient","popConfirmCancel","e","console","log","error","listAllLeadClients","fields","filter","_eq","id","leadClient","data","leadData","leads","likedData","disLikedData","forEach","Item","index","is_liked","home","push","key","name","address","address_line_1","city","state","clientStatus","approval","replaceAll","verification","action","width","text","likeHandler","Id","likeValue","columns","title","dataIndex","onChange","pagination","filters","sorter","extra","client","length","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\r\nimport API from \"../../../redux/api/lead-client-api\";\r\nimport UserAPI from \"../../../redux/api/user-api\";\r\nimport Config from \"../../../config\";\r\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\r\nimport { mileageOptions, clientRelationShipOptions, leadSourceOptions } from \"../../../constants/defaultValues\";\r\nimport { Breadcrumb, Tabs, Popconfirm, message, Collapse, Form, Input, Select, Table, Checkbox, Button, Card, Row, Col, Spin, List, Avatar } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { PhoneOutlined, LikeOutlined, DislikeOutlined } from \"@ant-design/icons\";\r\nimport { EditSvg } from \"../../../components/shared/svg/edit\";\r\nimport { EyeSvg } from \"../../../components/shared/svg/eye\";\r\nimport { PenSvg } from \"../../../components/shared/svg/pen\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport { listAllLikedLeadClients, setLeadClientListLoading, } from \"../../../redux/actions/lead-client-actions\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst AdminListFavorite = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [allLeads, setAllLeads] = useState({});\r\n\r\n    const [likeLeadData, setLikeLeadData] = useState([]);\r\n    const [disLikeLeadData, setDisLikeLeadData] = useState([]);\r\n\r\n    const [primaryClientLoaded, setPrimaryClientLoaded] = useState(true);\r\n\r\n    const user = UserService.getAdminUser();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        primaryClientLoaded && getPrimaryClient();\r\n    }, [primaryClientLoaded]);\r\n\r\n\r\n    function popConfirmCancel(e) {\r\n        console.log(e);\r\n        message.error('Canceled');\r\n    }\r\n\r\n    const getPrimaryClient = async () => {\r\n        var leadClient = await API.listAllLeadClients({ fields: \"leads.*,leads.home.*\", filter: { user: { _eq: user.id } } });\r\n        if (leadClient.data) {\r\n            console.log(leadClient);\r\n            let leadData = leadClient.data[0].leads;\r\n            let likedData = [];\r\n            let disLikedData = [];\r\n            leadData.forEach((Item, index) => {\r\n                if (Item.is_liked) {\r\n                    if (Item.home) {\r\n                        likedData.push({\r\n                            key: `like_${index}`,\r\n                            name: Item.home.name,\r\n                            address: Item.home.address_line_1,\r\n                            city: Item.home.city,\r\n                            state: Item.home.state,\r\n                            clientStatus: humanize(Item.approval.replaceAll('_', ' ')),\r\n                            verification: humanize(Item.home.verification),\r\n                            action: <>\r\n                                <Select\r\n                                    style={{ width: \"130px\" }}\r\n                                    defaultValue={Item.is_liked}\r\n                                    onChange={(text) => likeHandler(Item.id, text)}\r\n                                >\r\n                                    <Select.Option value={1}>Like</Select.Option>\r\n                                    <Select.Option value={0}>Dislike</Select.Option>\r\n                                    <Select.Option value={null}>Neither</Select.Option>\r\n                                </Select>\r\n                                {/* <Popconfirm\r\n                                title=\"Are you sure to Dislike?\"\r\n                                onConfirm={() => likeHandler(Item.id, false)}\r\n                                onCancel={popConfirmCancel}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n\r\n                                <a href=\"#\">Dislike <DislikeOutlined /></a>\r\n                            </Popconfirm> */}\r\n                            </>,\r\n                        });\r\n                    }\r\n\r\n                }\r\n                else if (Item.is_liked === 0) {\r\n                    if (Item.home) {\r\n                        disLikedData.push({\r\n                            key: `dislike_${index}`,\r\n                            name: Item.home.name,\r\n                            address: Item.home.address_line_1,\r\n                            city: Item.home.city,\r\n                            state: Item.home.state,\r\n                            clientStatus: humanize(Item.approval.replaceAll('_', ' ')),\r\n                            verification: humanize(Item.home.verification),\r\n                            action: <>\r\n                                <Select\r\n                                    style={{ width: \"130px\" }}\r\n                                    defaultValue={Item.is_liked}\r\n                                    onChange={(text) => likeHandler(Item.id, text)}\r\n                                >\r\n                                    <Select.Option value={1}>Like</Select.Option>\r\n                                    <Select.Option value={0}>Dislike</Select.Option>\r\n                                    <Select.Option value={null}>Neither</Select.Option>\r\n                                </Select>\r\n                                {/* <Popconfirm\r\n                                title=\"Are you sure to Dislike?\"\r\n                                onConfirm={() => likeHandler(Item.id, true)}\r\n                                onCancel={popConfirmCancel}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <a href=\"#\">Like <LikeOutlined /></a>\r\n                            </Popconfirm> */}\r\n                            </>,\r\n                        });\r\n                    }\r\n\r\n                }\r\n            });\r\n            setLikeLeadData(likedData);\r\n            setDisLikeLeadData(disLikedData);\r\n            setPrimaryClientLoaded(false);\r\n\r\n        }\r\n    }\r\n\r\n    const likeHandler = async (Id, likeValue) => {\r\n        // setPrimaryClientLoaded(true);\r\n        const data = { is_liked: likeValue };\r\n        try {\r\n            await dispatch(updateLead(Id, data));\r\n            setPrimaryClientLoaded(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.name - b.name,\r\n            //     multiple: 4,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.address - b.address,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'City',\r\n            dataIndex: 'city',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.city - b.city,\r\n            //     multiple: 2,\r\n            // },\r\n        },\r\n        // {\r\n        //     title: 'State',\r\n        //     dataIndex: 'state',\r\n        //     sorter: {\r\n        //         compare: (a, b) => a.state - b.state,\r\n        //         multiple: 1,\r\n        //     },\r\n        // },\r\n        {\r\n            title: 'Client Status',\r\n            dataIndex: 'clientStatus',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.clientStatus - b.clientStatus,\r\n            //     multiple: 1,\r\n            // },\r\n        },\r\n        // {\r\n        //     title: 'Verification',\r\n        //     dataIndex: 'verification',\r\n        //     sorter: {\r\n        //         compare: (a, b) => a.verification - b.verification,\r\n        //         multiple: 1,\r\n        //     },\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.action - b.action,\r\n            //     multiple: 1,\r\n            // },\r\n        },\r\n    ];\r\n\r\n\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {console.log('ll:',user)}\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item> <Link to=\"/admin\">Client </Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item ><Link className=\"cap-letter\" to=\"/admin/client/overview\">{user && user.client && user.client.length > 0 && user.client[0].name}</Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item>Favorites/Dislikes</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div>\r\n                <Tabs defaultActiveKey=\"favorites\" onChange={() => console.log(0)}>\r\n                    <TabPane tab=\"Favorites\" key=\"favorites\">\r\n                        <Table columns={columns} dataSource={likeLeadData} onChange={onChange} loading={primaryClientLoaded} />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"Dislikes\" key=\"dislikes\">\r\n                        <Table columns={columns} dataSource={disLikeLeadData} onChange={onChange} loading={primaryClientLoaded} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n\r\n        </React.Fragment >\r\n    );\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminListFavorite);\r\n"]},"metadata":{},"sourceType":"module"}
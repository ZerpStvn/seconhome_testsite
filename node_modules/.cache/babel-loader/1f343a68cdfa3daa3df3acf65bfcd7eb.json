{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\saved-search.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin } from \"../../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport UserService from \"../../../services/user-service\";\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\nimport API from \"../../../redux/api/saved-search\";\nimport { Breadcrumb, Empty, Form, Button, Card, Row, Col, Spin, Typography, Modal } from \"antd\";\nimport { CloseOutlined, EyeOutlined } from \"@ant-design/icons\";\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport SavedSearchCard from \"./saved-search-card\";\nvar Text = Typography.Text,\n    Title = Typography.Title;\n\nvar SavedSearch = function SavedSearch(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _Form$useForm3 = Form.useForm(),\n      _Form$useForm4 = _slicedToArray(_Form$useForm3, 1),\n      formPrimaryContact = _Form$useForm4[0];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      savedSearch = _useState2[0],\n      setSavedSearch = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      primaryClientLoaded = _useState4[0],\n      setPrimaryClientLoaded = _useState4[1];\n\n  var user = UserService.getAdminUser();\n  useEffect(function () {\n    primaryClientLoaded && getPrimaryClient();\n  }, [primaryClientLoaded]);\n\n  var getPrimaryClient = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var leadClient, TempSaveSearchData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.savedSearch({\n                fields: \"*\",\n                filter: {\n                  client: {\n                    _eq: user.client[0].id\n                  }\n                }\n              });\n\n            case 2:\n              leadClient = _context.sent;\n              TempSaveSearchData = leadClient.data.filter(function (Item, Index) {\n                return Item.client === user.client[0].id;\n              });\n              setSavedSearch(TempSaveSearchData);\n              setPrimaryClientLoaded(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getPrimaryClient() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteSavedSearch = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Id) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return API.deleteSavedSearch(Id);\n\n            case 2:\n              setPrimaryClientLoaded(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteSavedSearch(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Spin, {\n    spinning: primaryClientLoaded,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"save-search-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Client\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, humanize(user.client[0].name)), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Saved Search\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"card-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, savedSearch.length !== 0 ? savedSearch.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Col, {\n      className: \"gutter-row\",\n      xs: 24,\n      sm: 12,\n      md: 8,\n      lg: 6,\n      xl: 6,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SavedSearchCard, {\n      data: item,\n      deleteSavedSearch: deleteSavedSearch,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    md: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }))))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedSearch);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/admin/client/saved-search.js"],"names":["React","useState","useEffect","connect","signin","useDispatch","notifyUser","UserService","createLeadClient","API","Breadcrumb","Empty","Form","Button","Card","Row","Col","Spin","Typography","Modal","CloseOutlined","EyeOutlined","moment","Link","humanize","SavedSearchCard","Text","Title","SavedSearch","history","dispatch","useForm","form","formPrimaryContact","savedSearch","setSavedSearch","primaryClientLoaded","setPrimaryClientLoaded","user","getAdminUser","getPrimaryClient","fields","filter","client","_eq","id","leadClient","TempSaveSearchData","data","Item","Index","deleteSavedSearch","Id","name","length","map","item","index","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\r\nimport API from \"../../../redux/api/saved-search\";\r\nimport { Breadcrumb, Empty, Form, Button, Card, Row, Col, Spin, Typography, Modal } from \"antd\";\r\nimport { CloseOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport SavedSearchCard from \"./saved-search-card\";\r\nconst { Text, Title } = Typography;\r\n\r\n\r\nconst SavedSearch = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n    const [formPrimaryContact] = Form.useForm();\r\n\r\n    const [savedSearch, setSavedSearch] = useState([]);\r\n    const [primaryClientLoaded, setPrimaryClientLoaded] = useState(true);\r\n\r\n    const user = UserService.getAdminUser()\r\n    useEffect(() => {\r\n        primaryClientLoaded && getPrimaryClient();\r\n    }, [primaryClientLoaded]);\r\n\r\n\r\n    const getPrimaryClient = async () => {\r\n        let leadClient = await API.savedSearch({ fields: \"*\", filter: { client: { _eq: user.client[0].id } } });\r\n        let TempSaveSearchData = leadClient.data.filter((Item, Index) => {\r\n            return Item.client === user.client[0].id\r\n        });\r\n        setSavedSearch(TempSaveSearchData);\r\n        setPrimaryClientLoaded(false);\r\n    }\r\n\r\n    const deleteSavedSearch = async (Id) => {\r\n        await API.deleteSavedSearch(Id);\r\n        setPrimaryClientLoaded(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Spin spinning={primaryClientLoaded} size=\"large\">\r\n            <div className=\"save-search-page\">\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>Client</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>{humanize(user.client[0].name)}</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>Saved Search</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Card className=\"card-wrap\">\r\n                    <Row gutter={24}>\r\n                        {savedSearch.length !== 0 ?\r\n                            savedSearch.map((item, index) => {\r\n                                return (\r\n                                    <Col className=\"gutter-row\" xs={24} sm={12} md={8} lg={6} xl={6} key={index}>\r\n                                        <SavedSearchCard data={item} deleteSavedSearch={deleteSavedSearch} />\r\n                                        {/* <Card className=\"save-search-card\">\r\n                                            <div className=\"card-inner\">\r\n                                                <div className=\"card-header\"><span>\r\n                                                    <Title level={3}>{humanize(item.title)}</Title>\r\n                                                </span>\r\n                                                    <div className=\"edit-option\">\r\n                                                        <Link onClick={() => deleteSavedSearch(item.id)}>\r\n                                                            <CloseOutlined />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {item.state !== null && item.city !== null ?\r\n                                                    <p style={{ marginTop: 20 }}>\r\n                                                        <span>{item.city !== null ? item.city : ''}, {item.state !== null ? item.state : ''}</span>\r\n                                                    </p>\r\n                                                    : ''}\r\n\r\n                                                <div className=\"card-content\">\r\n                                                    {mapContent(item)}\r\n                                                </div>\r\n                                                <div className=\"card-footer\">\r\n                                                    <Button size=\"large\" className=\"search-btn\" href={`/admin/clients/community/search/${item.id}`}>\r\n                                                        Run Search\r\n                                                    </Button>\r\n                                                    <a\r\n                                                        onClick={showDetailModal}\r\n                                                        style={{ color: \"#1B75BC\" }}\r\n                                                    >\r\n                                                        <EyeOutlined />\r\n                                                    </a>\r\n                                                </div>\r\n                                                <Modal footer={null} title=\"Details\" visible={isDetailModalVisible} onOk={showDetailModal} onCancel={showDetailModal}>\r\n                                                    <div>\r\n                                                        {mapModalContent(item)}\r\n                                                    </div>\r\n                                                </Modal>\r\n                                            </div>\r\n                                        </Card> */}\r\n                                    </Col>\r\n                                );\r\n                            })\r\n                            : <Col xs={24} md={24} >\r\n                                <Empty />\r\n                            </Col>}\r\n                        {/* {savedSearch.map((item, index) => {\r\n                            return (\r\n                                <Col className=\"gutter-row\" xs={24} sm={12} md={8} lg={6} xl={6} key={index}>\r\n                                    <Card className=\"save-search-card\">\r\n                                        <div className=\"card-inner\">\r\n                                            <div className=\"card-header\"><span>\r\n                                                <Title level={3}>{humanize(item.title)}</Title>\r\n                                            </span>\r\n                                                <div className=\"edit-option\">\r\n                                                    <Link onClick={() => deleteSavedSearch(item.id)}>\r\n                                                        <CloseOutlined />\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            {item.state !== null && item.city !== null ?\r\n                                                <p style={{ marginTop: 20 }}>\r\n                                                    <span>{item.city !== null ? item.city : ''}, {item.state !== null ? item.state : ''}</span>\r\n                                                </p>\r\n                                                : ''}\r\n\r\n                                            <div className=\"card-content\">\r\n                                                {mapContent(item)}\r\n                                            </div>\r\n                                            <div className=\"card-footer\">\r\n                                                <Button size=\"large\" className=\"search-btn\" href={`/admin/clients/community/search/${item.id}`}>\r\n                                                    Run Search\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Col>\r\n                            );\r\n                        })} */}\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        </Spin>\r\n\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedSearch);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\communities\\\\clone-community.js\";\n\nimport React, { useState } from \"react\";\nimport { setHomeListLoading, cloneHome, updateHome } from \"../../../../redux/actions/home-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../../services/notification-service\";\nimport { Button, Form, Input } from \"antd\";\n\nvar GetClonButtonContent = function GetClonButtonContent(_ref) {\n  var id = _ref.id,\n      user = _ref.user;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cloneLoading = _useState2[0],\n      setCloneLoading = _useState2[1];\n\n  var handelSave = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setCloneLoading(true);\n              values.user_created = user.id;\n              _context.next = 4;\n              return cloneHome(id, values);\n\n            case 4:\n              response = _context.sent;\n\n              if (!response) {\n                _context.next = 12;\n                break;\n              }\n\n              values.user_created = user.id;\n              _context.next = 9;\n              return dispatch(updateHome(response, values));\n\n            case 9:\n              notifyUser(\"Community Clone is created\", \"success\");\n              setCloneLoading(false);\n              dispatch(setHomeListLoading(true));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handelSave(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"horizontal\",\n    onFinish: handelSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Community Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"Please Input Name!\",\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: cloneLoading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Save\"))));\n};\n\nexport default GetClonButtonContent;","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/admin/partner/communities/clone-community.js"],"names":["React","useState","setHomeListLoading","cloneHome","updateHome","useDispatch","notifyUser","Button","Form","Input","GetClonButtonContent","id","user","useForm","form","dispatch","cloneLoading","setCloneLoading","handelSave","values","user_created","response","required","message","whitespace"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,kBAAT,EAA6BC,SAA7B,EAAwCC,UAAxC,QAA0D,wCAA1D;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,2CAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAkB;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,sBAC5BJ,IAAI,CAACK,OAAL,EAD4B;AAAA;AAAA,MACpCC,IADoC;;AAE3C,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAF2C,kBAGHJ,QAAQ,CAAC,KAAD,CAHL;AAAA;AAAA,MAGpCe,YAHoC;AAAA,MAGtBC,eAHsB;;AAI3C,MAAMC,UAAU;AAAA,yEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfF,cAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,cAAAA,MAAM,CAACC,YAAP,GAAsBR,IAAI,CAACD,EAA3B;AAFe;AAAA,qBAGQR,SAAS,CAACQ,EAAD,EAAKQ,MAAL,CAHjB;;AAAA;AAGTE,cAAAA,QAHS;;AAAA,mBAIXA,QAJW;AAAA;AAAA;AAAA;;AAKXF,cAAAA,MAAM,CAACC,YAAP,GAAsBR,IAAI,CAACD,EAA3B;AALW;AAAA,qBAMLI,QAAQ,CAACX,UAAU,CAACiB,QAAD,EAAWF,MAAX,CAAX,CANH;;AAAA;AAOXb,cAAAA,UAAU,CAAC,4BAAD,EAA+B,SAA/B,CAAV;AACAW,cAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,cAAAA,QAAQ,CAACb,kBAAkB,CAAC,IAAD,CAAnB,CAAR;;AATW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVgB,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAYA,sBAAO,uDACH,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,IAAZ;AAAkB,IAAA,MAAM,EAAE,YAA1B;AAAwC,IAAA,QAAQ,EAAEI,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAE,CACH;AACII,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE,oBAFb;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,GAAlB;AAAuB,IAAA,WAAW,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ,eAcI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,YAAjB;AAA+B,IAAA,IAAI,EAAC,SAApC;AAA8C,IAAA,QAAQ,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAdJ,CADG,CAAP;AAyBH,CAzCD;;AA2CA,eAAeN,oBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { setHomeListLoading, cloneHome, updateHome } from \"../../../../redux/actions/home-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../../services/notification-service\";\r\nimport { Button, Form, Input } from \"antd\";\r\n\r\nconst GetClonButtonContent = ({ id, user }) => {\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch();\r\n    const [cloneLoading, setCloneLoading] = useState(false);\r\n    const handelSave = async (values) => {\r\n        setCloneLoading(true)\r\n        values.user_created = user.id;\r\n        const response = await cloneHome(id, values);\r\n        if (response) {\r\n            values.user_created = user.id;\r\n            await dispatch(updateHome(response, values));\r\n            notifyUser(\"Community Clone is created\", \"success\");\r\n            setCloneLoading(false)\r\n            dispatch(setHomeListLoading(true));\r\n        }\r\n    }\r\n    return <>\r\n        <Form form={form} layout={\"horizontal\"} onFinish={handelSave}>\r\n            <Form.Item\r\n                label=\"Community Name\"\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please Input Name!\",\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input maxLength={255} placeholder=\"Name\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button loading={cloneLoading} type=\"primary\" htmlType=\"submit\">\r\n                    Save\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n\r\n    </>\r\n\r\n\r\n}\r\n\r\nexport default GetClonButtonContent;"]},"metadata":{},"sourceType":"module"}
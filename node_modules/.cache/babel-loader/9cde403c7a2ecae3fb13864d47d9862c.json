{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\partner-tour.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllLeads as _listAllLeads, updateLead as _updateLead, setLeadListLoading as _setLeadListLoading } from \"../../../redux/actions/lead-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport { Tabs, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Select, Form, Input, Popover, Tooltip } from \"antd\";\nimport { compose } from \"redux\";\nimport { DownOutlined, EditOutlined, FilterFilled, FilterOutlined, TagFilled } from '@ant-design/icons';\nimport { data } from \"jquery\";\nimport { leadApprovalOptions, leadStatusOptions } from \"../../../constants/defaultValues\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\nimport UserService from \"../../../services/user-service\";\nimport moment from 'moment';\nvar TextArea = Input.TextArea;\nvar TabPane = Tabs.TabPane;\n\nvar PartnerTourList = function PartnerTourList(_ref) {\n  var leadList = _ref.leadList,\n      leadListLoading = _ref.leadListLoading,\n      leadMessage = _ref.leadMessage,\n      leadUpdated = _ref.leadUpdated,\n      leadListMeta = _ref.leadListMeta;\n  var user = UserService.getAdminUser();\n\n  var _useState = useState({\n    pageSize: 5,\n    current: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var _useState5 = useState({\n    \"home\": {\n      \"user_created\": {\n        \"_eq\": user.id\n      }\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      scheduleTour = _useState8[0],\n      setScheduleTour = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      scheduledTour = _useState10[0],\n      setScheduledTour = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pastTour = _useState12[0],\n      setPastTour = _useState12[1];\n\n  var timeZone = new Date().getTimezoneOffset();\n  var dispatch = useDispatch();\n\n  var handelApprovalChange = function handelApprovalChange(values, leadId) {\n    dispatch(_updateLead(leadId, values));\n  };\n\n  useEffect(function () {\n    leadListLoading && dispatch(_listAllLeads({\n      fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"],\n      filter: filters\n    })); // leadListLoading && dispatch(listAllLeads({ fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"], filter: filters, sort, page: pagination.current, limit: pagination.pageSize, meta: \"*\" }));\n\n    leadListMeta && setPagination(_objectSpread({}, pagination, {\n      total: leadListMeta.filter_count\n    }));\n\n    if (leadUpdated) {\n      notifyUser(leadMessage, \"success\");\n    }\n\n    console.log(leadList);\n\n    if (leadList.length != 0) {\n      var tempScheduleTour = [];\n      var tempScheduledTour = [];\n      var tempPastTour = [];\n      leadList.forEach(function (Item, index) {\n        var finalTime;\n\n        if (Item.scheduled_date) {\n          var time = new Date(Item.scheduled_date).getTime();\n          finalTime = time + -timeZone * 60000;\n        }\n\n        if (Item.tour_status === 'scheduled' && new Date(finalTime).getTime() < new Date().getTime()) {\n          tempPastTour.push({\n            key: index,\n            name: Item.home && humanize(Item.home.name),\n            client_name: Item.client && humanize(Item.client.name),\n            // status: <Tag color=\"blue\" key={index}>\n            //     {humanize(Item.tour_status)}\n            // </Tag>,\n            date: Item.scheduled_date ? \"\".concat(moment(finalTime).format('MM-DD-YYYY'), \" \").concat(moment(finalTime).format('LT')) : \"N/A\"\n          });\n        } else if (Item.tour_status === 'scheduled') {\n          tempScheduledTour.push({\n            key: index,\n            name: Item.home && humanize(Item.home.name),\n            client_name: Item.client && humanize(Item.client.name),\n            status: /*#__PURE__*/React.createElement(Tag, {\n              color: \"blue\",\n              key: index,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }\n            }, humanize(Item.tour_status)),\n            date: Item.scheduled_date ? \"\".concat(moment(finalTime).format('MM-DD-YYYY'), \" \").concat(moment(finalTime).format('LT')) : \"N/A\"\n          });\n        } else {\n          tempScheduleTour.push({\n            key: index,\n            name: Item.home && humanize(Item.home.name),\n            client_name: Item.client && humanize(Item.client.name),\n            status: /*#__PURE__*/React.createElement(Tag, {\n              color: \"blue\",\n              key: index,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }\n            }, humanize(Item.tour_status)),\n            date: Item.scheduled_date ? \"\".concat(moment(finalTime).format('MM-DD-YYYY'), \" \").concat(moment(finalTime).format('LT')) : \"N/A\"\n          });\n        }\n      });\n      setScheduleTour(tempScheduleTour);\n      setScheduledTour(tempScheduledTour);\n      setPastTour(tempPastTour);\n    }\n\n    return function () {\n      console.log(\"Communities Unmounting\");\n    };\n  }, [leadUpdated, leadMessage, leadListLoading]);\n  var scheduledTourColumns = [{\n    title: 'Name',\n    dataIndex: 'name' //sorter: (a, b) => a.name.localeCompare(b.name),\n\n  }, {\n    title: 'Client Name',\n    dataIndex: 'client_name' // sorter: {\n    //     compare: (a, b) => a.client_name - b.client_name,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Status',\n    dataIndex: 'status' // sorter: {\n    //     compare: (a, b) => a.status - b.status,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Date & Time',\n    dataIndex: 'date' //sorter: (a, b) => a.date.localeCompare(b.date),\n\n  }];\n  var scheduleTourColumns = [{\n    title: 'Name',\n    dataIndex: 'name' //sorter: (a, b) => a.name.localeCompare(b.name),\n\n  }, {\n    title: 'Client Name',\n    dataIndex: 'client_name' //sorter: {\n    //     compare: (a, b) => a.client_name - b.client_name,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Status',\n    dataIndex: 'status' //sorter: {\n    //     compare: (a, b) => a.status - b.status,\n    //     multiple: 3,\n    // },\n\n  }];\n  var pastTourColumns = [{\n    title: 'Name',\n    dataIndex: 'name' // sorter: {\n    //     compare: (a, b) => a.name - b.name,\n    //     multiple: 4,\n    // },\n\n  }, {\n    title: 'Client Name',\n    dataIndex: 'client_name' // sorter: {\n    //     compare: (a, b) => a.client_name - b.client_name,\n    //     multiple: 3,\n    // },\n\n  }, {\n    title: 'Date & Time',\n    dataIndex: 'date' // sorter: {\n    //     compare: (a, b) => a.date - b.date,\n    //     multiple: 2,\n    // },\n\n  }];\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/partners\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Partners\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/partner/overview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 34\n    }\n  }, humanize(user.first_name), \" \", humanize(user.last_name))), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, \"Tours\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"scheduleTour\",\n    onChange: function onChange() {\n      return console.log(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Scheduled Tour\",\n    key: \"scheduledTour\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: scheduledTourColumns,\n    dataSource: scheduledTour,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Past Tour\",\n    key: \"pastTour\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: pastTourColumns,\n    dataSource: pastTour,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    leadList: state.lead.leadList,\n    leadListLoading: state.lead.leadListLoading,\n    leadListMeta: state.lead.leadListMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllLeads: function listAllLeads() {\n      return dispatch(_listAllLeads());\n    },\n    updateLead: function updateLead() {\n      return dispatch(_updateLead());\n    },\n    setLeadListLoading: function setLeadListLoading() {\n      return dispatch(_setLeadListLoading());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(PartnerTourList);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/partner/partner-tour.js"],"names":["React","useEffect","useState","connect","listAllLeads","updateLead","setLeadListLoading","useDispatch","Link","notifyUser","Tabs","Divider","Row","Col","Button","PageHeader","Table","Tag","Space","Breadcrumb","Select","Form","Input","Popover","Tooltip","compose","DownOutlined","EditOutlined","FilterFilled","FilterOutlined","TagFilled","data","leadApprovalOptions","leadStatusOptions","humanize","getColumnSearchProps","UserService","moment","TextArea","TabPane","PartnerTourList","leadList","leadListLoading","leadMessage","leadUpdated","leadListMeta","user","getAdminUser","pageSize","current","pagination","setPagination","sort","setSort","id","filters","setFilters","scheduleTour","setScheduleTour","scheduledTour","setScheduledTour","pastTour","setPastTour","timeZone","Date","getTimezoneOffset","dispatch","handelApprovalChange","values","leadId","fields","filter","total","filter_count","console","log","length","tempScheduleTour","tempScheduledTour","tempPastTour","forEach","Item","index","finalTime","scheduled_date","time","getTime","tour_status","push","key","name","home","client_name","client","date","format","status","scheduledTourColumns","title","dataIndex","scheduleTourColumns","pastTourColumns","onChange","sorter","extra","first_name","last_name","mapStateToProps","state","lead","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllLeads, updateLead, setLeadListLoading } from \"../../../redux/actions/lead-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport { Tabs, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Select, Form, Input, Popover, Tooltip } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { DownOutlined, EditOutlined, FilterFilled, FilterOutlined, TagFilled } from '@ant-design/icons';\r\nimport { data } from \"jquery\";\r\nimport { leadApprovalOptions, leadStatusOptions } from \"../../../constants/defaultValues\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport moment from 'moment';\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\nconst PartnerTourList = ({ leadList, leadListLoading, leadMessage, leadUpdated, leadListMeta }) => {\r\n    const user = UserService.getAdminUser();\r\n    const [pagination, setPagination] = useState({\r\n        pageSize: 5,\r\n        current: 1,\r\n    });\r\n    const [sort, setSort] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        \"home\": {\r\n            \"user_created\": {\r\n                \"_eq\": user.id\r\n            }\r\n        }\r\n    });\r\n    const [scheduleTour, setScheduleTour] = useState([]);\r\n    const [scheduledTour, setScheduledTour] = useState([]);\r\n    const [pastTour, setPastTour] = useState([]);\r\n    const timeZone = new Date().getTimezoneOffset();\r\n    const dispatch = useDispatch();\r\n    const handelApprovalChange = (values, leadId) => {\r\n        dispatch(updateLead(leadId, values));\r\n\r\n    }\r\n    useEffect(() => {\r\n        leadListLoading && dispatch(listAllLeads({ fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"], filter: filters }));\r\n        // leadListLoading && dispatch(listAllLeads({ fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"], filter: filters, sort, page: pagination.current, limit: pagination.pageSize, meta: \"*\" }));\r\n        leadListMeta && setPagination({ ...pagination, total: leadListMeta.filter_count })\r\n        if (leadUpdated) {\r\n            notifyUser(leadMessage, \"success\");\r\n        }\r\n        console.log(leadList);\r\n        if (leadList.length != 0) {\r\n            let tempScheduleTour = [];\r\n            let tempScheduledTour = [];\r\n            let tempPastTour = [];\r\n            leadList.forEach((Item, index) => {\r\n                let finalTime;\r\n                if (Item.scheduled_date) {\r\n                    let time = new Date(Item.scheduled_date).getTime();\r\n                    finalTime = time + (-timeZone * 60000)\r\n\r\n                }\r\n                if (Item.tour_status === 'scheduled' && (new Date(finalTime).getTime() < new Date().getTime())) {\r\n                    tempPastTour.push({\r\n                        key: index,\r\n                        name: Item.home && humanize(Item.home.name),\r\n                        client_name: Item.client && humanize(Item.client.name),\r\n                        // status: <Tag color=\"blue\" key={index}>\r\n                        //     {humanize(Item.tour_status)}\r\n                        // </Tag>,\r\n                        date: Item.scheduled_date ? `${moment(finalTime).format('MM-DD-YYYY')} ${moment(finalTime).format('LT')}` : \"N/A\",\r\n                    });\r\n                }\r\n                else if (Item.tour_status === 'scheduled') {\r\n                    tempScheduledTour.push({\r\n                        key: index,\r\n                        name: Item.home && humanize(Item.home.name),\r\n                        client_name: Item.client && humanize(Item.client.name),\r\n                        status: <Tag color=\"blue\" key={index}>\r\n                            {humanize(Item.tour_status)}\r\n                        </Tag>,\r\n                        date: Item.scheduled_date ? `${moment(finalTime).format('MM-DD-YYYY')} ${moment(finalTime).format('LT')}` : \"N/A\",\r\n                    });\r\n                }\r\n                else {\r\n                    tempScheduleTour.push({\r\n                        key: index,\r\n                        name: Item.home && humanize(Item.home.name),\r\n                        client_name: Item.client && humanize(Item.client.name),\r\n                        status: <Tag color=\"blue\" key={index}>\r\n                            {humanize(Item.tour_status)}\r\n                        </Tag>,\r\n                        date: Item.scheduled_date ? `${moment(finalTime).format('MM-DD-YYYY')} ${moment(finalTime).format('LT')}` : \"N/A\",\r\n                    });\r\n                }\r\n            });\r\n            setScheduleTour(tempScheduleTour);\r\n            setScheduledTour(tempScheduledTour);\r\n            setPastTour(tempPastTour);\r\n        }\r\n\r\n        return () => {\r\n            console.log(\"Communities Unmounting\");\r\n        };\r\n    }, [leadUpdated, leadMessage, leadListLoading]);\r\n\r\n\r\n    const scheduledTourColumns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            //sorter: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'client_name',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.client_name - b.client_name,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.status - b.status,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Date & Time',\r\n            dataIndex: 'date',\r\n            //sorter: (a, b) => a.date.localeCompare(b.date),\r\n        },\r\n    ];\r\n    const scheduleTourColumns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            //sorter: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'client_name',\r\n            //sorter: {\r\n            //     compare: (a, b) => a.client_name - b.client_name,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            //sorter: {\r\n            //     compare: (a, b) => a.status - b.status,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n    ];\r\n    const pastTourColumns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.name - b.name,\r\n            //     multiple: 4,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'client_name',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.client_name - b.client_name,\r\n            //     multiple: 3,\r\n            // },\r\n        },\r\n        {\r\n            title: 'Date & Time',\r\n            dataIndex: 'date',\r\n            // sorter: {\r\n            //     compare: (a, b) => a.date - b.date,\r\n            //     multiple: 2,\r\n            // },\r\n        },\r\n    ];\r\n\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n    return (\r\n        <>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/admin\">Home</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/admin/partners\">Partners</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item><Link to=\"/admin/partner/overview\">{humanize(user.first_name)} {humanize(user.last_name)}</Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"\">Tours</Link>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div>\r\n                <Tabs defaultActiveKey=\"scheduleTour\" onChange={() => console.log(0)}>\r\n                    {/* <TabPane tab=\"Schedule Tour\" key=\"scheduleTour\">\r\n                        <Table columns={scheduleTourColumns} dataSource={scheduleTour} onChange={onChange} />\r\n                    </TabPane> */}\r\n                    <TabPane tab=\"Scheduled Tour\" key=\"scheduledTour\">\r\n                        <Table columns={scheduledTourColumns} dataSource={scheduledTour} onChange={onChange} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Past Tour\" key=\"pastTour\">\r\n                        <Table columns={pastTourColumns} dataSource={pastTour} onChange={onChange} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        leadList: state.lead.leadList,\r\n        leadListLoading: state.lead.leadListLoading,\r\n        leadListMeta: state.lead.leadListMeta,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        listAllLeads: () => dispatch(listAllLeads()),\r\n        updateLead: () => dispatch(updateLead()),\r\n        setLeadListLoading: () => dispatch(setLeadListLoading()),\r\n    };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(PartnerTourList);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\client\\\\community\\\\ListCommunity.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Breadcrumb, Tabs, Skeleton, Row, Col } from \"antd\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { setLeadListLoading as _setLeadListLoading } from \"../../../redux/actions/lead-actions\";\nimport { listAllLeads as _listAllLeads } from \"../../../redux/actions/lead-actions\";\nimport { DisplayCard } from \"../../../components/shared/displayCard\";\nimport MapViewCommunity from \"./MapViewCommunity\";\nimport FilterViewCommunity from \"./FilterViewCommunity\";\nvar TabPane = Tabs.TabPane;\n\nvar ListCommunity = function ListCommunity(_ref) {\n  var leadList = _ref.leadList,\n      leadListLoading = _ref.leadListLoading;\n  var dispatch = useDispatch();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchView = _useState2[0],\n      setSwitchView = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      leadsConfig = _useState4[0],\n      setLeadsConfig = _useState4[1];\n\n  var _useState5 = useState(\"accepted\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      approvalState = _useState6[0],\n      setApprovalState = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterDropdownValue = _useState8[0],\n      setFilterDropdownValue = _useState8[1];\n\n  var _useState9 = useState({\n    approval: \"accepted\",\n    home: {\n      rooms: {\n        availability: {\n          _in: [\"yes\", \"shared_male\", \"shared_female\"]\n        }\n      }\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      listFilter = _useState10[0],\n      setListFilter = _useState10[1];\n\n  useEffect(function () {\n    // dispatch(setLeadListLoading(true));\n    if (leadListLoading) {\n      console.log(leadListLoading, \"leadListLoadingleadListLoadingleadListLoading\");\n      getLeadClientList();\n    }\n\n    return function () {\n      console.log(\"Lead ClientList Unmounting\");\n    };\n  }, [leadListLoading]);\n  useEffect(function () {\n    // console.log(leadList, 'leadList');\n    // let newList = [];\n    // newList = leadList.filter((item) => {\n    //   return newList.includes(item.id)\n    // });\n    homebudget(leadList.filter(function (tag, index, array) {\n      return array.findIndex(function (t) {\n        return t.id == tag.id;\n      }) == index;\n    }));\n  }, [leadList]);\n\n  var getMaxRoomCost = function getMaxRoomCost(rooms) {\n    if (rooms.length) {\n      return Math.max.apply(null, rooms.length ? rooms.map(function (room) {\n        return room.base_rate ? room.base_rate : 0;\n      }) : [0]);\n    } else {\n      return 0;\n    }\n  };\n\n  var getMinRoomCost = function getMinRoomCost(rooms) {\n    if (rooms.length) {\n      return Math.min.apply(null, rooms.map(function (room) {\n        return room.base_rate ? room.base_rate : 0;\n      }));\n    } else {\n      return 0;\n    }\n  };\n\n  var homebudget = function homebudget(list) {\n    list.forEach(function (Item, index) {\n      Item.max_budget = getMaxRoomCost(Item.home.rooms);\n      Item.min_budget = getMinRoomCost(Item.home.rooms);\n    });\n    setLeadsConfig(list);\n  };\n\n  function getLeadClientList() {\n    dispatch(_listAllLeads({\n      fields: \"*,home.*,client.*,home.rooms.*,home.user_created.*\",\n      filter: listFilter\n    }));\n  }\n\n  function callback(key) {\n    setApprovalState(key);\n    setListFilter({\n      home: {\n        rooms: {\n          availability: {\n            _in: [\"yes\", \"shared_male\", \"shared_female\"]\n          }\n        }\n      },\n      approval: key\n    });\n    dispatch(_setLeadListLoading(true));\n    setFilterDropdownValue('');\n  }\n\n  function switchViewHandler(value) {\n    setSwitchView(value);\n  }\n\n  function onListingFilterChange(filteredValue) {\n    var filterValue = filteredValue ? {\n      home: {\n        care_offered: {\n          _contains: filteredValue\n        }\n      }\n    } : {};\n    setListFilter(filterValue);\n    setFilterDropdownValue(filteredValue);\n    dispatch(_setLeadListLoading(true));\n  }\n\n  var handleRateChange = function handleRateChange(value) {\n    if (value == \"low_to_high\") {\n      var NewHomes = leadsConfig.sort(function (a, b) {\n        return a.min_budget - b.min_budget;\n      });\n      setLeadsConfig(_toConsumableArray(NewHomes));\n    }\n\n    if (value == \"high_to_low\") {\n      var _NewHomes = leadsConfig.sort(function (a, b) {\n        return b.max_budget - a.max_budget;\n      });\n\n      setLeadsConfig(_toConsumableArray(_NewHomes));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"All Communities\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"accepted\",\n    onChange: callback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"ACCEPTED\",\n    key: \"accepted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, leadListLoading ? /*#__PURE__*/React.createElement(Skeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FilterViewCommunity, {\n    onSetSwitchView: switchViewHandler,\n    defaultSwitchView: switchView,\n    listFilterChange: onListingFilterChange,\n    defaultFilterListValue: filterDropdownValue,\n    handleRateChange: handleRateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), switchView ? /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, leadsConfig.length > 0 && leadsConfig.map(function (lead) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(lead, \"lead\"), /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      md: 8,\n      lg: 8,\n      key: lead.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    }, lead.approval === \"accepted\" && lead.home !== null && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DisplayCard, {\n      leadClientId: lead.client.id,\n      leadClientName: lead.client.name,\n      leadClientPhone: lead.client.cell,\n      lead: lead,\n      homeID: lead.home.id,\n      home: lead.home,\n      name: lead.home.name,\n      address: lead.home.address_line_1,\n      approval: lead.approval,\n      coverImage: lead.home.image && lead.home.image,\n      liked: lead.is_liked,\n      notes: lead.notes,\n      rooms: lead.home.rooms,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 35\n      }\n    }))));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, leadList && leadList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MapViewCommunity, {\n    lead: leadList,\n    approvalType: approvalState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  })) : null))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"PENDING\",\n    key: \"pending\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, leadListLoading ? /*#__PURE__*/React.createElement(Skeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FilterViewCommunity, {\n    onSetSwitchView: switchViewHandler,\n    defaultSwitchView: switchView,\n    listFilterChange: onListingFilterChange,\n    defaultFilterListValue: filterDropdownValue,\n    handleRateChange: handleRateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), switchView ? /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, leadsConfig.length > 0 && leadsConfig.map(function (lead) {\n    return /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      md: 8,\n      lg: 8,\n      key: lead.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, lead.approval === \"pending\" && lead.home !== null && /*#__PURE__*/React.createElement(DisplayCard, {\n      leadClientId: lead.client.id,\n      leadClientName: lead.client.name,\n      leadClientPhone: lead.client.cell,\n      lead: lead,\n      homeID: lead.home.id,\n      home: lead.home,\n      name: lead.home.name,\n      address: lead.home.address_line_1,\n      approval: lead.approval,\n      coverImage: lead.home.image && lead.home.image,\n      liked: lead.is_liked,\n      notes: lead.notes,\n      rooms: lead.home.rooms,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 31\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, leadList && leadList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MapViewCommunity, {\n    lead: leadList,\n    approvalType: approvalState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  })) : null))))));\n}; //\n\n\nfunction mapStateToProps(state) {\n  return {\n    leadList: state.lead.leadList,\n    leadListLoading: state.lead.leadListLoading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllLeads: function listAllLeads() {\n      return dispatch(_listAllLeads());\n    },\n    setLeadListLoading: function setLeadListLoading() {\n      return dispatch(_setLeadListLoading());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCommunity);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/client/community/ListCommunity.js"],"names":["React","useState","useEffect","Breadcrumb","Tabs","Skeleton","Row","Col","connect","useDispatch","setLeadListLoading","listAllLeads","DisplayCard","MapViewCommunity","FilterViewCommunity","TabPane","ListCommunity","leadList","leadListLoading","dispatch","switchView","setSwitchView","leadsConfig","setLeadsConfig","approvalState","setApprovalState","filterDropdownValue","setFilterDropdownValue","approval","home","rooms","availability","_in","listFilter","setListFilter","console","log","getLeadClientList","homebudget","filter","tag","index","array","findIndex","t","id","getMaxRoomCost","length","Math","max","apply","map","room","base_rate","getMinRoomCost","min","list","forEach","Item","max_budget","min_budget","fields","callback","key","switchViewHandler","value","onListingFilterChange","filteredValue","filterValue","care_offered","_contains","handleRateChange","NewHomes","sort","a","b","lead","client","name","cell","address_line_1","image","is_liked","notes","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb, Tabs, Skeleton, Row, Col } from \"antd\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { setLeadListLoading } from \"../../../redux/actions/lead-actions\";\r\nimport { listAllLeads } from \"../../../redux/actions/lead-actions\";\r\nimport { DisplayCard } from \"../../../components/shared/displayCard\";\r\nimport MapViewCommunity from \"./MapViewCommunity\";\r\nimport FilterViewCommunity from \"./FilterViewCommunity\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ListCommunity = ({ leadList, leadListLoading }) => {\r\n  const dispatch = useDispatch();\r\n  const [switchView, setSwitchView] = useState(true);\r\n  const [leadsConfig, setLeadsConfig] = useState([]);\r\n  const [approvalState, setApprovalState] = useState(\"accepted\");\r\n  const [filterDropdownValue, setFilterDropdownValue] = useState(\"\");\r\n  const [listFilter, setListFilter] = useState({\r\n    approval: \"accepted\",\r\n    home: { rooms: { availability: { _in: [\"yes\", \"shared_male\", \"shared_female\"] } } },\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // dispatch(setLeadListLoading(true));\r\n    if (leadListLoading) {\r\n      console.log(leadListLoading, \"leadListLoadingleadListLoadingleadListLoading\");\r\n      getLeadClientList();\r\n    }\r\n    return () => {\r\n      console.log(\"Lead ClientList Unmounting\");\r\n    };\r\n  }, [leadListLoading]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(leadList, 'leadList');\r\n    // let newList = [];\r\n    // newList = leadList.filter((item) => {\r\n    //   return newList.includes(item.id)\r\n\r\n    // });\r\n    homebudget(leadList.filter((tag, index, array) => array.findIndex(t => t.id == tag.id) == index));\r\n  }, [leadList]);\r\n\r\n  const getMaxRoomCost = (rooms) => {\r\n    if (rooms.length) {\r\n      return Math.max.apply(\r\n        null,\r\n        rooms.length\r\n          ? rooms.map(function (room) {\r\n            return room.base_rate ? room.base_rate : 0;\r\n          })\r\n          : [0]\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getMinRoomCost = (rooms) => {\r\n    if (rooms.length) {\r\n      return Math.min.apply(\r\n        null,\r\n        rooms.map(function (room) {\r\n          return room.base_rate ? room.base_rate : 0;\r\n        })\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const homebudget = (list) => {\r\n    list.forEach((Item, index) => {\r\n      Item.max_budget = getMaxRoomCost(Item.home.rooms);\r\n      Item.min_budget = getMinRoomCost(Item.home.rooms);\r\n    });\r\n    setLeadsConfig(list);\r\n  };\r\n\r\n\r\n\r\n  function getLeadClientList() {\r\n    dispatch(\r\n      listAllLeads({\r\n        fields: \"*,home.*,client.*,home.rooms.*,home.user_created.*\", filter: listFilter\r\n      })\r\n    );\r\n  }\r\n\r\n  function callback(key) {\r\n    setApprovalState(key);\r\n    setListFilter({ home: { rooms: { availability: { _in: [\"yes\", \"shared_male\", \"shared_female\"] } } }, approval: key, });\r\n    dispatch(setLeadListLoading(true));\r\n    setFilterDropdownValue('');\r\n  }\r\n\r\n  function switchViewHandler(value) {\r\n    setSwitchView(value);\r\n  }\r\n\r\n  function onListingFilterChange(filteredValue) {\r\n    const filterValue = filteredValue\r\n      ? {\r\n        home: { care_offered: { _contains: filteredValue } },\r\n      }\r\n      : {};\r\n    setListFilter(filterValue);\r\n    setFilterDropdownValue(filteredValue);\r\n    dispatch(setLeadListLoading(true));\r\n  }\r\n\r\n\r\n  const handleRateChange = (value) => {\r\n    if (value == \"low_to_high\") {\r\n      let NewHomes = leadsConfig.sort(function (a, b) {\r\n        return a.min_budget - b.min_budget;\r\n      });\r\n      setLeadsConfig([...NewHomes]);\r\n    }\r\n    if (value == \"high_to_low\") {\r\n      let NewHomes = leadsConfig.sort(function (a, b) {\r\n        return b.max_budget - a.max_budget;\r\n      });\r\n      setLeadsConfig([...NewHomes]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>All Communities</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div>\r\n        <Tabs defaultActiveKey=\"accepted\" onChange={callback}>\r\n          <TabPane tab=\"ACCEPTED\" key=\"accepted\">\r\n            {leadListLoading ? (\r\n              <Skeleton />\r\n            ) : (\r\n              <React.Fragment>\r\n                <FilterViewCommunity\r\n                  onSetSwitchView={switchViewHandler}\r\n                  defaultSwitchView={switchView}\r\n                  listFilterChange={onListingFilterChange}\r\n                  defaultFilterListValue={filterDropdownValue}\r\n                  handleRateChange={handleRateChange}\r\n                />\r\n                {switchView ? (\r\n                  <Row gutter={16}>\r\n                    {leadsConfig.length > 0 &&\r\n                      leadsConfig.map((lead) => (\r\n\r\n                        <>\r\n                          {console.log(lead, \"lead\")}\r\n                          <Col xs={24} md={8} lg={8} key={lead.id}>\r\n                            {lead.approval === \"accepted\" &&\r\n                              lead.home !== null && (\r\n                                <>\r\n                                  <DisplayCard\r\n                                    leadClientId={lead.client.id}\r\n                                    leadClientName={lead.client.name}\r\n                                    leadClientPhone={lead.client.cell}\r\n                                    lead={lead}\r\n                                    homeID={lead.home.id}\r\n                                    home={lead.home}\r\n                                    name={lead.home.name}\r\n                                    address={lead.home.address_line_1}\r\n                                    approval={lead.approval}\r\n                                    coverImage={\r\n                                      lead.home.image &&\r\n                                      lead.home.image\r\n                                    }\r\n                                    liked={lead.is_liked}\r\n                                    notes={lead.notes}\r\n                                    rooms={lead.home.rooms}\r\n                                  />\r\n                                </>\r\n                              )}\r\n                          </Col>\r\n                        </>\r\n                      ))}\r\n                  </Row>\r\n                ) : (\r\n                  <div>\r\n                    {leadList && leadList.length > 0 ? (\r\n                      <React.Fragment>\r\n                        <MapViewCommunity\r\n                          lead={leadList}\r\n                          approvalType={approvalState}\r\n                        />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </TabPane>\r\n          <TabPane tab=\"PENDING\" key=\"pending\">\r\n            {leadListLoading ? (\r\n              <Skeleton />\r\n            ) : (\r\n              <React.Fragment>\r\n                <FilterViewCommunity\r\n                  onSetSwitchView={switchViewHandler}\r\n                  defaultSwitchView={switchView}\r\n                  listFilterChange={onListingFilterChange}\r\n                  defaultFilterListValue={filterDropdownValue}\r\n                  handleRateChange={handleRateChange}\r\n                />\r\n                {switchView ? (\r\n                  <Row gutter={16}>\r\n                    {leadsConfig.length > 0 &&\r\n                      leadsConfig.map((lead) => (\r\n                        <Col xs={24} md={8} lg={8} key={lead.id}>\r\n                          {lead.approval === \"pending\" &&\r\n                            lead.home !== null && (\r\n                              <DisplayCard\r\n                                leadClientId={lead.client.id}\r\n                                leadClientName={lead.client.name}\r\n                                leadClientPhone={lead.client.cell}\r\n                                lead={lead}\r\n                                homeID={lead.home.id}\r\n                                home={lead.home}\r\n                                name={lead.home.name}\r\n                                address={lead.home.address_line_1}\r\n                                approval={lead.approval}\r\n                                coverImage={\r\n                                  lead.home.image &&\r\n                                  lead.home.image\r\n                                }\r\n                                liked={lead.is_liked}\r\n                                notes={lead.notes}\r\n                                rooms={lead.home.rooms}\r\n                              />\r\n                            )}\r\n                        </Col>\r\n                      ))}\r\n                  </Row>\r\n                ) : (\r\n                  <div>\r\n                    {leadList && leadList.length > 0 ? (\r\n                      <React.Fragment>\r\n                        <MapViewCommunity\r\n                          lead={leadList}\r\n                          approvalType={approvalState}\r\n                        />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n//\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    leadList: state.lead.leadList,\r\n    leadListLoading: state.lead.leadListLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllLeads: () => dispatch(listAllLeads()),\r\n    setLeadListLoading: () => dispatch(setLeadListLoading()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCommunity);\r\n"]},"metadata":{},"sourceType":"module"}
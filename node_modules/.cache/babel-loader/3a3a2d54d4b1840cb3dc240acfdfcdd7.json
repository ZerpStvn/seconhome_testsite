{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\attachments\\\\attachments.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin as _signin } from \"../../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport { Upload, message, Button, Breadcrumb } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nvar Attachment = function Attachment(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var _useState3 = useState(3),\n      _useState4 = _slicedToArray(_useState3, 2),\n      numOfTestimonials = _useState4[0],\n      setnNumOfTestimonials = _useState4[1];\n\n  var updateMedia = function updateMedia() {\n    var num = window.innerWidth > 1199 ? 3 : window.innerWidth < 1199 && window.innerWidth > 767 ? 2 : 1;\n    setnNumOfTestimonials(num);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", updateMedia);\n    return function () {\n      return window.removeEventListener(\"resize\", updateMedia);\n    };\n  });\n  var Dragger = Upload.Dragger;\n  var props = {\n    name: 'file',\n    multiple: true // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n    // onDrop(e) {\n    //   console.log('Dropped files', e.dataTransfer.files);\n    // },\n\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-attachments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Client\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Attachments\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Upload New Attachments\"), /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n    listType: \"picture-card\" // fileList={fileList}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Drag & Drop Files To Upload\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text-divide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), \" Upload Directly\"))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signin: function signin(email, password) {\n      return dispatch(_signin(email, password));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Attachment);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/attachments/attachments.js"],"names":["React","useState","useEffect","connect","signin","useDispatch","notifyUser","Upload","message","Button","Breadcrumb","Icon","PlusOutlined","Attachment","history","dispatch","submitted","setSubmitted","numOfTestimonials","setnNumOfTestimonials","updateMedia","num","window","innerWidth","addEventListener","removeEventListener","Dragger","props","name","multiple","mapStateToProps","state","mapDispatchToProps","email","password"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\n\r\nimport {  Upload, message, Button, Breadcrumb } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst Attachment = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [numOfTestimonials, setnNumOfTestimonials] = useState(3);\r\n\r\n    const updateMedia = () => {\r\n        var num = window.innerWidth > 1199 ? 3 : (window.innerWidth < 1199 && window.innerWidth > 767) ? 2 : 1\r\n        setnNumOfTestimonials(num);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const { Dragger } = Upload;\r\n\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        // onChange(info) {\r\n        //   const { status } = info.file;\r\n        //   if (status !== 'uploading') {\r\n        //     console.log(info.file, info.fileList);\r\n        //   }\r\n        //   if (status === 'done') {\r\n        //     message.success(`${info.file.name} file uploaded successfully.`);\r\n        //   } else if (status === 'error') {\r\n        //     message.error(`${info.file.name} file upload failed.`);\r\n        //   }\r\n        // },\r\n        // onDrop(e) {\r\n        //   console.log('Dropped files', e.dataTransfer.files);\r\n        // },\r\n      };\r\n\r\n\r\n    return (\r\n        <div className=\"admin-attachments\">\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>Client</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Attachments</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <label>Upload New Attachments</label>\r\n            {/* Upload Attachment */}\r\n            <Dragger {...props}\r\n            listType=\"picture-card\"\r\n            // fileList={fileList}\r\n            >\r\n                <p className=\"ant-upload-text\">Drag &amp; Drop Files To Upload</p>\r\n                <p className=\"ant-upload-text-divide\">or</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    <Button><PlusOutlined /> Upload Directly</Button>\r\n                </p>\r\n            </Dragger>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        signin: (email, password) => dispatch(signin(email, password)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Attachment);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\components\\\\shared\\\\displayCard\\\\NotesListCard.jsx\";\n\nimport React from \"react\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\n\nvar NotesListCard = function NotesListCard(_ref) {\n  var note = _ref.note;\n  var noteLength = note.split(\" \").length;\n\n  var _React$useState = React.useState(noteLength > 12 ? true : false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      truncateNote = _React$useState2[0],\n      setTruncateNote = _React$useState2[1];\n\n  function getContent() {\n    if (truncateNote) {\n      return note.split(\" \").splice(0, 12).join(\" \") + \"...\";\n    }\n\n    return note;\n  }\n\n  var content = getContent();\n\n  var toggleTruncate = function toggleTruncate() {\n    var toggle = !truncateNote;\n    setTruncateNote(toggle);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: truncateNote ? \"notes-content\" : \"\",\n    onClick: truncateNote ? toggleTruncate : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, noteLength > 12 && !truncateNote ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"note-expand-close\",\n    onClick: toggleTruncate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })) : null, content);\n};\n\nexport default NotesListCard;","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/components/shared/displayCard/NotesListCard.jsx"],"names":["React","CloseCircleOutlined","NotesListCard","note","noteLength","split","length","useState","truncateNote","setTruncateNote","getContent","splice","join","content","toggleTruncate","toggle"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,mBAApC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAClC,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,MAAnC;;AADkC,wBAEMN,KAAK,CAACO,QAAN,CACtCH,UAAU,GAAG,EAAb,GAAkB,IAAlB,GAAyB,KADa,CAFN;AAAA;AAAA,MAE3BI,YAF2B;AAAA,MAEbC,eAFa;;AAKlC,WAASC,UAAT,GAAsB;AACpB,QAAIF,YAAJ,EAAkB;AAChB,aACEL,IAAI,CACDE,KADH,CACS,GADT,EAEGM,MAFH,CAEU,CAFV,EAEa,EAFb,EAGGC,IAHH,CAGQ,GAHR,IAGe,KAJjB;AAMD;;AACD,WAAOT,IAAP;AACD;;AACD,MAAMU,OAAO,GAAGH,UAAU,EAA1B;;AAEA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIC,MAAM,GAAG,CAACP,YAAd;AACAC,IAAAA,eAAe,CAACM,MAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,SAAS,EAAEP,YAAY,GAAG,eAAH,GAAqB,EAD9C;AAEE,IAAA,OAAO,EAAEA,YAAY,GAAGM,cAAH,GAAoB,IAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGV,UAAU,GAAG,EAAb,IAAmB,CAACI,YAApB,gBACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEM,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAIG,IARN,EAUGD,OAVH,CADF;AAcD,CArCD;;AAuCA,eAAeX,aAAf","sourcesContent":["import React from \"react\";\r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst NotesListCard = ({ note }) => {\r\n  const noteLength = note.split(\" \").length;\r\n  const [truncateNote, setTruncateNote] = React.useState(\r\n    noteLength > 12 ? true : false\r\n  );\r\n  function getContent() {\r\n    if (truncateNote) {\r\n      return (\r\n        note\r\n          .split(\" \")\r\n          .splice(0, 12)\r\n          .join(\" \") + \"...\"\r\n      );\r\n    }\r\n    return note;\r\n  }\r\n  const content = getContent();\r\n\r\n  const toggleTruncate = () => {\r\n    let toggle = !truncateNote;\r\n    setTruncateNote(toggle);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={truncateNote ? \"notes-content\" : \"\"}\r\n      onClick={truncateNote ? toggleTruncate : null}\r\n    >\r\n      {noteLength > 12 && !truncateNote ? (\r\n        <span className=\"note-expand-close\" onClick={toggleTruncate}>\r\n          <CloseCircleOutlined />\r\n        </span>\r\n      ) : null}\r\n\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesListCard;\r\n"]},"metadata":{},"sourceType":"module"}
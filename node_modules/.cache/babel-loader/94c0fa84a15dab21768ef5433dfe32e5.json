{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\mainSearch.js\";\n\nimport { Col, Row } from \"antd\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, StandaloneSearchBox } from \"google-maps-react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\nimport config from \"../../../config\";\n\nvar main_Search = function main_Search() {\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: config.googleMapsAPIkey // Replace with your Google Maps API key\n\n  }),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var results, latLng;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return geocodeByAddress(address);\n\n            case 3:\n              results = _context.sent;\n              _context.next = 6;\n              return getLatLng(results[0]);\n\n            case 6:\n              latLng = _context.sent;\n              console.log(\"Selected location:\", latLng); // Do something with the selected location, such as updating state or making API calls\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error selecting location:\", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"City, Zip, School\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default main_Search;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/mainSearch.js"],"names":["Col","Row","React","GoogleMap","useLoadScript","StandaloneSearchBox","PlacesAutocomplete","geocodeByAddress","getLatLng","config","main_Search","googleMapsApiKey","googleMapsAPIkey","isLoaded","loadError","handleSelect","address","results","latLng","console","log","error"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,mBAHF,QAIO,mBAJP;AAKA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,kCAHP;AAKA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,uBACQN,aAAa,CAAC;AAC5CO,IAAAA,gBAAgB,EAAEF,MAAM,CAACG,gBADmB,CACD;;AADC,GAAD,CADrB;AAAA,MAChBC,QADgB,kBAChBA,QADgB;AAAA,MACNC,SADM,kBACNA,SADM;;AAKxB,MAAMC,YAAY;AAAA,wEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKT,gBAAgB,CAACS,OAAD,CAFrB;;AAAA;AAEXC,cAAAA,OAFW;AAAA;AAAA,qBAGIT,SAAS,CAACS,OAAO,CAAC,CAAD,CAAR,CAHb;;AAAA;AAGXC,cAAAA,MAHW;AAIjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC,EAJiB,CAKjB;;AALiB;AAAA;;AAAA;AAAA;AAAA;AAOjBC,cAAAA,OAAO,CAACE,KAAR,CAAc,2BAAd;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZN,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAWA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAxBD;;AA0BA,eAAeL,WAAf","sourcesContent":["import { Col, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  StandaloneSearchBox,\r\n} from \"google-maps-react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-google-places-autocomplete\";\r\n\r\nimport config from \"../../../config\";\r\n\r\nconst main_Search = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: config.googleMapsAPIkey, // Replace with your Google Maps API key\r\n  });\r\n\r\n  const handleSelect = async (address) => {\r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      const latLng = await getLatLng(results[0]);\r\n      console.log(\"Selected location:\", latLng);\r\n      // Do something with the selected location, such as updating state or making API calls\r\n    } catch (error) {\r\n      console.error(\"Error selecting location:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Search placeholder=\"City, Zip, School\" />\r\n      </Col>\r\n      <Col></Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default main_Search;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\lead-contacts\\\\lead-contact-form.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form, Input, Card, Select, InputNumber } from \"antd\";\nimport { compose } from \"redux\";\nimport { listAll as _listAll } from \"../../../../redux/actions/home-actions\";\nimport UserService from \"../../../../services/user-service\";\nvar TextArea = Input.TextArea;\nvar Meta = Card.Meta;\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\nvar formSubItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\n\nvar LeadContactForm = function LeadContactForm(_ref) {\n  var initialValues = _ref.initialValues,\n      handleSave = _ref.handleSave,\n      homeList = _ref.homeList,\n      homeListLoading = _ref.homeListLoading,\n      buttonLoading = _ref.buttonLoading;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var dispatch = useDispatch();\n  var user = UserService.getAdminUser();\n  useEffect(function () {\n    var homesValue = [];\n    console.log(initialValues, 'initialValues');\n    initialValues.homes && initialValues.homes.length && initialValues.homes.forEach(function (item) {\n      homesValue.push(item.homes_id);\n    });\n    dispatch(_listAll({\n      \"fields\": \"id,name\",\n      filter: {\n        \"user_created\": {\n          \"_eq\": user.id\n        }\n      }\n    }));\n    form.setFieldsValue(_objectSpread({}, initialValues, {\n      homes: homesValue\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"horizontal\",\n    onFinish: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"First Name\",\n    name: \"first_name\",\n    rules: [{\n      required: true,\n      message: \"Please enter First Name!\",\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"First Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Last Name\",\n    name: \"last_name\",\n    rules: [{\n      required: true,\n      message: \"Please enter Last Name!\",\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Last Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Associated Community\",\n    name: \"homes\",\n    rules: [{\n      required: true,\n      message: 'Please Select Community'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, homeList && homeList.map(function (_ref2) {\n    var id = _ref2.id,\n        name = _ref2.name;\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: id,\n      value: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, name);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Cell Phone\",\n    name: \"phone\",\n    rules: [{\n      required: true,\n      pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\n      message: 'Please input valid number!' // max: 14\n\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      required: true,\n      message: 'Please enter valid Email'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Fax\",\n    name: \"fax\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    placeholder: \"Fax\",\n    rules: [{\n      required: true,\n      message: 'Please input valid number!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Job Title\",\n    name: \"job_title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Job Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: buttonLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    homeList: state.home.homeList,\n    homeListLoading: state.home.homeListLoading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAll: function listAll() {\n      return dispatch(_listAll());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(LeadContactForm);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/partner/lead-contacts/lead-contact-form.js"],"names":["React","useEffect","useState","connect","useDispatch","Button","Form","Input","Card","Select","InputNumber","compose","listAll","UserService","TextArea","Meta","formItemLayout","labelCol","span","wrapperCol","formSubItemLayout","LeadContactForm","initialValues","handleSave","homeList","homeListLoading","buttonLoading","useForm","form","dispatch","user","getAdminUser","homesValue","console","log","homes","length","forEach","item","push","homes_id","filter","id","setFieldsValue","required","message","whitespace","map","name","pattern","type","mapStateToProps","state","home","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Form, Input, Card, Select, InputNumber } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { listAll } from \"../../../../redux/actions/home-actions\";\r\nimport UserService from \"../../../../services/user-service\";\r\n\r\n\r\nconst { TextArea } = Input;\r\nconst { Meta } = Card;\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 18 },\r\n};\r\n\r\nconst formSubItemLayout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\n\r\n\r\n\r\nconst LeadContactForm = ({ initialValues, handleSave, homeList, homeListLoading, buttonLoading }) => {\r\n\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const user = UserService.getAdminUser();\r\n  useEffect(() => {\r\n    let homesValue = [];\r\n    console.log(initialValues, 'initialValues');\r\n    initialValues.homes && initialValues.homes.length && initialValues.homes.forEach(item => {\r\n      homesValue.push(item.homes_id)\r\n    });\r\n    dispatch(listAll({ \"fields\": \"id,name\", filter: { \"user_created\": { \"_eq\": user.id } } }));\r\n    form.setFieldsValue({ ...initialValues, homes: homesValue })\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={form}\r\n        layout={\"horizontal\"}\r\n        onFinish={handleSave}\r\n      >\r\n        <Card\r\n          title=\"Details\"\r\n        >\r\n          <Form.Item\r\n            {...formItemLayout}\r\n            label=\"First Name\"\r\n            name=\"first_name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter First Name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              maxLength={255}\r\n\r\n              placeholder=\"First Name\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            {...formItemLayout}\r\n            label=\"Last Name\"\r\n            name=\"last_name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter Last Name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              maxLength={255}\r\n              placeholder=\"Last Name\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item  {...formItemLayout} label=\"Associated Community\" name=\"homes\" rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please Select Community',\r\n            },\r\n          ]}>\r\n            <Select mode=\"multiple\">\r\n              {homeList && homeList.map(({ id, name }) =>\r\n                <Select.Option key={id} value={id}>{name}</Select.Option>\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item  {...formItemLayout} label=\"Cell Phone\" name=\"phone\" rules={[\r\n            {\r\n              required: true,\r\n              pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\r\n              message: 'Please input valid number!',\r\n              // max: 14\r\n            },\r\n          ]}>\r\n            <Input placeholder=\"Phone\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item  {...formItemLayout} label=\"Email\" name=\"email\" rules={[\r\n            {\r\n              type: 'email',\r\n              required: true,\r\n              message: 'Please enter valid Email',\r\n            },\r\n          ]} >\r\n            <Input maxLength={255} placeholder=\"Add Email\" />\r\n          </Form.Item>\r\n          <Form.Item  {...formItemLayout} label=\"Fax\" name=\"fax\" >\r\n            <InputNumber placeholder=\"Fax\" rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input valid number!',\r\n              },\r\n            ]} />\r\n          </Form.Item>\r\n\r\n          <Form.Item  {...formItemLayout} label=\"Job Title\" name=\"job_title\" >\r\n            <Input maxLength={255} placeholder=\"Job Title\" />\r\n          </Form.Item>\r\n          {/* <Form.Item label=\"Status\" name=\"status\" >\r\n            <Select  >\r\n              <Select.Option value=\"published\">Published</Select.Option>\r\n              <Select.Option value=\"draft\">Draft</Select.Option>\r\n            </Select>\r\n          </Form.Item> */}\r\n\r\n        </Card>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={buttonLoading}>\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    homeList: state.home.homeList,\r\n    homeListLoading: state.home.homeListLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAll: () => dispatch(listAll()),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(LeadContactForm);\r\n"]},"metadata":{},"sourceType":"module"}
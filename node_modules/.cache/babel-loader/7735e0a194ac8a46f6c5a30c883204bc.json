{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\login\\\\forgot-password.js\";\n\nimport { Form, Input, Button, Checkbox, Row, Col, Typography, Spin } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { requestPassword } from \"../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../services/notification-service\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-prettier,-svgo!../../../app/assets/images/second-homes-logo.svg\";\nimport { loadUsers as _loadUsers } from \"../../redux/actions/user-actions\";\nimport userApi from \"../../redux/api/user-api\";\nimport { Link } from \"react-router-dom\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  var history = _ref.history,\n      userList = _ref.userList;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setSubmitted(true);\n              _context2.next = 3;\n              return userApi.loadAllUsers({\n                filter: {\n                  \"email\": {\n                    \"_eq\": values.email\n                  }\n                }\n              }).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Data) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!Data.data.length) {\n                            _context.next = 15;\n                            break;\n                          }\n\n                          _context.prev = 1;\n                          values.reset_url = process.env.REACT_APP_PASSWORD_RESET_URL_ALLOW_LIST;\n                          console.log(values);\n                          _context.next = 6;\n                          return requestPassword(values);\n\n                        case 6:\n                          notifyUser(\"Please check your email\", \"success\");\n                          setSubmitted(false);\n                          _context.next = 13;\n                          break;\n\n                        case 10:\n                          _context.prev = 10;\n                          _context.t0 = _context[\"catch\"](1);\n                          notifyUser(JSON.parse(Error.response.data).errors[0].message, \"error\");\n\n                        case 13:\n                          _context.next = 17;\n                          break;\n\n                        case 15:\n                          notifyUser(\"Email doesn't Exist\", \"error\");\n                          setSubmitted(false);\n\n                        case 17:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[1, 10]]);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    className: \"login-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    className: \"pull-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidemenu-trigger logo-login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Spin, {\n    spinning: submitted,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_login\",\n    className: \"login_form\",\n    onFinish: onFinish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: \"Please input your Email!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 48\n      }\n    }),\n    placeholder: \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button btn-style\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"Send\")))))));\n};\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    userList: state.user.userList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadUsers: function loadUsers() {\n      return dispatch(_loadUsers());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/login/forgot-password.js"],"names":["Form","Input","Button","Checkbox","Row","Col","Typography","Spin","UserOutlined","LockOutlined","MailOutlined","React","useState","connect","requestPassword","useDispatch","notifyUser","loadUsers","userApi","Link","ForgotPassword","history","userList","dispatch","submitted","setSubmitted","onFinish","values","loadAllUsers","filter","email","then","Data","data","length","reset_url","process","env","REACT_APP_PASSWORD_RESET_URL_ALLOW_LIST","console","log","JSON","parse","Error","response","errors","message","required","mapStateToProps","state","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Checkbox, Row, Col, Typography, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestPassword } from \"../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../services/notification-service\";\r\nimport { ReactComponent as Logo } from \"../../../app/assets/images/second-homes-logo.svg\";\r\nimport { loadUsers } from \"../../redux/actions/user-actions\";\r\nimport userApi from \"../../redux/api/user-api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst ForgotPassword = ({ history, userList }) => {\r\n    const dispatch = useDispatch();\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const onFinish = async (values) => {\r\n        setSubmitted(true);\r\n        await userApi.loadAllUsers({\r\n            filter: {\r\n                \"email\": {\r\n                    \"_eq\": values.email\r\n                }\r\n            }\r\n        }).then(async (Data) => {\r\n            if (Data.data.length) {\r\n                try {\r\n                    values.reset_url = process.env.REACT_APP_PASSWORD_RESET_URL_ALLOW_LIST;\r\n                    console.log(values);\r\n                    await requestPassword(values);\r\n                    notifyUser(\"Please check your email\", \"success\");\r\n                    setSubmitted(false);\r\n\r\n                } catch (error) {\r\n                    notifyUser(JSON.parse(Error.response.data).errors[0].message, \"error\");\r\n                }\r\n            }\r\n            else {\r\n                notifyUser(\"Email doesn't Exist\", \"error\");\r\n                setSubmitted(false);\r\n            }\r\n        });\r\n\r\n        // dispatch(loadUsers({\r\n        //     fields: \".*.*.*\", filter: {\r\n        //         \"email\": {\r\n        //             \"_eq\": values.email\r\n        //         }\r\n        //     }\r\n        // }).then((sasa) => {\r\n        //     console.log(sasa);\r\n        // }))\r\n        // console.log(ddd);\r\n\r\n        // try {\r\n        //     setSubmitted(true);\r\n        //     values.reset_url = process.env.REACT_APP_PASSWORD_RESET_URL_ALLOW_LIST;\r\n        //     console.log(values);\r\n        //     await requestPassword(values);\r\n        //     // console.log(response);\r\n        //     notifyUser(\"Please check your email\", \"success\");\r\n        //     setSubmitted(false);\r\n\r\n        // } catch (error) {\r\n        //     console.log(error, \"errorerrorerrorerror\");\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={30} className=\"login-page\">\r\n                <Col xs={24} sm={24} md={12} className=\"pull-right\">\r\n                    <div className=\"login-form\">\r\n                        <Link to={\"/\"}>\r\n                            <div className=\"sidemenu-trigger logo-login\">\r\n                                <Logo />\r\n                            </div>\r\n                        </Link>\r\n                        <Spin spinning={submitted}></Spin>\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login_form\"\r\n                            onFinish={onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input your Email!\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button btn-style\">\r\n                                    Send\r\n                                </Button>\r\n                            </Form.Item>\r\n                            {/* <div style={{ textAlign: 'center' }}>\r\n                                Already have an account{\" \"}\r\n                                <a className=\"login-form-forgot\" href=\"/login\">\r\n                                    Login\r\n                                </a>\r\n                            </div> */}\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(state);\r\n    return {\r\n        userList: state.user.userList\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadUsers: () => dispatch(loadUsers()),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\partner-availability.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllRooms as _listAllRooms, updateRoom as _updateRoom, setRoomListLoading as _setRoomListLoading } from \"../../../redux/actions/room-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Input, Popover, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Select, DatePicker, Tooltip } from \"antd\";\nimport { compose } from \"redux\";\nimport { EditOutlined, FilterFilled } from \"@ant-design/icons\";\nimport { roomAvailabilityOptions, roomTypesOptions, roomCareTypesOptions, floorLevelOptions, roomAvailabilityOptionsAdmin } from \"../../../constants/defaultValues\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport { getNumberWithOrdinal } from \"../../../helpers/number-helper\";\nimport moment from \"moment\";\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\nimport UserService from \"../../../services/user-service\";\nimport PriceChange from \"./PriceChange\";\nimport DateAvailablePopOver from \"./date-available-popover\";\nvar dateFormat = \"MMM DD, YYYY\";\n\nvar PartnersAvailability = function PartnersAvailability(_ref) {\n  var roomList = _ref.roomList,\n      roomListLoading = _ref.roomListLoading,\n      roomUpdated = _ref.roomUpdated,\n      roomMessage = _ref.roomMessage,\n      roomListMeta = _ref.roomListMeta;\n  var user = UserService.getAdminUser();\n\n  var _useState = useState({\n    pageSize: 20,\n    current: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var _useState5 = useState({\n    \"home\": {\n      \"user_created\": {\n        \"_eq\": user.id\n      }\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(_listAllRooms({\n      fields: [\"*\", \"home.*\"],\n      filter: filters,\n      sort: sort,\n      page: pagination.current,\n      limit: pagination.pageSize,\n      meta: \"*\"\n    }));\n    roomListMeta && setPagination(_objectSpread({}, pagination, {\n      total: roomListMeta.filter_count\n    }));\n    return function () {\n      console.log(\"Rooms Unmounting\");\n    };\n  }, [roomUpdated, roomListLoading]);\n\n  var handelTableChange = function handelTableChange(_ref2, tableFilters, sorter) {\n    var current = _ref2.current;\n\n    if (sorter && sorter.field) {\n      if (sorter.order == \"ascend\") {\n        setSort(sorter.field);\n      } else {\n        setSort(\"-\" + sorter.field);\n      }\n    }\n\n    var _filters = {\n      \"home\": {\n        \"user_created\": {\n          \"_eq\": user.id\n        }\n      }\n    };\n    Object.entries(tableFilters).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n\n      var orFilter = [];\n\n      if (value) {\n        switch (key) {\n          case \"availability\":\n            _filters.availability = {\n              _in: value\n            };\n            break;\n\n          case \"room_care_type\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                room_care_type: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"floor_level\":\n            _filters.floor_level = {\n              _in: value\n            };\n            break;\n\n          case \"name\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                name: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"base_rate\":\n            _filters.base_rate = {\n              _in: value\n            };\n            break;\n\n          case \"home_name\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                home: {\n                  name: {\n                    _contains: data\n                  }\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          default:\n            _filters = {\n              \"home\": {\n                \"user_created\": {\n                  \"_eq\": user.id\n                }\n              }\n            };\n            break;\n        }\n      } else {}\n    });\n    setFilters(_objectSpread({}, _filters));\n    setPagination(_objectSpread({}, pagination, {\n      current: current\n    }));\n    dispatch(_setRoomListLoading(true));\n  };\n\n  var handelAvailabilityChange = function handelAvailabilityChange(value, roomId) {\n    if (value == \"no\") {\n      dispatch(_updateRoom(roomId, {\n        availability: value\n      }));\n    } else {\n      dispatch(_updateRoom(roomId, {\n        availability: value\n      }));\n    }\n  };\n\n  var handelDateAvailableChange = function handelDateAvailableChange(date, dateString, roomId) {\n    dispatch(_updateRoom(roomId, {\n      date_available: date.format(\"YYYY-MM-DD\")\n    }));\n  };\n\n  var updateRoomPrice = function updateRoomPrice(roomId, price) {\n    dispatch(_updateRoom(roomId, {\n      base_rate: price\n    }));\n  };\n\n  var columns = [{\n    title: \"Home Name\",\n    dataIndex: \"home_name\",\n    key: \"home_name\",\n    //...getColumnSearchProps(\"home_name\"),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/partners/communities/\".concat(room.home_id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, humanize(text)));\n    }\n  }, {\n    title: \"Room Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //...getColumnSearchProps(\"name\"),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/partners/communities/\".concat(room.home_id, \"/rooms/\").concat(room.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, text));\n    }\n  }, {\n    title: \"Pricing\",\n    dataIndex: \"base_rate\",\n    key: \"base_rate\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //...getColumnSearchProps(\"base_rate\"),\n    render: function render(text, room) {\n      return !!text && /*#__PURE__*/React.createElement(PriceChange, {\n        Key: room.key,\n        Price: text,\n        UpdateRoomPrice: updateRoomPrice,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 47\n        }\n      });\n    }\n  }, {\n    title: \"Floor Level\",\n    dataIndex: \"floor_level\",\n    key: \"floor_level\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: floorLevelOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    })),\n    render: function render(text, room) {\n      return !!text && /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, \"\".concat(getNumberWithOrdinal(text), \" Floor\"));\n    }\n  }, {\n    title: \"Room Type\",\n    dataIndex: \"type\",\n    key: \"type\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: roomCareTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    })),\n    render: function render(text) {\n      return /*#__PURE__*/React.createElement(Tag, {\n        color: \"blue\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }, humanize(text));\n    }\n  }, {\n    title: \"Room Care Type\",\n    dataIndex: \"room_care_type\",\n    key: \"room_care_type\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: roomCareTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    })),\n    render: function render(room_care_type) {\n      return /*#__PURE__*/React.createElement(Tag, {\n        color: \"blue\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, humanize(room_care_type));\n    }\n  }, {\n    title: \"Availability\",\n    dataIndex: \"availability\",\n    key: \"availability\",\n    style: {\n      width: \"130px\"\n    },\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: roomAvailabilityOptionsAdmin,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    })),\n    render: function render(value, room) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DateAvailablePopOver, {\n        data: value,\n        updateRoom: _updateRoom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }));\n    }\n  } // {\n  //     title: \"Date Available\",\n  //     dataIndex: \"date_available\",\n  //     key: \"date_available\",\n  //     sorter: true,\n  //     sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n  //     render: (text, room) => (\n  //         <Space direction=\"vertical\" size=\"middle\">\n  //             <DatePicker\n  //                 format={dateFormat}\n  //                 defaultValue={text && moment(text, \"YYYY-MM-DD\")}\n  //                 onChange={(date, dateString) =>\n  //                     handelDateAvailableChange(date, dateString, room.key)\n  //                 }\n  //             />\n  //         </Space>\n  //     ),\n  // },\n  // {\n  //     title: \"Status\",\n  //     dataIndex: \"status\",\n  //     key: \"status\",\n  //     sorter: true,\n  //     sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n  //     render: (text, room) => (\n  //         <Space direction=\"vertical\" size=\"middle\">\n  //             {humanize(text)}\n  //         </Space>\n  //     ),\n  // },\n  ];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/partners\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, \"Partners\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/partner/overview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 34\n    }\n  }, humanize(user.first_name), \" \", humanize(user.last_name))), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, \"Availability\"))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    loading: roomListLoading,\n    dataSource: roomList.map(function (item) {\n      return {\n        name: item.name,\n        base_rate: item.base_rate,\n        room_care_type: item.room_care_type,\n        floor_level: item.floor_level,\n        key: item.id,\n        home_name: item.home ? item.home.name : null,\n        availability: item,\n        date_available: item.date_available,\n        home_id: item.home ? item.home.id : null,\n        status: item.status,\n        type: item.type\n      };\n    }),\n    pagination: pagination,\n    onChange: handelTableChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomList: state.room.roomList,\n    roomListLoading: state.room.roomListLoading,\n    roomUpdated: state.room.roomUpdated,\n    roomMessage: state.room.roomMessage,\n    roomListMeta: state.room.roomListMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllRooms: function listAllRooms() {\n      return dispatch(_listAllRooms());\n    },\n    updateRoom: function updateRoom() {\n      return dispatch(_updateRoom());\n    },\n    setRoomListLoading: function setRoomListLoading() {\n      return dispatch(_setRoomListLoading());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(PartnersAvailability);","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/partner/partner-availability.js"],"names":["React","useEffect","useState","connect","listAllRooms","updateRoom","setRoomListLoading","useDispatch","Link","Input","Popover","Row","Col","Button","PageHeader","Table","Tag","Space","Breadcrumb","Select","DatePicker","Tooltip","compose","EditOutlined","FilterFilled","roomAvailabilityOptions","roomTypesOptions","roomCareTypesOptions","floorLevelOptions","roomAvailabilityOptionsAdmin","humanize","getNumberWithOrdinal","moment","getColumnSearchProps","UserService","PriceChange","DateAvailablePopOver","dateFormat","PartnersAvailability","roomList","roomListLoading","roomUpdated","roomMessage","roomListMeta","user","getAdminUser","pageSize","current","pagination","setPagination","sort","setSort","id","filters","setFilters","dispatch","fields","filter","page","limit","meta","total","filter_count","console","log","handelTableChange","tableFilters","sorter","field","order","_filters","Object","entries","forEach","key","value","orFilter","availability","_in","map","data","push","room_care_type","_contains","_or","floor_level","name","base_rate","home","handelAvailabilityChange","roomId","handelDateAvailableChange","date","dateString","date_available","format","updateRoomPrice","price","columns","title","dataIndex","render","text","room","home_id","sortDirections","filterIcon","style","width","first_name","last_name","item","home_name","status","type","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllRooms, updateRoom, setRoomListLoading } from \"../../../redux/actions/room-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input, Popover, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Select, DatePicker, Tooltip, } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { EditOutlined, FilterFilled } from \"@ant-design/icons\";\r\nimport { roomAvailabilityOptions, roomTypesOptions, roomCareTypesOptions, floorLevelOptions, roomAvailabilityOptionsAdmin, } from \"../../../constants/defaultValues\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport { getNumberWithOrdinal } from \"../../../helpers/number-helper\";\r\nimport moment from \"moment\";\r\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport PriceChange from \"./PriceChange\";\r\nimport DateAvailablePopOver from \"./date-available-popover\";\r\n\r\nconst dateFormat = \"MMM DD, YYYY\";\r\n\r\nconst PartnersAvailability = ({ roomList, roomListLoading, roomUpdated, roomMessage, roomListMeta, }) => {\r\n    const user = UserService.getAdminUser();\r\n    const [pagination, setPagination] = useState({\r\n        pageSize: 20,\r\n        current: 1,\r\n    });\r\n    const [sort, setSort] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        \"home\": {\r\n            \"user_created\": {\r\n                \"_eq\": user.id\r\n            }\r\n        }\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            listAllRooms({\r\n                fields: [\"*\", \"home.*\"],\r\n                filter: filters,\r\n                sort,\r\n                page: pagination.current,\r\n                limit: pagination.pageSize,\r\n                meta: \"*\",\r\n            })\r\n        );\r\n        roomListMeta &&\r\n            setPagination({ ...pagination, total: roomListMeta.filter_count });\r\n\r\n        return () => {\r\n            console.log(\"Rooms Unmounting\");\r\n        };\r\n    }, [roomUpdated, roomListLoading]);\r\n\r\n    const handelTableChange = ({ current }, tableFilters, sorter) => {\r\n        if (sorter && sorter.field) {\r\n            if (sorter.order == \"ascend\") {\r\n                setSort(sorter.field);\r\n            } else {\r\n                setSort(\"-\" + sorter.field);\r\n            }\r\n        }\r\n\r\n        let _filters = {\r\n            \"home\": {\r\n                \"user_created\": {\r\n                    \"_eq\": user.id\r\n                }\r\n            }\r\n        };\r\n\r\n        Object.entries(tableFilters).forEach(([key, value]) => {\r\n            let orFilter = [];\r\n            if (value) {\r\n                switch (key) {\r\n                    case \"availability\":\r\n                        _filters.availability = { _in: value };\r\n                        break;\r\n\r\n                    case \"room_care_type\":\r\n                        orFilter = [];\r\n                        value.map((data) => {\r\n                            orFilter.push({ room_care_type: { _contains: data } });\r\n                        });\r\n                        _filters._or = orFilter;\r\n                        break;\r\n                    case \"floor_level\":\r\n                        _filters.floor_level = { _in: value };\r\n                        break;\r\n                    case \"name\":\r\n                        orFilter = [];\r\n                        value.map((data) => {\r\n                            orFilter.push({ name: { _contains: data } });\r\n                        });\r\n                        _filters._or = orFilter;\r\n                        break;\r\n                    case \"base_rate\":\r\n                        _filters.base_rate = { _in: value };\r\n                        break;\r\n                    case \"home_name\":\r\n                        orFilter = [];\r\n                        value.map((data) => {\r\n                            orFilter.push({ home: { name: { _contains: data } } });\r\n                        });\r\n                        _filters._or = orFilter;\r\n                        break;\r\n\r\n                    default:\r\n                        _filters = {\r\n                            \"home\": {\r\n                                \"user_created\": {\r\n                                    \"_eq\": user.id\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            } else {\r\n            }\r\n        });\r\n        setFilters({ ..._filters });\r\n        setPagination({ ...pagination, current });\r\n        dispatch(setRoomListLoading(true));\r\n    };\r\n\r\n    const handelAvailabilityChange = (value, roomId) => {\r\n        if (value == \"no\") {\r\n            dispatch(\r\n                updateRoom(roomId, { availability: value })\r\n            );\r\n        } else {\r\n            dispatch(updateRoom(roomId, { availability: value }));\r\n        }\r\n    };\r\n\r\n    const handelDateAvailableChange = (date, dateString, roomId) => {\r\n        dispatch(updateRoom(roomId, { date_available: date.format(\"YYYY-MM-DD\") }));\r\n    };\r\n\r\n    const updateRoomPrice = (roomId, price) => {\r\n        dispatch(updateRoom(roomId, { base_rate: price }));\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Home Name\",\r\n            dataIndex: \"home_name\",\r\n            key: \"home_name\",\r\n            //...getColumnSearchProps(\"home_name\"),\r\n            render: (text, room) => (\r\n                <Space size=\"middle\">\r\n                    <Link to={`/admin/partners/communities/${room.home_id}`}>{humanize(text)}</Link>\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: \"Room Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            //sorter: true,\r\n            sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n            //...getColumnSearchProps(\"name\"),\r\n            render: (text, room) => (\r\n                <Space size=\"middle\">\r\n                    <Link to={`/admin/partners/communities/${room.home_id}/rooms/${room.key}`}>\r\n                        {text}\r\n                    </Link>\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: \"Pricing\",\r\n            dataIndex: \"base_rate\",\r\n            key: \"base_rate\",\r\n            //sorter: true,\r\n            sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n            //...getColumnSearchProps(\"base_rate\"),\r\n            render: (text, room) => !!text && <PriceChange Key={room.key} Price={text} UpdateRoomPrice={updateRoomPrice} />,\r\n        },\r\n        {\r\n            title: \"Floor Level\",\r\n            dataIndex: \"floor_level\",\r\n            key: \"floor_level\",\r\n            //sorter: true,\r\n            sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n            //filters: floorLevelOptions,\r\n            filterIcon: (\r\n                <Tooltip title=\"Filter\">\r\n                    <FilterFilled />\r\n                </Tooltip>\r\n            ),\r\n            render: (text, room) => (\r\n                !!text &&\r\n                <Space size=\"middle\">{`${getNumberWithOrdinal(text)} Floor`}</Space>\r\n            ),\r\n        },\r\n        {\r\n            title: \"Room Type\",\r\n            dataIndex: \"type\",\r\n            key: \"type\",\r\n            //sorter: true,\r\n            sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n            //filters: roomCareTypesOptions,\r\n            filterIcon: (\r\n                <Tooltip title=\"Filter\">\r\n                    <FilterFilled />\r\n                </Tooltip>\r\n            ),\r\n            render: (text) =>\r\n\r\n                <Tag color=\"blue\">\r\n                    {humanize(text)}\r\n                </Tag>\r\n\r\n        },\r\n        {\r\n            title: \"Room Care Type\",\r\n            dataIndex: \"room_care_type\",\r\n            key: \"room_care_type\",\r\n            //sorter: true,\r\n            sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n            //filters: roomCareTypesOptions,\r\n            filterIcon: (\r\n                <Tooltip title=\"Filter\">\r\n                    <FilterFilled />\r\n                </Tooltip>\r\n            ),\r\n            render: (room_care_type) => (\r\n                <Tag color=\"blue\">\r\n                    {humanize(room_care_type)}\r\n                </Tag>\r\n            ),\r\n\r\n        },\r\n\r\n        {\r\n            title: \"Availability\",\r\n            dataIndex: \"availability\",\r\n            key: \"availability\",\r\n            style: { width: \"130px\" },\r\n            //sorter: true,\r\n            sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n            //filters: roomAvailabilityOptionsAdmin,\r\n            filterIcon: (\r\n                <Tooltip title=\"Filter\">\r\n                    <FilterFilled />\r\n                </Tooltip>\r\n            ),\r\n            render: (value, room) => (\r\n                <>\r\n                    <DateAvailablePopOver data={value} updateRoom={updateRoom} />\r\n                    {/*} <Select\r\n                        style={{ width: \"130px\" }}\r\n                        defaultValue={value}\r\n                        onChange={(value) => handelAvailabilityChange(value, room.key)}\r\n                    >\r\n                        {roomAvailabilityOptions.map((option) => {\r\n                            return (\r\n                                <Select.Option value={option.value}>{option.text}</Select.Option>\r\n                            );\r\n                        })}\r\n                    </Select> */}\r\n                </>\r\n            ),\r\n        },\r\n        // {\r\n        //     title: \"Date Available\",\r\n        //     dataIndex: \"date_available\",\r\n        //     key: \"date_available\",\r\n        //     sorter: true,\r\n        //     sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n        //     render: (text, room) => (\r\n        //         <Space direction=\"vertical\" size=\"middle\">\r\n        //             <DatePicker\r\n        //                 format={dateFormat}\r\n        //                 defaultValue={text && moment(text, \"YYYY-MM-DD\")}\r\n        //                 onChange={(date, dateString) =>\r\n        //                     handelDateAvailableChange(date, dateString, room.key)\r\n        //                 }\r\n        //             />\r\n        //         </Space>\r\n        //     ),\r\n        // },\r\n        // {\r\n        //     title: \"Status\",\r\n        //     dataIndex: \"status\",\r\n        //     key: \"status\",\r\n        //     sorter: true,\r\n        //     sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n        //     render: (text, room) => (\r\n        //         <Space direction=\"vertical\" size=\"middle\">\r\n        //             {humanize(text)}\r\n        //         </Space>\r\n        //     ),\r\n        // },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/admin\">Home</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/admin/partners\">Partners</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item><Link to=\"/admin/partner/overview\">{humanize(user.first_name)} {humanize(user.last_name)}</Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"\">Availability</Link>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Row gutter={30}>\r\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                    <Table\r\n                        columns={columns}\r\n                        loading={roomListLoading}\r\n                        dataSource={roomList.map((item) => {\r\n                            return {\r\n                                name: item.name,\r\n                                base_rate: item.base_rate,\r\n                                room_care_type: item.room_care_type,\r\n                                floor_level: item.floor_level,\r\n                                key: item.id,\r\n                                home_name: item.home ? item.home.name : null,\r\n                                availability: item,\r\n                                date_available: item.date_available,\r\n                                home_id: item.home ? item.home.id : null,\r\n                                status: item.status,\r\n                                type: item.type\r\n                            };\r\n                        }\r\n                        )}\r\n                        pagination={pagination}\r\n                        onChange={handelTableChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        roomList: state.room.roomList,\r\n        roomListLoading: state.room.roomListLoading,\r\n        roomUpdated: state.room.roomUpdated,\r\n        roomMessage: state.room.roomMessage,\r\n        roomListMeta: state.room.roomListMeta,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        listAllRooms: () => dispatch(listAllRooms()),\r\n        updateRoom: () => dispatch(updateRoom()),\r\n        setRoomListLoading: () => dispatch(setRoomListLoading()),\r\n    };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\r\n    PartnersAvailability\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
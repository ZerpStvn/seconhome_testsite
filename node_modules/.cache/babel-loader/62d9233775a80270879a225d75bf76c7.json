{"ast":null,"code":"export var humanize = function humanize(str) {\n  if (!str) {\n    return;\n  }\n\n  var i,\n      frags = str.toString().split('_');\n\n  for (i = 0; i < frags.length; i++) {\n    frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n  }\n\n  return frags.join(' ');\n};\nexport var slugify = function slugify(str) {\n  str = str.replace(/^\\s+|\\s+$/g, ''); // Make the string lowercase\n\n  str = str.toLowerCase(); // Remove accents, swap ñ for n, etc\n\n  var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\n  var to = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\n\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  } // Remove invalid chars\n\n\n  str = str.replace(/[^a-z0-9 -]/g, '') // Collapse whitespace and replace by -\n  .replace(/\\s+/g, '-') // Collapse dashes\n  .replace(/-+/g, '-');\n  return str;\n};\n\nfunction camelCase(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n    return index == 0 ? word.toLowerCase() : word.toUpperCase();\n  }).replace(/\\s+/g, '');\n}","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/helpers/string-helper.js"],"names":["humanize","str","i","frags","toString","split","length","charAt","toUpperCase","slice","join","slugify","replace","toLowerCase","from","to","l","RegExp","camelCase","word","index"],"mappings":"AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AAC/B,MAAI,CAACA,GAAL,EAAU;AACR;AACD;;AACD,MAAIC,CAAJ;AAAA,MAAOC,KAAK,GAAGF,GAAG,CAACG,QAAJ,GAAeC,KAAf,CAAqB,GAArB,CAAf;;AACA,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,KAAK,CAACG,MAAtB,EAA8BJ,CAAC,EAA/B,EAAmC;AACjCC,IAAAA,KAAK,CAACD,CAAD,CAAL,GAAWC,KAAK,CAACD,CAAD,CAAL,CAASK,MAAT,CAAgB,CAAhB,EAAmBC,WAAnB,KAAmCL,KAAK,CAACD,CAAD,CAAL,CAASO,KAAT,CAAe,CAAf,CAA9C;AACD;;AACD,SAAON,KAAK,CAACO,IAAN,CAAW,GAAX,CAAP;AACD,CATM;AAWP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACV,GAAD,EAAS;AAC9BA,EAAAA,GAAG,GAAGA,GAAG,CAACW,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAN,CAD8B,CAG9B;;AACAX,EAAAA,GAAG,GAAGA,GAAG,CAACY,WAAJ,EAAN,CAJ8B,CAM9B;;AACA,MAAIC,IAAI,GAAG,oGAAX;AACA,MAAIC,EAAE,GAAG,oGAAT;;AACA,OAAK,IAAIb,CAAC,GAAG,CAAR,EAAWc,CAAC,GAAGF,IAAI,CAACR,MAAzB,EAAiCJ,CAAC,GAAGc,CAArC,EAAwCd,CAAC,EAAzC,EAA6C;AAC3CD,IAAAA,GAAG,GAAGA,GAAG,CAACW,OAAJ,CAAY,IAAIK,MAAJ,CAAWH,IAAI,CAACP,MAAL,CAAYL,CAAZ,CAAX,EAA2B,GAA3B,CAAZ,EAA6Ca,EAAE,CAACR,MAAH,CAAUL,CAAV,CAA7C,CAAN;AACD,GAX6B,CAa9B;;;AACAD,EAAAA,GAAG,GAAGA,GAAG,CAACW,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,EACJ;AADI,GAEHA,OAFG,CAEK,MAFL,EAEa,GAFb,EAGJ;AAHI,GAIHA,OAJG,CAIK,KAJL,EAIY,GAJZ,CAAN;AAMA,SAAOX,GAAP;AAED,CAtBM;;AAwBP,SAASiB,SAAT,CAAmBjB,GAAnB,EAAwB;AACtB,SAAOA,GAAG,CAACW,OAAJ,CAAY,qBAAZ,EAAmC,UAAUO,IAAV,EAAgBC,KAAhB,EAAuB;AAC/D,WAAOA,KAAK,IAAI,CAAT,GAAaD,IAAI,CAACN,WAAL,EAAb,GAAkCM,IAAI,CAACX,WAAL,EAAzC;AACD,GAFM,EAEJI,OAFI,CAEI,MAFJ,EAEY,EAFZ,CAAP;AAGD","sourcesContent":["export const humanize = (str) => {\r\n  if (!str) {\r\n    return\r\n  }\r\n  var i, frags = str.toString().split('_');\r\n  for (i = 0; i < frags.length; i++) {\r\n    frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\r\n  }\r\n  return frags.join(' ');\r\n}\r\n\r\nexport const slugify = (str) => {\r\n  str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n  // Make the string lowercase\r\n  str = str.toLowerCase();\r\n\r\n  // Remove accents, swap ñ for n, etc\r\n  var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n  var to = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n  for (var i = 0, l = from.length; i < l; i++) {\r\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n  }\r\n\r\n  // Remove invalid chars\r\n  str = str.replace(/[^a-z0-9 -]/g, '')\r\n    // Collapse whitespace and replace by -\r\n    .replace(/\\s+/g, '-')\r\n    // Collapse dashes\r\n    .replace(/-+/g, '-');\r\n\r\n  return str;\r\n\r\n}\r\n\r\nfunction camelCase(str) {\r\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\r\n    return index == 0 ? word.toLowerCase() : word.toUpperCase();\r\n  }).replace(/\\s+/g, '');\r\n}"]},"metadata":{},"sourceType":"module"}
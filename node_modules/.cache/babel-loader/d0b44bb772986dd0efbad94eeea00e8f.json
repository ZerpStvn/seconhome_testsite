{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\client-admin.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin } from \"../../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport { listAllLeadClients as _listAllLeadClients } from \"../../../redux/actions/lead-client-actions\";\nimport userAPI from \"../../../redux/api/user-api\";\nimport userService from \"../../../services/user-service\";\nimport { Space, Collapse, Form, Input, Select, Radio, Checkbox, Button, Card, Row, Col, Spin, Popconfirm, List, Avatar } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport { PhoneOutlined, EnvironmentOutlined, DeleteOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { EditSvg } from \"../../../components/shared/svg/edit\";\nimport { EyeSvg } from \"../../../components/shared/svg/eye\";\nimport { PenSvg } from \"../../../components/shared/svg/pen\";\n\nvar EditIcon = function EditIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, Object.assign({\n    component: EditSvg\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }));\n};\n\nvar EyeIcon = function EyeIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, Object.assign({\n    component: EyeSvg\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 28\n    }\n  }));\n};\n\nvar PenIcon = function PenIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, Object.assign({\n    component: PenSvg\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }\n  }));\n};\n\nvar Search = Input.Search;\n\nvar Dashboard = function Dashboard(_ref) {\n  var history = _ref.history,\n      leadClientList = _ref.leadClientList,\n      leadClientListLoading = _ref.leadClientListLoading,\n      leadClientMeta = _ref.leadClientMeta;\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    ClientId: \"\",\n    loader: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clientListLoading = _useState4[0],\n      setClientListLoading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputVal = _useState6[0],\n      setInputVal = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      leadClients = _useState8[0],\n      setLeadClients = _useState8[1];\n\n  useEffect(function () {\n    clientListLoading && dispatch(_listAllLeadClients({\n      meta: 'filter_count',\n      limit: -1,\n      filter: {\n        user: {\n          _nnull: null\n        }\n      }\n    })).then(function (data) {\n      return setClientListLoading(false);\n    }); // \n  }, [clientListLoading]);\n  useEffect(function () {\n    if (leadClientList.length > 0) {\n      setLeadClients(leadClientList);\n    }\n  }, [leadClientList]);\n  var totalCount = leadClientMeta && leadClientMeta.filter_count;\n\n  var setAdminUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(client) {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading({\n                ClientId: client.id,\n                loader: true\n              });\n              _context.next = 3;\n              return userAPI.loadUserById(client.user, {\n                fields: ['*', 'client.*']\n              });\n\n            case 3:\n              user = _context.sent;\n\n              if (!user.data) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return userService.setAdminUser(user.data);\n\n            case 7:\n              history.push(\"/admin/client/overview\");\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setAdminUser(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deletePartner = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Id) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return userAPI.deleteClient(Id);\n\n            case 2:\n              setInputVal(\"\");\n              setClientListLoading(true);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deletePartner(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var searchClient = function searchClient(e) {\n    setInputVal(e.target.value.toLowerCase());\n    var filteredClientList = leadClientList.filter(function (item) {\n      if (item.name.toLowerCase().includes(e.target.value.toLowerCase())) {\n        return item;\n      }\n\n      if (item.email.toLowerCase().includes(e.target.value.toLowerCase())) {\n        return item;\n      }\n    });\n    setLeadClients(filteredClientList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    className: \"admin-countbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    lg: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    className: \"btn-group-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: '/dashboard/admin/clients/add',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Add Client\"))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"countbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, totalCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Total Clients\"))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"countbox green-countbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, totalCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Active Clients\")))), /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    className: \"dashboard-listings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    md: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: clientListLoading,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Total Clients\",\n    extra: /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Search by name or email\",\n      value: inputVal,\n      onChange: searchClient,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: leadClients,\n    pagination: {\n      onChange: function onChange(page) {\n        console.log(page);\n      },\n      pageSize: 6\n    },\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        actions: [/*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick() {\n            return setAdminUser(item);\n          },\n          className: \"list-edit\",\n          key: \"list-edit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 51\n          }\n        }, loading.loader && loading.ClientId === item.id ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 177\n          }\n        }) : /*#__PURE__*/React.createElement(PenIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 199\n          }\n        })), /*#__PURE__*/React.createElement(\"a\", {\n          className: \"list-view\",\n          key: \"list-view\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 217\n          }\n        }, /*#__PURE__*/React.createElement(Popconfirm, {\n          onConfirm: function onConfirm() {\n            return deletePartner(item.id);\n          },\n          title: \"Are you sure you want to delete the Client?\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 259\n          }\n        }, \" \", /*#__PURE__*/React.createElement(DeleteOutlined, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 365\n          }\n        })))],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        className: \"list-clients\",\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 53\n          }\n        }, item.name.charAt(0)),\n        title: /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick() {\n            return setAdminUser(item);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 52\n          }\n        }, humanize(item.name), \" \"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    leadClientList: state.leadClient.leadClientList,\n    leadClientListLoading: state.leadClient.leadClientListLoading,\n    leadClientMeta: state.leadClient.leadClientMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllLeadClients: function listAllLeadClients() {\n      return dispatch(_listAllLeadClients());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/admin/client/client-admin.js"],"names":["React","useState","useEffect","connect","signin","useDispatch","notifyUser","humanize","listAllLeadClients","userAPI","userService","Space","Collapse","Form","Input","Select","Radio","Checkbox","Button","Card","Row","Col","Spin","Popconfirm","List","Avatar","Icon","PhoneOutlined","EnvironmentOutlined","DeleteOutlined","LoadingOutlined","EditSvg","EyeSvg","PenSvg","EditIcon","props","EyeIcon","PenIcon","Search","Dashboard","history","leadClientList","leadClientListLoading","leadClientMeta","dispatch","ClientId","loader","loading","setLoading","clientListLoading","setClientListLoading","inputVal","setInputVal","leadClients","setLeadClients","meta","limit","filter","user","_nnull","then","data","length","totalCount","filter_count","setAdminUser","client","id","loadUserById","fields","push","deletePartner","Id","deleteClient","searchClient","e","target","value","toLowerCase","filteredClientList","item","name","includes","email","xs","sm","md","lg","onChange","page","console","log","pageSize","charAt","mapStateToProps","state","leadClient","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport { listAllLeadClients } from \"../../../redux/actions/lead-client-actions\";\r\nimport userAPI from \"../../../redux/api/user-api\";\r\nimport userService from \"../../../services/user-service\";\r\n\r\nimport { Space, Collapse, Form, Input, Select, Radio, Checkbox, Button, Card, Row, Col, Spin, Popconfirm, List, Avatar } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { PhoneOutlined, EnvironmentOutlined, DeleteOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { EditSvg } from \"../../../components/shared/svg/edit\";\r\nimport { EyeSvg } from \"../../../components/shared/svg/eye\";\r\nimport { PenSvg } from \"../../../components/shared/svg/pen\";\r\n\r\nconst EditIcon = (props) => <Icon component={EditSvg} {...props} />;\r\nconst EyeIcon = (props) => <Icon component={EyeSvg} {...props} />;\r\nconst PenIcon = (props) => <Icon component={PenSvg} {...props} />;\r\n\r\nconst { Search } = Input;\r\n\r\nconst Dashboard = ({ history, leadClientList, leadClientListLoading, leadClientMeta }) => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState({ ClientId: \"\", loader: false });\r\n    const [clientListLoading, setClientListLoading] = useState(true);\r\n    const [inputVal, setInputVal] = useState(\"\");\r\n    const [leadClients, setLeadClients] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        (clientListLoading) && dispatch(listAllLeadClients({ meta: 'filter_count', limit: -1, filter: { user: { _nnull: null } } })).then(data => setClientListLoading(false));\r\n        // \r\n    }, [clientListLoading]);\r\n\r\n    useEffect(() => {\r\n        if (leadClientList.length > 0) {\r\n            setLeadClients(leadClientList)\r\n        }\r\n    }, [leadClientList]);\r\n\r\n    const totalCount = leadClientMeta && leadClientMeta.filter_count;\r\n\r\n\r\n\r\n\r\n    const setAdminUser = async (client) => {\r\n        setLoading({ ClientId: client.id, loader: true });\r\n        var user = await userAPI.loadUserById(client.user, { fields: ['*', 'client.*'] });\r\n        if (user.data) {\r\n            await userService.setAdminUser(user.data);\r\n            history.push(`/admin/client/overview`);\r\n        }\r\n\r\n    }\r\n    const deletePartner = async (Id) => {\r\n        await userAPI.deleteClient(Id);\r\n        setInputVal(\"\");\r\n        setClientListLoading(true)\r\n    }\r\n\r\n    const searchClient = (e) => {\r\n        setInputVal(e.target.value.toLowerCase());\r\n        let filteredClientList = leadClientList.filter(item => {\r\n            if (item.name.toLowerCase().includes(e.target.value.toLowerCase())) {\r\n                return item\r\n            }\r\n            if (item.email.toLowerCase().includes(e.target.value.toLowerCase())) {\r\n                return item\r\n\r\n            }\r\n        });\r\n        setLeadClients(filteredClientList);\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"admin-countbox\">\r\n                <Col xs={24} sm={24} lg={24}>\r\n                    <Space className=\"btn-group-right\">\r\n                        <Button href={'/dashboard/admin/clients/add'}>Add Client</Button>\r\n                    </Space>\r\n                </Col>\r\n                <Col xs={24} sm={12} lg={8}>\r\n                    <div className=\"countbox\">\r\n                        <span className=\"count\">{totalCount}</span>\r\n                        <p>Total Clients</p>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={12} lg={8}>\r\n                    <div className=\"countbox green-countbox\">\r\n                        <span className=\"count\">{totalCount}</span>\r\n                        <p>Active Clients</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"dashboard-listings\">\r\n                <Col xs={24} md={24} >\r\n                    <Spin spinning={clientListLoading} size=\"large\">\r\n                        <Card title=\"Total Clients\" extra={\r\n                            <Input placeholder=\"Search by name or email\" value={inputVal} onChange={searchClient} />\r\n                        }>\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={leadClients}\r\n                                pagination={{\r\n                                    onChange: page => {\r\n                                        console.log(page);\r\n                                    },\r\n                                    pageSize: 6,\r\n                                }}\r\n                                renderItem={item => (\r\n                                    <List.Item\r\n                                        actions={[<a onClick={() => setAdminUser(item)} className=\"list-edit\" key=\"list-edit\">{loading.loader && loading.ClientId === item.id ? <LoadingOutlined /> : <PenIcon />}</a>, <a className=\"list-view\" key=\"list-view\" ><Popconfirm onConfirm={() => deletePartner(item.id)} title=\"Are you sure you want to delete the Client?\"> <DeleteOutlined /></Popconfirm></a>]}\r\n                                    >\r\n                                        <List.Item.Meta\r\n                                            className=\"list-clients\"\r\n                                            avatar={<Avatar >{item.name.charAt(0)}</Avatar>}\r\n                                            title={<a onClick={() => setAdminUser(item)}>{humanize(item.name)} </a>}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </Card>\r\n                    </Spin>\r\n\r\n                </Col>\r\n                {/* <Col xs={24} md={12}>\r\n                    <Spin spinning={leadClientListLoading} size=\"large\">\r\n                        <Card title=\"Total Clients\">\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={leadClientList}\r\n                                pagination={{\r\n                                    onChange: page => {\r\n                                        console.log(page);\r\n                                    },\r\n                                    pageSize: 6,\r\n                                }}\r\n                                renderItem={item => (\r\n                                    <List.Item\r\n                                        actions={[<a onClick={() => setAdminUser(item)} className=\"list-edit\" key=\"list-edit\">{loading.loader && loading.ClientId === item.id ? <LoadingOutlined /> : <PenIcon />}</a>, <a className=\"list-view\" key=\"list-view\" ><Popconfirm onConfirm={() => deletePartner(item.id)} title=\"Are you sure you want to delete the client?\"> <DeleteOutlined /></Popconfirm></a>]}\r\n                                    >\r\n                                        <List.Item.Meta\r\n                                            avatar={<Avatar >{item.name.charAt(0)}</Avatar>}\r\n                                            title={<a onClick={() => setAdminUser(item)}>{item.name}</a>}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </Card>\r\n                    </Spin>\r\n                </Col> */}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        leadClientList: state.leadClient.leadClientList,\r\n        leadClientListLoading: state.leadClient.leadClientListLoading,\r\n        leadClientMeta: state.leadClient.leadClientMeta,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        listAllLeadClients: () => dispatch(listAllLeadClients()),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}
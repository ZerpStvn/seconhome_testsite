{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\global-search\\\\search-card.js\";\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Tag, Select, Card, Divider, Button, Modal, Input, Form, Spin, List, Avatar, Checkbox, Typography, Segmented, Row, Col } from \"antd\";\nimport moment from \"moment\";\nimport { updateLead } from \"../../redux/actions/lead-actions\";\nimport { humanize } from \"../../helpers/string-helper\";\nimport { homeCareOfferedOptions, residentBedroomOptions } from \"../../constants/defaultValues\";\nimport Config from \"../../config\";\nimport { SpaceContext } from \"antd/lib/space\";\nimport Slider from \"react-slick\";\nimport { ThumbsDownSvgIcon, ThumbsUpSvgIcon, ThumbsUpSvgIconNew } from \"../../assets/svg-icon/icon\";\nimport { updateHome } from \"../../redux/actions/home-actions\";\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\nimport defaultImage from \"../../assets/images/second-home-facility-default.jpg\";\nvar Text = Typography.Text,\n    Link = Typography.Link;\nvar Meta = Card.Meta;\nvar TextArea = Input.TextArea;\n\nvar SearchCard = function SearchCard(_ref) {\n  var home = _ref.home,\n      history = _ref.history,\n      currentLoggedInUser = _ref.currentLoggedInUser,\n      lead = _ref.lead;\n  // console.log(home.is_liked, home.id, \"home\");\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(home.is_liked == 1 ? true : lead.is_liked == 0 ? false : \"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      leadLikeValue = _useState4[0],\n      setLeadLikeValue = _useState4[1];\n\n  var roomTypes = function roomTypes(Rooms) {\n    var TempRooms = [];\n    Rooms.forEach(function (Item, Index) {\n      if (Item.status == \"published\" && Item.availability !== null) {\n        if (!TempRooms.includes(Item.type) && Item.type !== null) {\n          if (Item.availability == \"shared_male\") {\n            Item.type == \"shared_2_people\" && TempRooms.push(\"Shared 2 People Male\");\n            Item.type == \"shared_3_people\" && TempRooms.push(\"Shared 3 People Male\");\n          } else if (Item.availability == \"shared_female\") {\n            Item.type == \"shared_2_people\" && TempRooms.push(\"Shared 2 People Female\");\n            Item.type == \"shared_3_people\" && TempRooms.push(\"Shared 3 People Female\");\n          } else if (Item.availability !== \"shared_male\" && Item.availability !== \"shared_female\") {\n            TempRooms.push(Item.type);\n          }\n        }\n      }\n    }); // console.log(TempRooms);\n    // console.log([...new Set(TempRooms)], \"dasdadada\");\n\n    TempRooms = _toConsumableArray(new Set(TempRooms));\n    return TempRooms.map(function (item, index) {\n      // let Value = '';\n      // residentBedroomOptions.forEach(Item => {\n      //     if (Item.value.trim() === item.trim()) {\n      //         Value = Item.text;\n      //     }\n      // });\n      return /*#__PURE__*/React.createElement(Tag, {\n        key: index,\n        color: \"blue\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }\n      }, humanize(item));\n    });\n  };\n\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0 // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  var likeHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(likeValue) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              data = {\n                is_liked: likeValue\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return dispatch(updateHome(home.id, data));\n\n            case 5:\n              setLeadLikeValue(likeValue); // setLoading(false)\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 11:\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function likeHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    description: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-details\",\n      style: {\n        marginBottom: '0'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-img\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n      className: \"search-slider \".concat(!currentLoggedInUser ? \"search-slider-non-user\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }), home.image ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-height\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(Config.API, \"/assets/\").concat(home.image),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 83\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-height\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 142\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: defaultImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 171\n      }\n    })), home.photos && home.photos.length && home.photos.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"\".concat(Config.API, \"/assets/\").concat(item.directus_files_id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 69\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      xl: 16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"cap-letter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, home.name && home.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title cap-letter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    }, home.care_offered && home.care_offered.map(function (item, index) {\n      var Value = '';\n      homeCareOfferedOptions.forEach(function (Item) {\n        if (Item.value === item) {\n          Value = Item.text;\n        }\n      });\n      return Value;\n    }).join(\", \"))), currentLoggedInUser && currentLoggedInUser.role == Config.userId.client ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      xl: 8,\n      className: \"likeHandler\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 45\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Spin, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 60\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return likeHandler(true);\n      },\n      className: leadLikeValue == true ? \"like-active feedbackIcon\" : \"feedbackIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ThumbsUpSvgIconNew, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return likeHandler(false);\n      },\n      className: leadLikeValue == false ? \"feedbackIcon dislike-active\" : \"feedbackIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ThumbsDownSvgIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 61\n      }\n    }))))) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"budget\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, formatter.format(home.min_budget), \" - \", formatter.format(home.max_budget)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"roomtype\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, roomTypes(home.rooms)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"address\",\n      style: {\n        marginBottom: '0'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, home.city, home.state && \", \".concat(home.state), home.zip && \", \".concat(home.zip)), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/dashboard/home-detail/\".concat(home.id),\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 41\n      }\n    }, \"Learn More\")))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default SearchCard;","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/global-search/search-card.js"],"names":["React","useState","useDispatch","Tag","Select","Card","Divider","Button","Modal","Input","Form","Spin","List","Avatar","Checkbox","Typography","Segmented","Row","Col","moment","updateLead","humanize","homeCareOfferedOptions","residentBedroomOptions","Config","SpaceContext","Slider","ThumbsDownSvgIcon","ThumbsUpSvgIcon","ThumbsUpSvgIconNew","updateHome","faL","defaultImage","Text","Link","Meta","TextArea","SearchCard","home","history","currentLoggedInUser","lead","dispatch","loading","setLoading","is_liked","leadLikeValue","setLeadLikeValue","roomTypes","Rooms","TempRooms","forEach","Item","Index","status","availability","includes","type","push","Set","map","item","index","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","settings","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","likeHandler","likeValue","data","id","console","log","marginBottom","image","API","photos","length","directus_files_id","name","care_offered","Value","value","text","join","role","userId","client","format","min_budget","max_budget","rooms","city","state","zip"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Tag, Select, Card, Divider, Button, Modal, Input, Form, Spin, List, Avatar, Checkbox, Typography, Segmented, Row, Col } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { updateLead } from \"../../redux/actions/lead-actions\";\r\nimport { humanize } from \"../../helpers/string-helper\";\r\nimport { homeCareOfferedOptions, residentBedroomOptions } from \"../../constants/defaultValues\";\r\nimport Config from \"../../config\";\r\nimport { SpaceContext } from \"antd/lib/space\";\r\nimport Slider from \"react-slick\";\r\nimport { ThumbsDownSvgIcon, ThumbsUpSvgIcon, ThumbsUpSvgIconNew } from \"../../assets/svg-icon/icon\";\r\nimport { updateHome } from \"../../redux/actions/home-actions\";\r\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\r\nimport defaultImage from \"../../assets/images/second-home-facility-default.jpg\";\r\n\r\nconst { Text, Link } = Typography;\r\nconst { Meta } = Card;\r\nconst { TextArea } = Input;\r\n\r\nconst SearchCard = ({ home, history, currentLoggedInUser, lead }) => {\r\n    // console.log(home.is_liked, home.id, \"home\");\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [leadLikeValue, setLeadLikeValue] = useState(home.is_liked == 1 ? true : lead.is_liked == 0 ? false : \"\")\r\n\r\n    const roomTypes = (Rooms) => {\r\n        let TempRooms = [];\r\n        Rooms.forEach((Item, Index) => {\r\n            if (Item.status == \"published\" && Item.availability !== null) {\r\n                if (!TempRooms.includes(Item.type) && Item.type !== null) {\r\n                    if (Item.availability == \"shared_male\") {\r\n                        Item.type == \"shared_2_people\" && TempRooms.push(\"Shared 2 People Male\");\r\n                        Item.type == \"shared_3_people\" && TempRooms.push(\"Shared 3 People Male\")\r\n                    }\r\n                    else if (Item.availability == \"shared_female\") {\r\n                        Item.type == \"shared_2_people\" && TempRooms.push(\"Shared 2 People Female\");\r\n                        Item.type == \"shared_3_people\" && TempRooms.push(\"Shared 3 People Female\")\r\n                    }\r\n                    else if (Item.availability !== \"shared_male\" && Item.availability !== \"shared_female\") {\r\n                        TempRooms.push(Item.type);\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        })\r\n        // console.log(TempRooms);\r\n        // console.log([...new Set(TempRooms)], \"dasdadada\");\r\n        TempRooms = [...new Set(TempRooms)];\r\n        return TempRooms.map((item, index) => {\r\n            // let Value = '';\r\n            // residentBedroomOptions.forEach(Item => {\r\n            //     if (Item.value.trim() === item.trim()) {\r\n            //         Value = Item.text;\r\n            //     }\r\n            // });\r\n            return <Tag key={index} color=\"blue\">{humanize(item)}</Tag>\r\n        });\r\n    }\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0\r\n\r\n        // These options are needed to round to whole numbers if that's what you want.\r\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n    });\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        arrows: true,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n    const likeHandler = async (likeValue) => {\r\n        setLoading(true)\r\n        const data = { is_liked: likeValue };\r\n        try {\r\n            await dispatch(updateHome(home.id, data));\r\n            setLeadLikeValue(likeValue);\r\n            // setLoading(false)\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        setLoading(false);\r\n\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <div className=\"card-content\">\r\n                    <Meta\r\n                        description={\r\n                            <div className=\"card-details\" style={{ marginBottom: '0' }}>\r\n\r\n                                <div className=\"card-img\">\r\n                                    {/* <Tag color=\"blue\" className=\"home-status\">\r\n                                        Available\r\n                                    </Tag> */}\r\n                                    <Slider {...settings} className={`search-slider ${!currentLoggedInUser ? \"search-slider-non-user\" : \"\"}`}>\r\n                                        {home.image ? <div className=\"img-height\"><img src={`${Config.API}/assets/${home.image}`} /></div> : <div className=\"img-height\"> <img src={defaultImage} /></div>}\r\n                                        {home.photos && home.photos.length && home.photos.map((item, index) => {\r\n                                            return <div key={index}><img src={`${Config.API}/assets/${item.directus_files_id}`} /></div>\r\n                                        })}\r\n                                    </Slider>\r\n                                    {/* {home.image ?\r\n                                        <img src={`${Config.API}/assets/${home.image}`} />\r\n                                        :\r\n                                        <img src={`https://via.placeholder.com/600X400`} />\r\n                                    } */}\r\n                                    {/* <img src={`${Config.API}/assets/${home.image}`} /> */}\r\n                                </div>\r\n                                <div className=\"home-content\">\r\n                                    {/* <Slider {...settings}>\r\n                                        <div>\r\n                                            <h3>1</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3>2</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3>3</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3>4</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3>5</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3>6</h3>\r\n                                        </div>\r\n                                    </Slider> */}\r\n                                    {/* {home.status}<br />\r\n                                    {home.id} */}\r\n                                    <Row>\r\n                                        <Col xs={24} xl={16}>\r\n                                            <h1 className=\"cap-letter\">{home.name && home.name}</h1>\r\n                                            <div className=\"title cap-letter\">{home.care_offered && home.care_offered.map((item, index) => {\r\n                                                let Value = '';\r\n                                                homeCareOfferedOptions.forEach(Item => {\r\n                                                    if (Item.value === item) {\r\n                                                        Value = Item.text;\r\n                                                    }\r\n                                                });\r\n                                                return Value\r\n                                            }).join(\", \")}</div></Col>\r\n                                        {currentLoggedInUser && currentLoggedInUser.role == Config.userId.client ? (<>\r\n                                            <Col xs={24} xl={8} className=\"likeHandler\">\r\n                                                {loading ? <Spin /> :\r\n                                                    <>\r\n                                                        <div  onClick={() => likeHandler(true)} className={leadLikeValue == true ? \"like-active feedbackIcon\" : \"feedbackIcon\"}>\r\n                                                            <ThumbsUpSvgIconNew />\r\n                                                        </div>\r\n                                                        <div  onClick={() => likeHandler(false)} className={leadLikeValue == false ? \"feedbackIcon dislike-active\" : \"feedbackIcon\"}>\r\n                                                            <ThumbsDownSvgIcon />\r\n                                                        </div>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {/*<Segmented\r\n                                                  // value={leadLikeValue}\r\n                                                   defaultValue={leadLikeValue}\r\n                                                   options={[\r\n                                                       {\r\n                                                           value: true,\r\n                                                           icon: <ThumbsUpSvgIcon />,\r\n                                                       },\r\n                                                       {\r\n                                                           value: false,\r\n                                                           icon: <ThumbsDownSvgIcon />,\r\n                                                       },\r\n                                                   ]}\r\n                                                   onChange={likeHandler}\r\n                                               /> */}\r\n                                            </Col>\r\n                                        </>) : \"\"}\r\n\r\n                                        {/* {lead && <Col xs={24} xl={8} className=\"likeHandler\">\r\n                                            <Segmented\r\n                                                // value={leadLikeValue}\r\n                                                defaultValue={leadLikeValue}\r\n                                                options={[\r\n                                                    {\r\n                                                        value: true,\r\n                                                        icon: <ThumbsUpSvgIcon />,\r\n                                                    },\r\n                                                    {\r\n                                                        value: false,\r\n                                                        icon: <ThumbsDownSvgIcon />,\r\n                                                    },\r\n                                                ]}\r\n                                                onChange={likeHandler}\r\n                                            />\r\n                                        </Col>} */}\r\n                                    </Row>\r\n                                    <div className=\"budget\">\r\n                                        {/* {`$${home.min_budget} - $${home.max_budget}`} */}\r\n                                        {formatter.format(home.min_budget)} - {formatter.format(home.max_budget)}\r\n                                    </div>\r\n                                    <div className=\"roomtype\" >{roomTypes(home.rooms)}</div>\r\n                                    <div className=\"d-flex\">\r\n                                        <div className=\"address\" style={{ marginBottom: '0' }}>\r\n\r\n                                            {home.city}{home.state && `, ${home.state}`}{home.zip && `, ${home.zip}`}\r\n                                        </div>\r\n                                        {/* <Button className=\"learn-btn\" onClick={() => {\r\n                                            history.push(`/home-detail/${home.id}`);\r\n                                        }} style={{ marginTop: '10px' }}>Learn More</Button> */}\r\n                                        <a href={`/dashboard/home-detail/${home.id}`} target=\"_blank\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </React.Fragment >\r\n    );\r\n};\r\n\r\nexport default SearchCard;\r\n"]},"metadata":{},"sourceType":"module"}
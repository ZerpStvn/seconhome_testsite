{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\mainSearch.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, StandaloneSearchBox } from \"google-maps-react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\n\nfunction LocationSearch() {\n  var _this = this;\n\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: \"YOUR_API_KEY\" // Replace with your Google Maps API key\n\n  }),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  var handleSelect = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var results, latLng;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return geocodeByAddress(address);\n\n            case 3:\n              results = _context.sent;\n              _context.next = 6;\n              return getLatLng(results[0]);\n\n            case 6:\n              latLng = _context.sent;\n              console.log(\"Selected location:\", latLng); // Do something with the selected location, such as updating state or making API calls\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error selecting location:\", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function handleSelect(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, loadError ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Error loading maps\") : !isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Loading maps\") : /*#__PURE__*/React.createElement(GoogleMap, {\n    google: window.google,\n    zoom: 14,\n    center: {\n      lat: 37.7749,\n      lng: -122.4194\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StandaloneSearchBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n    onSelect: function onSelect(_ref2) {\n      var description = _ref2.description;\n      return handleSelect(description);\n    },\n    searchOptions: {\n      types: [\"(cities)\", \"administrative_area_level_2\"]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, function (_ref3) {\n    var getInputProps = _ref3.getInputProps,\n        suggestions = _ref3.suggestions,\n        getSuggestionItemProps = _ref3.getSuggestionItemProps,\n        loading = _ref3.loading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: \"City, Zip, School\"\n    }), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }\n    }, \"Loading suggestions...\") : null, suggestions.map(function (suggestion) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        key: suggestion.place_id\n      }, getSuggestionItemProps(suggestion), {\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }), suggestion.description);\n    })));\n  }))));\n}\n\nexport default LocationSearch;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/mainSearch.js"],"names":["React","GoogleMap","useLoadScript","StandaloneSearchBox","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearch","googleMapsApiKey","isLoaded","loadError","handleSelect","address","results","latLng","console","log","error","window","google","lat","lng","description","types","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","place_id","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  StandaloneSearchBox,\r\n} from \"google-maps-react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-google-places-autocomplete\";\r\n\r\nfunction LocationSearch() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"YOUR_API_KEY\", // Replace with your Google Maps API key\r\n  });\r\n\r\n  const handleSelect = async (address) => {\r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      const latLng = await getLatLng(results[0]);\r\n      console.log(\"Selected location:\", latLng);\r\n      // Do something with the selected location, such as updating state or making API calls\r\n    } catch (error) {\r\n      console.error(\"Error selecting location:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loadError ? (\r\n        <div>Error loading maps</div>\r\n      ) : !isLoaded ? (\r\n        <div>Loading maps</div>\r\n      ) : (\r\n        <GoogleMap\r\n          google={window.google}\r\n          zoom={14}\r\n          center={{ lat: 37.7749, lng: -122.4194 }}\r\n        >\r\n          <StandaloneSearchBox>\r\n            <PlacesAutocomplete\r\n              onSelect={({ description }) => handleSelect(description)}\r\n              searchOptions={{\r\n                types: [\"(cities)\", \"administrative_area_level_2\"],\r\n              }}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({ placeholder: \"City, Zip, School\" })}\r\n                  />\r\n                  <div>\r\n                    {loading ? <div>Loading suggestions...</div> : null}\r\n                    {suggestions.map((suggestion) => (\r\n                      <div\r\n                        key={suggestion.place_id}\r\n                        {...getSuggestionItemProps(suggestion)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {suggestion.description}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </StandaloneSearchBox>\r\n        </GoogleMap>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationSearch;\r\n"]},"metadata":{},"sourceType":"module"}
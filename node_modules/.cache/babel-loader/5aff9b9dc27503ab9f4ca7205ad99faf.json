{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\components\\\\upload-camera.js\";\n\nimport React, { useState, useRef } from \"react\";\nimport { Modal, Upload } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\nimport { slugify } from \"../helpers/string-helper\";\nimport Webcam from \"react-webcam\"; // Import the react-webcam library\n\nfunction getBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n  });\n}\n\nvar UploadPhotosCamera = function UploadPhotosCamera(_ref) {\n  var photoList = _ref.photoList,\n      handelPhotoListChange = _ref.handelPhotoListChange,\n      category = _ref.category,\n      multiple = _ref.multiple;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      previewVisible = _useState2[0],\n      setPreviewVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      previewImage = _useState4[0],\n      setPreviewImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      previewTitle = _useState6[0],\n      setPreviewTitle = _useState6[1];\n\n  var webcamRef = useRef(null); // Reference to the webcam component\n\n  var showUpload = true;\n\n  if (!multiple) {\n    if (photoList.length > 0) {\n      showUpload = false;\n    }\n  }\n\n  var handleCancel = function handleCancel() {\n    setPreviewVisible(false);\n  };\n\n  var handlePreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!file.url && !file.preview)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return getBase64(file.originFileObj);\n\n            case 3:\n              file.preview = _context.sent;\n\n            case 4:\n              setPreviewImage(file.url || file.preview);\n              setPreviewVisible(true);\n              setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleCameraCapture = function handleCameraCapture() {\n    var imageSrc = webcamRef.current.getScreenshot();\n    var imageFile = dataURLtoFile(imageSrc, \"capturedImage.png\");\n    handelPhotoListChange([imageFile], category);\n  }; // Helper function to convert dataURL to File\n\n\n  var dataURLtoFile = function dataURLtoFile(dataURL, filename) {\n    var arr = dataURL.split(\",\");\n    var mime = arr[0].match(/:(.*?);/)[1];\n    var bstr = atob(arr[1]);\n    var n = bstr.length;\n    var u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  };\n\n  var beforeUpload = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", false);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function beforeUpload(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CameraOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Camera\"));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Webcam, {\n    audio: false,\n    ref: webcamRef,\n    screenshotFormat: \"image/png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Upload, {\n    listType: \"picture-card\",\n    fileList: photoList,\n    onPreview: handlePreview,\n    name: category ? slugify(category) : \"images\",\n    onChange: function onChange(files) {\n      return handelPhotoListChange(files, category);\n    },\n    beforeUpload: beforeUpload,\n    accept: \"image/jpeg,image/png\",\n    multiple: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, showUpload && /*#__PURE__*/React.createElement(React.Fragment, null, uploadButton)), /*#__PURE__*/React.createElement(Modal, {\n    visible: previewVisible,\n    title: previewTitle,\n    footer: null,\n    onCancel: handleCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"example\",\n    style: {\n      width: \"100%\"\n    },\n    src: previewImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default UploadPhotosCamera;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/components/upload-camera.js"],"names":["React","useState","useRef","Modal","Upload","CameraOutlined","slugify","Webcam","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadPhotosCamera","photoList","handelPhotoListChange","category","multiple","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","webcamRef","showUpload","length","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","handleCameraCapture","imageSrc","current","getScreenshot","imageFile","dataURLtoFile","dataURL","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","beforeUpload","uploadButton","marginTop","files","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Modal, Upload } from \"antd\";\r\nimport { CameraOutlined } from \"@ant-design/icons\";\r\nimport { slugify } from \"../helpers/string-helper\";\r\nimport Webcam from \"react-webcam\"; // Import the react-webcam library\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nconst UploadPhotosCamera = ({\r\n  photoList,\r\n  handelPhotoListChange,\r\n  category,\r\n  multiple,\r\n}) => {\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const webcamRef = useRef(null); // Reference to the webcam component\r\n\r\n  var showUpload = true;\r\n  if (!multiple) {\r\n    if (photoList.length > 0) {\r\n      showUpload = false;\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n\r\n  const handleCameraCapture = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    const imageFile = dataURLtoFile(imageSrc, \"capturedImage.png\");\r\n    handelPhotoListChange([imageFile], category);\r\n  };\r\n\r\n  // Helper function to convert dataURL to File\r\n  const dataURLtoFile = (dataURL, filename) => {\r\n    const arr = dataURL.split(\",\");\r\n    const mime = arr[0].match(/:(.*?);/)[1];\r\n    const bstr = atob(arr[1]);\r\n    let n = bstr.length;\r\n    const u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n  };\r\n\r\n  const beforeUpload = async (file) => {\r\n    return false;\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <CameraOutlined />\r\n      <div style={{ marginTop: 8 }}>Camera</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Display the camera */}\r\n      <Webcam audio={false} ref={webcamRef} screenshotFormat=\"image/png\" />\r\n\r\n      {/* Display the photo upload */}\r\n      <Upload\r\n        listType=\"picture-card\"\r\n        fileList={photoList}\r\n        onPreview={handlePreview}\r\n        name={category ? slugify(category) : \"images\"}\r\n        onChange={(files) => handelPhotoListChange(files, category)}\r\n        beforeUpload={beforeUpload}\r\n        accept=\"image/jpeg,image/png\"\r\n        multiple\r\n      >\r\n        {showUpload && <>{uploadButton}</>}\r\n      </Upload>\r\n\r\n      <Modal\r\n        visible={previewVisible}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadPhotosCamera;\r\n"]},"metadata":{},"sourceType":"module"}
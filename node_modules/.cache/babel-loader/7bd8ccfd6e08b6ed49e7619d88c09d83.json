{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\client\\\\room\\\\ListRoom.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Breadcrumb, Tabs, Skeleton, Empty, Row, Col } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllAvailableRoomLeadClientsList, listAllAvailableRoomLeadClients, setLeadClientListLoading } from \"../../../redux/actions/lead-client-actions\";\nimport { roomTypesOptions } from \"../../../constants/defaultValues\";\nimport CardViewRoom from \"./CardViewRoom\";\nimport FilterViewRoom from \"./FilterViewRoom\";\nimport MapViewRoom from \"./MapViewRoom\";\nimport leadClientApi from \"../../../redux/api/lead-client-api\";\nvar TabPane = Tabs.TabPane;\n\nvar ListRoom = function ListRoom() {\n  var dispatch = useDispatch();\n  var roomList = useSelector(function (state) {\n    return state.leadClient.leadClientAvailableRoomList;\n  });\n  var loading = useSelector(function (state) {\n    return state.leadClient.leadClientListLoading;\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchView = _useState2[0],\n      setSwitchView = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterDropdownValue = _useState4[0],\n      setFilterDropdownValue = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availabilityValue = _useState6[0],\n      setAvailabilityValue = _useState6[1];\n\n  var _useState7 = useState('private_room'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      roomType = _useState8[0],\n      setRoomType = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      leadsConfig = _useState10[0],\n      setLeadsConfig = _useState10[1];\n\n  var _useState11 = useState({\n    room_type: \"private_room\",\n    housing_type: \"\",\n    availability: \"\"\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filterValue = _useState12[0],\n      setFilterValue = _useState12[1];\n\n  var _useState13 = useState({\n    leads: {\n      home: {\n        rooms: {\n          _filter: {\n            availability: {\n              _neq: \"no\"\n            },\n            type: {\n              _eq: roomType\n            },\n            status: {\n              _eq: \"published\"\n            }\n          }\n        }\n      }\n    }\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listFilter = _useState14[0],\n      setListFilter = _useState14[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'RESET'\n    });\n  }, []);\n  useEffect(function () {\n    if (loading) {\n      getAllAvailableRoomList();\n    }\n\n    return function () {\n      console.log(\"Lead ClientList Unmounting\");\n    };\n  }, [loading]);\n  useEffect(function () {\n    if (roomList.length) {\n      homebudget(roomList[0].leads);\n    }\n  }, [roomList]);\n\n  var getMaxRoomCost = function getMaxRoomCost(rooms) {\n    if (rooms.length) {\n      return Math.max.apply(null, rooms.length ? rooms.map(function (room) {\n        return room.base_rate ? room.base_rate : 0;\n      }) : [0]);\n    } else {\n      return 0;\n    }\n  };\n\n  var getMinRoomCost = function getMinRoomCost(rooms) {\n    if (rooms.length) {\n      return Math.min.apply(null, rooms.map(function (room) {\n        return room.base_rate ? room.base_rate : 0;\n      }));\n    } else {\n      return 0;\n    }\n  };\n\n  var homebudget = function homebudget(list) {\n    list.forEach(function (Item, index) {\n      if (Item.home !== null) {\n        Item.max_budget = getMaxRoomCost(Item.home.rooms);\n        Item.min_budget = getMinRoomCost(Item.home.rooms);\n      }\n    });\n    setLeadsConfig(list);\n  };\n\n  var getAllAvailableRoomList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // let data = await leadClientApi.getRoomListing({ ...ss, fields: [\"*\", \"leads.*\", \"leads.home.*\", \"leads.home.rooms.*\"], })\n              dispatch(getAllAvailableRoomLeadClientsList(_objectSpread({}, filterValue, {\n                fields: [\"*\", \"leads.*\", \"leads.home.*\", \"leads.home.rooms.*\"]\n              })));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAllAvailableRoomList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function roomsCollection() {\n    var rooms = [];\n\n    if (roomList.length > 0) {\n      leadsConfig.map(function (lead) {\n        if (lead.home !== null && lead.approval === \"accepted\") {\n          lead.home.rooms.forEach(function (room) {\n            if (room.status !== \"draft\" && room.availability !== null && room.type == roomType) {\n              if (room.availability != \"no\") {\n                var data = _objectSpread({}, room, {\n                  homeName: lead.home.name,\n                  lead: lead,\n                  homeAddress: lead.home.address_line_1,\n                  leadId: lead.id,\n                  leadApproval: lead.approval,\n                  leadClientId: roomList[0].id,\n                  leadClientName: roomList[0].name,\n                  leadClientPhone: roomList[0].cell,\n                  leadClientRooms: lead.home.rooms,\n                  liked: lead.is_liked\n                });\n\n                rooms.push(data);\n              }\n            }\n          });\n        }\n      });\n    }\n\n    return rooms;\n  }\n\n  var roomsData = roomsCollection();\n\n  function callback(key) {\n    // setListFilter({\n    //   leads: {\n    //     home: {\n    //       rooms: {\n    //         _filter: {\n    //           availability: { _neq: \"no\" },\n    //           type: { _eq: key },\n    //           status: { _eq: \"published\" }\n    //         }\n    //       }\n    //     }\n    //   },\n    // }\n    // )\n    setFilterValue(function (values) {\n      return _objectSpread({}, values, {\n        room_type: key\n      });\n    });\n    setRoomType(key);\n    setFilterDropdownValue('');\n    dispatch(setLeadClientListLoading(true));\n  }\n\n  function onListingFilterChange(filteredValue) {\n    // setListFilter({\n    //   leads: {\n    //     home: {\n    //       _filter: {\n    //         care_offered: { _contains: filteredValue },\n    //       },\n    //       // care_offered: { _contains: filteredValue },\n    //       rooms: {\n    //         _filter: {\n    //           availability: { _neq: \"no\" },\n    //           type: { _eq: roomType },\n    //           status: { _eq: \"published\" }\n    //         }\n    //       }\n    //     }\n    //   },\n    // }\n    // )\n    setFilterValue(function (values) {\n      return _objectSpread({}, values, {\n        housing_type: filteredValue\n      });\n    });\n    setFilterDropdownValue(filteredValue);\n    dispatch(setLeadClientListLoading(true)); // const filterValue = filteredValue\n    //   ? {\n    //     home: { care_offered: { _contains: filteredValue } },\n    //   }\n    //   : {};\n    // setListFilter(filterValue);\n    // setFilterDropdownValue(filteredValue);\n    // dispatch(setLeadListLoading(true));\n  }\n\n  var switchViewHandler = function switchViewHandler(value) {\n    setSwitchView(value);\n  };\n\n  var handleRateChange = function handleRateChange(value) {\n    if (value == \"low_to_high\") {\n      var NewHomes = leadsConfig.sort(function (a, b) {\n        return a.min_budget - b.min_budget;\n      });\n      setLeadsConfig(_toConsumableArray(NewHomes));\n    }\n\n    if (value == \"high_to_low\") {\n      var _NewHomes = leadsConfig.sort(function (a, b) {\n        return b.max_budget - a.max_budget;\n      });\n\n      setLeadsConfig(_toConsumableArray(_NewHomes));\n    }\n  };\n\n  var handleAvailabilityChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setFilterValue(function (values) {\n                return _objectSpread({}, values, {\n                  availability: value\n                });\n              });\n              setAvailabilityValue(value);\n              dispatch(setLeadClientListLoading(true));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleAvailabilityChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, \"Available Rooms\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, roomTypesOptions && roomTypesOptions.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: roomTypesOptions[0].value,\n    onChange: callback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, roomTypesOptions.map(function (item) {\n    return /*#__PURE__*/React.createElement(TabPane, {\n      tab: item.text,\n      key: item.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FilterViewRoom, {\n      onSetSwitchView: switchViewHandler,\n      defaultSwitchView: switchView,\n      availabilityValue: availabilityValue,\n      handleAvailabilityChange: handleAvailabilityChange,\n      listFilterChange: onListingFilterChange,\n      defaultFilterListValue: filterDropdownValue,\n      handleRateChange: handleRateChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }), switchView ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, roomsData && roomsData.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, roomsData.map(function (roomItem, index) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 37\n        }\n      }, roomItem.home !== null ? /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        md: 8,\n        lg: 6,\n        key: roomItem.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(CardViewRoom, {\n        homeName: roomItem.homeName,\n        room: roomItem,\n        lead: roomItem.lead,\n        address: roomItem.homeAddress,\n        approval: roomItem.leadApproval,\n        coverImage: roomItem.profile,\n        leadID: roomItem.leadId,\n        leadClientId: roomItem.leadClientId,\n        leadClientName: roomItem.leadClientName,\n        leadClientPhone: roomItem.leadClientPhone,\n        homeID: roomItem.home,\n        rooms: roomItem.leadClientRooms,\n        rommId: roomItem.id,\n        liked: roomItem.liked,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 43\n        }\n      })) : null);\n    })) : /*#__PURE__*/React.createElement(Empty, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 35\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 27\n      }\n    }, leadsConfig && leadsConfig.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MapViewRoom, {\n      lead: leadsConfig // approvalType={approvalState}\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    })) : null))));\n  }), \";\")) : null));\n};\n\nexport default ListRoom;","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/client/room/ListRoom.js"],"names":["React","useState","useEffect","Breadcrumb","Tabs","Skeleton","Empty","Row","Col","useSelector","useDispatch","getAllAvailableRoomLeadClientsList","listAllAvailableRoomLeadClients","setLeadClientListLoading","roomTypesOptions","CardViewRoom","FilterViewRoom","MapViewRoom","leadClientApi","TabPane","ListRoom","dispatch","roomList","state","leadClient","leadClientAvailableRoomList","loading","leadClientListLoading","switchView","setSwitchView","filterDropdownValue","setFilterDropdownValue","availabilityValue","setAvailabilityValue","roomType","setRoomType","leadsConfig","setLeadsConfig","room_type","housing_type","availability","filterValue","setFilterValue","leads","home","rooms","_filter","_neq","type","_eq","status","listFilter","setListFilter","getAllAvailableRoomList","console","log","length","homebudget","getMaxRoomCost","Math","max","apply","map","room","base_rate","getMinRoomCost","min","list","forEach","Item","index","max_budget","min_budget","fields","roomsCollection","lead","approval","data","homeName","name","homeAddress","address_line_1","leadId","id","leadApproval","leadClientId","leadClientName","leadClientPhone","cell","leadClientRooms","liked","is_liked","push","roomsData","callback","key","values","onListingFilterChange","filteredValue","switchViewHandler","value","handleRateChange","NewHomes","sort","a","b","handleAvailabilityChange","item","text","roomItem","profile"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4CC,GAA5C,EAAiDC,GAAjD,QAA4D,MAA5D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,kCADF,EAEEC,+BAFF,EAGEC,wBAHF,QAIO,4CAJP;AAKA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;IAEQC,O,GAAYf,I,CAAZe,O;;AAER,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,QAAQ,GAAGb,WAAW,CAC1B,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,UAAN,CAAiBC,2BAA5B;AAAA,GAD0B,CAA5B;AAGA,MAAMC,OAAO,GAAGjB,WAAW,CACzB,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,UAAN,CAAiBG,qBAA5B;AAAA,GADyB,CAA3B;;AALqB,kBAQe1B,QAAQ,CAAC,IAAD,CARvB;AAAA;AAAA,MAQd2B,UARc;AAAA,MAQFC,aARE;;AAAA,mBASiC5B,QAAQ,CAAC,EAAD,CATzC;AAAA;AAAA,MASd6B,mBATc;AAAA,MASOC,sBATP;;AAAA,mBAU6B9B,QAAQ,CAAC,EAAD,CAVrC;AAAA;AAAA,MAUd+B,iBAVc;AAAA,MAUKC,oBAVL;;AAAA,mBAWWhC,QAAQ,CAAC,cAAD,CAXnB;AAAA;AAAA,MAWdiC,QAXc;AAAA,MAWJC,WAXI;;AAAA,mBAYiBlC,QAAQ,CAAC,EAAD,CAZzB;AAAA;AAAA,MAYdmC,WAZc;AAAA,MAYDC,cAZC;;AAAA,oBAaiBpC,QAAQ,CAAC;AAC7CqC,IAAAA,SAAS,EAAE,cADkC;AAE7CC,IAAAA,YAAY,EAAE,EAF+B;AAG7CC,IAAAA,YAAY,EAAE;AAH+B,GAAD,CAbzB;AAAA;AAAA,MAadC,WAbc;AAAA,MAaDC,cAbC;;AAAA,oBAkBezC,QAAQ,CAAC;AAC3C0C,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AACPN,YAAAA,YAAY,EAAE;AAAEO,cAAAA,IAAI,EAAE;AAAR,aADP;AAEPC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,GAAG,EAAEf;AAAP,aAFC;AAGPgB,YAAAA,MAAM,EAAE;AAAED,cAAAA,GAAG,EAAE;AAAP;AAHD;AADJ;AADH;AADD;AADoC,GAAD,CAlBvB;AAAA;AAAA,MAkBdE,UAlBc;AAAA,MAkBFC,aAlBE;;AA+BrBlD,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,QAAQ,CAAC;AACP2B,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAOA9C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,OAAJ,EAAa;AACX2B,MAAAA,uBAAuB;AACxB;;AACD,WAAO,YAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KAFD;AAGD,GAPQ,EAON,CAAC7B,OAAD,CAPM,CAAT;AASAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,QAAQ,CAACkC,MAAb,EAAqB;AACnBC,MAAAA,UAAU,CAACnC,QAAQ,CAAC,CAAD,CAAR,CAAYqB,KAAb,CAAV;AACD;AAEF,GALQ,EAKN,CAACrB,QAAD,CALM,CAAT;;AAOA,MAAMoC,cAAc,GAAG,SAAjBA,cAAiB,CAACb,KAAD,EAAW;AAChC,QAAIA,KAAK,CAACW,MAAV,EAAkB;AAChB,aAAOG,IAAI,CAACC,GAAL,CAASC,KAAT,CACL,IADK,EAELhB,KAAK,CAACW,MAAN,GACIX,KAAK,CAACiB,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAC1B,eAAOA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACC,SAAtB,GAAkC,CAAzC;AACD,OAFC,CADJ,GAII,CAAC,CAAD,CANC,CAAP;AAQD,KATD,MASO;AACL,aAAO,CAAP;AACD;AACF,GAbD;;AAeA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,KAAD,EAAW;AAChC,QAAIA,KAAK,CAACW,MAAV,EAAkB;AAChB,aAAOG,IAAI,CAACO,GAAL,CAASL,KAAT,CACL,IADK,EAELhB,KAAK,CAACiB,GAAN,CAAU,UAAUC,IAAV,EAAgB;AACxB,eAAOA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACC,SAAtB,GAAkC,CAAzC;AACD,OAFD,CAFK,CAAP;AAMD,KAPD,MAOO;AACL,aAAO,CAAP;AACD;AACF,GAXD;;AAaA,MAAMP,UAAU,GAAG,SAAbA,UAAa,CAACU,IAAD,EAAU;AAC3BA,IAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5B,UAAID,IAAI,CAACzB,IAAL,KAAc,IAAlB,EAAwB;AACtByB,QAAAA,IAAI,CAACE,UAAL,GAAkBb,cAAc,CAACW,IAAI,CAACzB,IAAL,CAAUC,KAAX,CAAhC;AACAwB,QAAAA,IAAI,CAACG,UAAL,GAAkBP,cAAc,CAACI,IAAI,CAACzB,IAAL,CAAUC,KAAX,CAAhC;AACD;AACF,KALD;AAMAR,IAAAA,cAAc,CAAC8B,IAAD,CAAd;AACD,GARD;;AAUA,MAAMd,uBAAuB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAE9B;AACAhC,cAAAA,QAAQ,CACNV,kCAAkC,mBAAM8B,WAAN;AAAmBgC,gBAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,SAAN,EAAiB,cAAjB,EAAiC,oBAAjC;AAA3B,iBAD5B,CAAR;;AAH8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBpB,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAQA,WAASqB,eAAT,GAA2B;AACzB,QAAI7B,KAAK,GAAG,EAAZ;;AACA,QAAIvB,QAAQ,CAACkC,MAAT,GAAkB,CAAtB,EAAyB;AACvBpB,MAAAA,WAAW,CAAC0B,GAAZ,CAAgB,UAAUa,IAAV,EAAgB;AAC9B,YAAIA,IAAI,CAAC/B,IAAL,KAAc,IAAd,IAAsB+B,IAAI,CAACC,QAAL,KAAkB,UAA5C,EAAwD;AACtDD,UAAAA,IAAI,CAAC/B,IAAL,CAAUC,KAAV,CAAgBuB,OAAhB,CAAwB,UAACL,IAAD,EAAU;AAChC,gBAAIA,IAAI,CAACb,MAAL,KAAgB,OAAhB,IAA2Ba,IAAI,CAACvB,YAAL,KAAsB,IAAjD,IAAyDuB,IAAI,CAACf,IAAL,IAAad,QAA1E,EAAoF;AAClF,kBAAI6B,IAAI,CAACvB,YAAL,IAAqB,IAAzB,EAA+B;AAC7B,oBAAIqC,IAAI,qBACHd,IADG;AAENe,kBAAAA,QAAQ,EAAEH,IAAI,CAAC/B,IAAL,CAAUmC,IAFd;AAGNJ,kBAAAA,IAAI,EAAEA,IAHA;AAINK,kBAAAA,WAAW,EAAEL,IAAI,CAAC/B,IAAL,CAAUqC,cAJjB;AAKNC,kBAAAA,MAAM,EAAEP,IAAI,CAACQ,EALP;AAMNC,kBAAAA,YAAY,EAAET,IAAI,CAACC,QANb;AAONS,kBAAAA,YAAY,EAAE/D,QAAQ,CAAC,CAAD,CAAR,CAAY6D,EAPpB;AAQNG,kBAAAA,cAAc,EAAEhE,QAAQ,CAAC,CAAD,CAAR,CAAYyD,IARtB;AASNQ,kBAAAA,eAAe,EAAEjE,QAAQ,CAAC,CAAD,CAAR,CAAYkE,IATvB;AAUNC,kBAAAA,eAAe,EAAEd,IAAI,CAAC/B,IAAL,CAAUC,KAVrB;AAWN6C,kBAAAA,KAAK,EAAEf,IAAI,CAACgB;AAXN,kBAAR;;AAaA9C,gBAAAA,KAAK,CAAC+C,IAAN,CAAWf,IAAX;AACD;AAEF;AACF,WApBD;AAqBD;AACF,OAxBD;AAyBD;;AACD,WAAOhC,KAAP;AACD;;AAED,MAAMgD,SAAS,GAAGnB,eAAe,EAAjC;;AAEA,WAASoB,QAAT,CAAkBC,GAAlB,EAAuB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArD,IAAAA,cAAc,CAAC,UAACsD,MAAD,EAAY;AACzB,+BACKA,MADL;AAEE1D,QAAAA,SAAS,EAAEyD;AAFb;AAID,KALa,CAAd;AAMA5D,IAAAA,WAAW,CAAC4D,GAAD,CAAX;AACAhE,IAAAA,sBAAsB,CAAC,EAAD,CAAtB;AACAV,IAAAA,QAAQ,CAACR,wBAAwB,CAAC,IAAD,CAAzB,CAAR;AACD;;AAID,WAASoF,qBAAT,CAA+BC,aAA/B,EAA8C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,IAAAA,cAAc,CAAC,UAACsD,MAAD,EAAY;AACzB,+BACKA,MADL;AAEEzD,QAAAA,YAAY,EAAE2D;AAFhB;AAID,KALa,CAAd;AAMAnE,IAAAA,sBAAsB,CAACmE,aAAD,CAAtB;AACA7E,IAAAA,QAAQ,CAACR,wBAAwB,CAAC,IAAD,CAAzB,CAAR,CA1B4C,CA2B5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,MAAMsF,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnCvE,IAAAA,aAAa,CAACuE,KAAD,CAAb;AACD,GAFD;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,KAAD,EAAW;AAClC,QAAIA,KAAK,IAAI,aAAb,EAA4B;AAC1B,UAAIE,QAAQ,GAAGlE,WAAW,CAACmE,IAAZ,CAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9C,eAAOD,CAAC,CAAChC,UAAF,GAAeiC,CAAC,CAACjC,UAAxB;AACD,OAFc,CAAf;AAGAnC,MAAAA,cAAc,oBAAKiE,QAAL,EAAd;AACD;;AACD,QAAIF,KAAK,IAAI,aAAb,EAA4B;AAC1B,UAAIE,SAAQ,GAAGlE,WAAW,CAACmE,IAAZ,CAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9C,eAAOA,CAAC,CAAClC,UAAF,GAAeiC,CAAC,CAACjC,UAAxB;AACD,OAFc,CAAf;;AAGAlC,MAAAA,cAAc,oBAAKiE,SAAL,EAAd;AACD;AACF,GAbD;;AAeA,MAAMI,wBAAwB;AAAA,yEAAG,kBAAON,KAAP;AAAA;AAAA;AAAA;AAAA;AAC/B1D,cAAAA,cAAc,CAAC,UAACsD,MAAD,EAAY;AACzB,yCACKA,MADL;AAEExD,kBAAAA,YAAY,EAAE4D;AAFhB;AAID,eALa,CAAd;AAMAnE,cAAAA,oBAAoB,CAACmE,KAAD,CAApB;AACA/E,cAAAA,QAAQ,CAACR,wBAAwB,CAAC,IAAD,CAAzB,CAAR;;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAxB6F,wBAAwB;AAAA;AAAA;AAAA,KAA9B;;AAaA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5F,gBAAgB,IAAIA,gBAAgB,CAAC0C,MAAjB,GAA0B,CAA9C,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,gBAAgB,EAAE1C,gBAAgB,CAAC,CAAD,CAAhB,CAAoBsF,KADxC;AAEE,IAAA,QAAQ,EAAEN,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGhF,gBAAgB,CAACgD,GAAjB,CAAqB,UAAC6C,IAAD;AAAA,wBACpB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAnB;AAAyB,MAAA,GAAG,EAAED,IAAI,CAACP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1E,OAAO,gBACN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,eAAe,EAAEyE,iBAAjC;AACE,MAAA,iBAAiB,EAAEvE,UADrB;AAEE,MAAA,iBAAiB,EAAEI,iBAFrB;AAGE,MAAA,wBAAwB,EAAE0E,wBAH5B;AAIE,MAAA,gBAAgB,EAAET,qBAJpB;AAKE,MAAA,sBAAsB,EAAEnE,mBAL1B;AAME,MAAA,gBAAgB,EAAEuE,gBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQGzE,UAAU,gBACT,uDACE,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiE,SAAS,IAAIA,SAAS,CAACrC,MAAV,GAAmB,CAAhC,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGqC,SAAS,CAAC/B,GAAV,CAAc,UAAC+C,QAAD,EAAWvC,KAAX;AAAA,0BACb,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGuC,QAAQ,CAACjE,IAAT,KAAkB,IAAlB,gBACC,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAA2B,QAAA,GAAG,EAAEiE,QAAQ,CAAC1B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAE0B,QAAQ,CAAC/B,QADrB;AAEE,QAAA,IAAI,EAAE+B,QAFR;AAGE,QAAA,IAAI,EAAEA,QAAQ,CAAClC,IAHjB;AAIE,QAAA,OAAO,EAAEkC,QAAQ,CAAC7B,WAJpB;AAKE,QAAA,QAAQ,EAAE6B,QAAQ,CAACzB,YALrB;AAME,QAAA,UAAU,EAAEyB,QAAQ,CAACC,OANvB;AAOE,QAAA,MAAM,EAAED,QAAQ,CAAC3B,MAPnB;AAQE,QAAA,YAAY,EAAE2B,QAAQ,CAACxB,YARzB;AASE,QAAA,cAAc,EAAEwB,QAAQ,CAACvB,cAT3B;AAUE,QAAA,eAAe,EAAEuB,QAAQ,CAACtB,eAV5B;AAWE,QAAA,MAAM,EAAEsB,QAAQ,CAACjE,IAXnB;AAYE,QAAA,KAAK,EAAEiE,QAAQ,CAACpB,eAZlB;AAaE,QAAA,MAAM,EAAEoB,QAAQ,CAAC1B,EAbnB;AAcE,QAAA,KAAK,EAAE0B,QAAQ,CAACnB,KAdlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,GAoBG,IArBN,CADa;AAAA,KAAd,CADH,CADD,gBA4BG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BN,CADF,CADS,gBAkCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtD,WAAW,IAAIA,WAAW,CAACoB,MAAZ,GAAqB,CAApC,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAEpB,WADR,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAOG,IARN,CA1CJ,CAPF,CAJJ,CADoB;AAAA,GAArB,CAJH,MADF,CADD,GAgFG,IAjFN,CALF,CADF;AA2FD,CAlUD;;AAoUA,eAAehB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb, Tabs, Skeleton, Empty, Row, Col } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getAllAvailableRoomLeadClientsList,\r\n  listAllAvailableRoomLeadClients,\r\n  setLeadClientListLoading,\r\n} from \"../../../redux/actions/lead-client-actions\";\r\nimport { roomTypesOptions } from \"../../../constants/defaultValues\";\r\nimport CardViewRoom from \"./CardViewRoom\";\r\nimport FilterViewRoom from \"./FilterViewRoom\";\r\nimport MapViewRoom from \"./MapViewRoom\";\r\nimport leadClientApi from \"../../../redux/api/lead-client-api\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ListRoom = () => {\r\n  const dispatch = useDispatch();\r\n  const roomList = useSelector(\r\n    (state) => state.leadClient.leadClientAvailableRoomList\r\n  );\r\n  const loading = useSelector(\r\n    (state) => state.leadClient.leadClientListLoading\r\n  );\r\n  const [switchView, setSwitchView] = useState(true);\r\n  const [filterDropdownValue, setFilterDropdownValue] = useState(\"\");\r\n  const [availabilityValue, setAvailabilityValue] = useState(\"\");\r\n  const [roomType, setRoomType] = useState('private_room');\r\n  const [leadsConfig, setLeadsConfig] = useState([]);\r\n  const [filterValue, setFilterValue] = useState({\r\n    room_type: \"private_room\",\r\n    housing_type: \"\",\r\n    availability: \"\"\r\n  });\r\n  const [listFilter, setListFilter] = useState({\r\n    leads: {\r\n      home: {\r\n        rooms: {\r\n          _filter: {\r\n            availability: { _neq: \"no\" },\r\n            type: { _eq: roomType },\r\n            status: { _eq: \"published\" }\r\n          }\r\n        }\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'RESET'\r\n    })\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      getAllAvailableRoomList();\r\n    }\r\n    return () => {\r\n      console.log(\"Lead ClientList Unmounting\");\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (roomList.length) {\r\n      homebudget(roomList[0].leads);\r\n    }\r\n\r\n  }, [roomList]);\r\n\r\n  const getMaxRoomCost = (rooms) => {\r\n    if (rooms.length) {\r\n      return Math.max.apply(\r\n        null,\r\n        rooms.length\r\n          ? rooms.map(function (room) {\r\n            return room.base_rate ? room.base_rate : 0;\r\n          })\r\n          : [0]\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getMinRoomCost = (rooms) => {\r\n    if (rooms.length) {\r\n      return Math.min.apply(\r\n        null,\r\n        rooms.map(function (room) {\r\n          return room.base_rate ? room.base_rate : 0;\r\n        })\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const homebudget = (list) => {\r\n    list.forEach((Item, index) => {\r\n      if (Item.home !== null) {\r\n        Item.max_budget = getMaxRoomCost(Item.home.rooms);\r\n        Item.min_budget = getMinRoomCost(Item.home.rooms);\r\n      }\r\n    });\r\n    setLeadsConfig(list);\r\n  };\r\n\r\n  const getAllAvailableRoomList = async () => {\r\n\r\n    // let data = await leadClientApi.getRoomListing({ ...ss, fields: [\"*\", \"leads.*\", \"leads.home.*\", \"leads.home.rooms.*\"], })\r\n    dispatch(\r\n      getAllAvailableRoomLeadClientsList({ ...filterValue, fields: [\"*\", \"leads.*\", \"leads.home.*\", \"leads.home.rooms.*\"], })\r\n    );\r\n  }\r\n\r\n  function roomsCollection() {\r\n    let rooms = [];\r\n    if (roomList.length > 0) {\r\n      leadsConfig.map(function (lead) {\r\n        if (lead.home !== null && lead.approval === \"accepted\") {\r\n          lead.home.rooms.forEach((room) => {\r\n            if (room.status !== \"draft\" && room.availability !== null && room.type == roomType) {\r\n              if (room.availability != \"no\") {\r\n                let data = {\r\n                  ...room,\r\n                  homeName: lead.home.name,\r\n                  lead: lead,\r\n                  homeAddress: lead.home.address_line_1,\r\n                  leadId: lead.id,\r\n                  leadApproval: lead.approval,\r\n                  leadClientId: roomList[0].id,\r\n                  leadClientName: roomList[0].name,\r\n                  leadClientPhone: roomList[0].cell,\r\n                  leadClientRooms: lead.home.rooms,\r\n                  liked: lead.is_liked,\r\n                };\r\n                rooms.push(data);\r\n              }\r\n\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return rooms;\r\n  }\r\n\r\n  const roomsData = roomsCollection();\r\n\r\n  function callback(key) {\r\n    // setListFilter({\r\n    //   leads: {\r\n    //     home: {\r\n    //       rooms: {\r\n    //         _filter: {\r\n    //           availability: { _neq: \"no\" },\r\n    //           type: { _eq: key },\r\n    //           status: { _eq: \"published\" }\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   },\r\n    // }\r\n    // )\r\n    setFilterValue((values) => {\r\n      return {\r\n        ...values,\r\n        room_type: key\r\n      }\r\n    });\r\n    setRoomType(key);\r\n    setFilterDropdownValue('');\r\n    dispatch(setLeadClientListLoading(true));\r\n  }\r\n\r\n\r\n\r\n  function onListingFilterChange(filteredValue) {\r\n    // setListFilter({\r\n    //   leads: {\r\n    //     home: {\r\n    //       _filter: {\r\n    //         care_offered: { _contains: filteredValue },\r\n    //       },\r\n    //       // care_offered: { _contains: filteredValue },\r\n    //       rooms: {\r\n    //         _filter: {\r\n    //           availability: { _neq: \"no\" },\r\n    //           type: { _eq: roomType },\r\n    //           status: { _eq: \"published\" }\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   },\r\n    // }\r\n    // )\r\n    setFilterValue((values) => {\r\n      return {\r\n        ...values,\r\n        housing_type: filteredValue\r\n      }\r\n    });\r\n    setFilterDropdownValue(filteredValue);\r\n    dispatch(setLeadClientListLoading(true));\r\n    // const filterValue = filteredValue\r\n    //   ? {\r\n    //     home: { care_offered: { _contains: filteredValue } },\r\n    //   }\r\n    //   : {};\r\n    // setListFilter(filterValue);\r\n    // setFilterDropdownValue(filteredValue);\r\n    // dispatch(setLeadListLoading(true));\r\n  }\r\n\r\n  const switchViewHandler = (value) => {\r\n    setSwitchView(value);\r\n  }\r\n\r\n  const handleRateChange = (value) => {\r\n    if (value == \"low_to_high\") {\r\n      let NewHomes = leadsConfig.sort(function (a, b) {\r\n        return a.min_budget - b.min_budget;\r\n      });\r\n      setLeadsConfig([...NewHomes]);\r\n    }\r\n    if (value == \"high_to_low\") {\r\n      let NewHomes = leadsConfig.sort(function (a, b) {\r\n        return b.max_budget - a.max_budget;\r\n      });\r\n      setLeadsConfig([...NewHomes]);\r\n    }\r\n  }\r\n\r\n  const handleAvailabilityChange = async (value) => {\r\n    setFilterValue((values) => {\r\n      return {\r\n        ...values,\r\n        availability: value\r\n      }\r\n    });\r\n    setAvailabilityValue(value);\r\n    dispatch(setLeadClientListLoading(true));\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>Available Rooms</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div>\r\n        {roomTypesOptions && roomTypesOptions.length > 0 ? (\r\n          <React.Fragment>\r\n            <Tabs\r\n              defaultActiveKey={roomTypesOptions[0].value}\r\n              onChange={callback}\r\n            >\r\n              {roomTypesOptions.map((item) => (\r\n                <TabPane tab={item.text} key={item.value}>\r\n                  {loading ? (\r\n                    <Skeleton />\r\n                  ) : (\r\n                    <div\r\n                    // style={{\r\n                    //   display: \"flex\",\r\n                    //   justifyContent: \"flex-start\",\r\n                    //   flexWrap: \"wrap\",\r\n                    // }}\r\n                    >\r\n                      <React.Fragment>\r\n                        <FilterViewRoom onSetSwitchView={switchViewHandler}\r\n                          defaultSwitchView={switchView}\r\n                          availabilityValue={availabilityValue}\r\n                          handleAvailabilityChange={handleAvailabilityChange}\r\n                          listFilterChange={onListingFilterChange}\r\n                          defaultFilterListValue={filterDropdownValue}\r\n                          handleRateChange={handleRateChange} />\r\n                        {switchView ?\r\n                          <>\r\n                            <Row gutter={16}>\r\n                              {roomsData && roomsData.length > 0 ? (\r\n                                <React.Fragment>\r\n                                  {roomsData.map((roomItem, index) => (\r\n                                    <React.Fragment key={index}>\r\n                                      {roomItem.home !== null ? (\r\n                                        <Col xs={24} md={8} lg={6} key={roomItem.id}>\r\n                                          <CardViewRoom\r\n                                            homeName={roomItem.homeName}\r\n                                            room={roomItem}\r\n                                            lead={roomItem.lead}\r\n                                            address={roomItem.homeAddress}\r\n                                            approval={roomItem.leadApproval}\r\n                                            coverImage={roomItem.profile}\r\n                                            leadID={roomItem.leadId}\r\n                                            leadClientId={roomItem.leadClientId}\r\n                                            leadClientName={roomItem.leadClientName}\r\n                                            leadClientPhone={roomItem.leadClientPhone}\r\n                                            homeID={roomItem.home}\r\n                                            rooms={roomItem.leadClientRooms}\r\n                                            rommId={roomItem.id}\r\n                                            liked={roomItem.liked}\r\n                                          />\r\n                                        </Col>\r\n\r\n                                      ) : null}\r\n                                    </React.Fragment>\r\n                                  ))}\r\n                                </React.Fragment>\r\n                              ) : <Empty />}\r\n                            </Row>\r\n                          </> :\r\n                          <div>\r\n                            {leadsConfig && leadsConfig.length > 0 ? (\r\n                              <React.Fragment>\r\n                                <MapViewRoom\r\n                                  lead={leadsConfig}\r\n                                // approvalType={approvalState}\r\n                                />\r\n                              </React.Fragment>\r\n                            ) : null}\r\n                          </div>}\r\n\r\n                      </React.Fragment>\r\n\r\n                    </div>\r\n                  )}\r\n                </TabPane>\r\n              ))}\r\n              ;\r\n            </Tabs>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ListRoom;\r\n"]},"metadata":{},"sourceType":"module"}
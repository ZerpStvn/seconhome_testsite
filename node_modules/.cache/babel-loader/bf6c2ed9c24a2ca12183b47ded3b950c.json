{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\client\\\\favorite\\\\ListFavorite.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Breadcrumb, Tabs, Skeleton, Empty } from \"antd\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { listAllLikedLeadClients, setLeadClientListLoading as _setLeadClientListLoading } from \"../../../redux/actions/lead-client-actions\";\nimport { listAll as _listAll } from \"../../../redux/actions/home-actions\";\nimport DisplayCard from \"./DisplayCard\";\nimport FilterViewFavorite from \"./FilterViewFavorite\";\nimport MapViewCommunity from \"../community/MapViewCommunity\";\nimport CardViewRoom from \"../room/CardViewRoom\";\nimport HomeDisplayCard from \"./HomeDisplayCard\";\nimport userService from \"../../../services/user-service\";\nvar TabPane = Tabs.TabPane;\n\nvar ListFavorite = function ListFavorite(_ref) {\n  var homeList = _ref.homeList,\n      leadClientLikedList = _ref.leadClientLikedList,\n      leadClientListLoading = _ref.leadClientListLoading,\n      currentLoggedInUser = _ref.currentLoggedInUser;\n  var currentUser = userService.getLoggedInUser();\n  var dispatch = useDispatch();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchView = _useState2[0],\n      setSwitchView = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      leadsConfig = _useState4[0],\n      setLeadsConfig = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tabValue = _useState6[0],\n      setTabValue = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterDropdownValue = _useState8[0],\n      setFilterDropdownValue = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      homeListConfig = _useState12[0],\n      setHomeListConfig = _useState12[1];\n\n  var _useState13 = useState({\n    is_liked: {\n      _eq: true\n    },\n    user_updated: {\n      _eq: currentUser.id\n    }\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      homeFilter = _useState14[0],\n      setHomeFilter = _useState14[1];\n\n  var _useState15 = useState({\n    leads: {\n      _filter: {\n        is_liked: {\n          _eq: true\n        },\n        _or: [{\n          approval: {\n            _eq: \"accepted\"\n          }\n        }, {\n          approval: {\n            _eq: \"pending\"\n          }\n        }]\n      }\n    }\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      listFilter = _useState16[0],\n      setListFilter = _useState16[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'RESET'\n    });\n  }, []);\n  useEffect(function () {\n    // dispatch(setLeadClientListLoading(true));\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!loading) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return getLeadClientLikedList();\n\n            case 3:\n              _context.next = 5;\n              return getAllHomes();\n\n            case 5:\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      console.log(\"Lead ClientList Unmounting\");\n    };\n  }, [loading]);\n\n  var getAllHomes = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return new Promise( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return dispatch(_listAll({\n                            fields: \"*,rooms.*\",\n                            filter: homeFilter\n                          }));\n\n                        case 2:\n                          resolve();\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getAllHomes() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getLeadClientLikedList = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return new Promise( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resolve) {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return dispatch(listAllLikedLeadClients({\n                            fields: \"*,leads.*,leads.home.*,leads.home.rooms.*\",\n                            deep: listFilter\n                          }));\n\n                        case 2:\n                          resolve();\n\n                        case 3:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x2) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 2:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getLeadClientLikedList() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (leadClientLikedList.length > 0) {\n      homeLeadbudget(leadClientLikedList[0].leads);\n    }\n  }, [leadClientLikedList]);\n  useEffect(function () {\n    if (homeList.length > 0) {\n      homebudget(homeList);\n    }\n  }, [homeList]);\n\n  var getMaxRoomCost = function getMaxRoomCost(rooms) {\n    if (rooms.length) {\n      return Math.max.apply(null, rooms.length ? rooms.map(function (room) {\n        return room.base_rate ? room.base_rate : 0;\n      }) : [0]);\n    } else {\n      return 0;\n    }\n  };\n\n  var getMinRoomCost = function getMinRoomCost(rooms) {\n    if (rooms.length) {\n      return Math.min.apply(null, rooms.map(function (room) {\n        return room.base_rate ? room.base_rate : 0;\n      }));\n    } else {\n      return 0;\n    }\n  };\n\n  var loadingTrue = function loadingTrue() {\n    setLoading(true);\n  };\n\n  var homeLeadbudget = function homeLeadbudget(list) {\n    list.forEach(function (Item, index) {\n      if (Item.home) {\n        Item.max_budget = getMaxRoomCost(Item.home.rooms);\n        Item.min_budget = getMinRoomCost(Item.home.rooms);\n      }\n    });\n    setLeadsConfig(list);\n  };\n\n  var homebudget = function homebudget(list) {\n    list.forEach(function (Item, index) {\n      Item.max_budget = getMaxRoomCost(Item.rooms);\n      Item.min_budget = getMinRoomCost(Item.rooms);\n    });\n    setHomeListConfig(list);\n  };\n\n  function callback(key) {\n    setFilterDropdownValue(\"\");\n\n    switch (key) {\n      case \"communities\":\n        setListFilter({\n          leads: {\n            _filter: {\n              is_liked: {\n                _eq: true\n              },\n              _or: [{\n                approval: {\n                  _eq: \"accepted\"\n                }\n              }, {\n                approval: {\n                  _eq: \"pending\"\n                }\n              }]\n            }\n          }\n        });\n        setHomeFilter({\n          is_liked: {\n            _eq: true\n          },\n          user_updated: {\n            _eq: currentUser.id\n          }\n        });\n        setTabValue(true);\n        break;\n\n      case \"rooms\":\n        setListFilter({\n          leads: {\n            _filter: {\n              is_liked: {\n                _eq: true\n              },\n              _or: [{\n                approval: {\n                  _eq: \"accepted\"\n                }\n              }, {\n                approval: {\n                  _eq: \"pending\"\n                }\n              }]\n            }\n          }\n        });\n        setTabValue(true);\n        break;\n\n      case \"disliked\":\n        setListFilter({\n          leads: {\n            _filter: {\n              is_liked: {\n                _eq: false\n              },\n              _or: [{\n                approval: {\n                  _eq: \"accepted\"\n                }\n              }, {\n                approval: {\n                  _eq: \"pending\"\n                }\n              }]\n            }\n          }\n        });\n        setHomeFilter({\n          is_liked: {\n            _eq: false\n          },\n          user_updated: {\n            _eq: currentUser.id\n          }\n        });\n        setTabValue(false);\n        break;\n\n      default:\n        break;\n    } // dispatch(setLeadClientListLoading(true));\n\n\n    setLoading(true);\n  }\n\n  function switchViewHandler(value) {\n    setSwitchView(value);\n  }\n\n  function onListingFilterChange(filteredValue) {\n    var filterValue = filteredValue ? {\n      leads: {\n        _filter: {\n          _and: [{\n            is_liked: {\n              _eq: tabValue\n            }\n          }, {\n            home: {\n              care_offered: {\n                _contains: filteredValue\n              }\n            }\n          }]\n        }\n      }\n    } : {\n      leads: {\n        _filter: {\n          is_liked: {\n            _eq: tabValue\n          }\n        }\n      }\n    };\n    var filterHomeValue = filteredValue ? {\n      is_liked: {\n        _eq: tabValue\n      },\n      user_updated: {\n        _eq: currentUser.id\n      },\n      care_offered: {\n        _contains: filteredValue\n      }\n    } : {\n      is_liked: {\n        _eq: true\n      },\n      user_updated: {\n        _eq: currentUser.id\n      }\n    };\n    setHomeFilter(filterHomeValue);\n    setListFilter(filterValue);\n    setFilterDropdownValue(filteredValue); // dispatch(setLeadClientListLoading(true));\n\n    setLoading(true);\n  }\n\n  function roomsCollection() {\n    var rooms = [];\n\n    if (leadClientLikedList.length > 0) {\n      leadClientLikedList[0].leads.map(function (lead) {\n        if (lead && lead.home !== null) {\n          lead.home.rooms.forEach(function (room) {\n            if (room.status == \"published\") {\n              console.log(room, \"room\");\n\n              var data = _objectSpread({}, room, {\n                status: room.status,\n                community: room.community,\n                homeName: lead.home.name,\n                homeAddress: lead.home.address_line_1,\n                leadId: lead.id,\n                leadApproval: lead.approval,\n                leadClientId: leadClientLikedList[0].id,\n                leadClientName: leadClientLikedList[0].name,\n                leadClientPhone: leadClientLikedList[0].cell,\n                leadClientRooms: lead.home.rooms,\n                liked: lead.is_liked,\n                notes: lead.notes,\n                lead: lead\n              });\n\n              rooms.push(data);\n            }\n          });\n        }\n      });\n    }\n\n    return rooms;\n  }\n\n  var roomsData = roomsCollection();\n\n  var handleRateChange = function handleRateChange(value) {\n    if (value == \"low_to_high\") {\n      var NewLeadHomes = leadsConfig.sort(function (a, b) {\n        return a.min_budget - b.min_budget;\n      });\n      setLeadsConfig(_toConsumableArray(NewLeadHomes));\n      var NewHomes = homeListConfig.sort(function (a, b) {\n        return a.min_budget - b.min_budget;\n      });\n      setHomeListConfig(_toConsumableArray(NewHomes));\n    }\n\n    if (value == \"high_to_low\") {\n      var _NewLeadHomes = leadsConfig.sort(function (a, b) {\n        return b.max_budget - a.max_budget;\n      });\n\n      setLeadsConfig(_toConsumableArray(_NewLeadHomes));\n\n      var _NewHomes = homeListConfig.sort(function (a, b) {\n        return b.max_budget - a.max_budget;\n      });\n\n      setHomeListConfig(_toConsumableArray(_NewHomes));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, \"My Favorites\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"communities\",\n    onChange: callback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"COMMUNITIES\",\n    key: \"communities\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FilterViewFavorite, {\n    onSetSwitchView: switchViewHandler,\n    defaultSwitchView: switchView,\n    listFilterChange: onListingFilterChange,\n    defaultFilterListValue: filterDropdownValue,\n    handleRateChange: handleRateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }), switchView ? /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, homeListConfig.length == 0 && leadsConfig.length == 0 ? /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 78\n    }\n  }) : \"\", leadClientLikedList && leadClientLikedList.length > 0 ? leadClientLikedList.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, leadsConfig.length > 0 ? leadsConfig.map(function (lead) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, lead && lead.home !== null && /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        md: 8,\n        lg: 8,\n        key: lead.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(DisplayCard, {\n        leadClientId: item.id,\n        leadClientName: item.name,\n        leadClientPhone: item.cell,\n        lead: lead,\n        homeID: lead.home.id,\n        home: lead.home,\n        name: lead.home.name,\n        address: lead.home.address_line_1,\n        approval: lead.approval,\n        coverImage: lead.home.image && lead.home.image,\n        liked: lead.is_liked,\n        notes: lead.notes,\n        rooms: lead.home.rooms,\n        loadingTrue: loadingTrue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 37\n        }\n      }))) // )) : <Empty />}\n      ;\n    }) : \"\");\n  }) // : <Empty />}\n  :\n  /*#__PURE__*/\n  React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }), homeListConfig.length > 0 ? homeListConfig.map(function (home, index) {\n    return /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      md: 8,\n      lg: 8,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(HomeDisplayCard, {\n      homeID: home.id,\n      home: home,\n      name: home.name,\n      address: home.address_line_1,\n      coverImage: home.image && home.image,\n      liked: home.is_liked,\n      rooms: home.rooms,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }));\n  }) : \"\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, leadClientLikedList && leadClientLikedList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MapViewCommunity, {\n    lead: leadsConfig,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"ROOMS\",\n    key: \"rooms\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, roomsData && roomsData.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 19\n    }\n  }, roomsData.map(function (roomItem, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }, roomItem.home !== null ? /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      md: 8,\n      lg: 8,\n      key: roomItem.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(CardViewRoom, {\n      roomName: roomItem.name,\n      lead: roomItem.lead,\n      roomPrice: roomItem.base_rate // name={roomItem.homeName}\n      ,\n      name: roomItem.type,\n      address: roomItem.homeAddress,\n      approval: roomItem.leadApproval,\n      coverImage: roomItem.profile,\n      leadID: roomItem.leadId,\n      notes: roomItem.notes,\n      leadClientId: roomItem.leadClientId,\n      leadClientName: roomItem.leadClientName,\n      leadClientPhone: roomItem.leadClientPhone,\n      homeID: roomItem.home,\n      room: roomItem,\n      rooms: roomItem.leadClientRooms,\n      roomId: roomItem.id,\n      liked: roomItem.liked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 29\n      }\n    })) : null);\n  })) : /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"DISLIKED\",\n    key: \"disliked\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FilterViewFavorite, {\n    onSetSwitchView: switchViewHandler,\n    defaultSwitchView: switchView,\n    listFilterChange: onListingFilterChange,\n    defaultFilterListValue: filterDropdownValue,\n    handleRateChange: handleRateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }), switchView ? /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }, homeListConfig.length == 0 && leadsConfig.length == 0 ? /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 78\n    }\n  }) : \"\", leadClientLikedList && leadClientLikedList.length > 0 ? leadClientLikedList.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 25\n      }\n    }, leadsConfig.length > 0 ? leadsConfig.map(function (lead) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, lead && lead.home !== null && /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        md: 8,\n        lg: 8,\n        key: lead.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(DisplayCard, {\n        leadClientId: item.id,\n        leadClientName: item.name,\n        leadClientPhone: item.cell,\n        lead: lead,\n        homeID: lead.home.id,\n        home: lead.home,\n        name: lead.home.name,\n        address: lead.home.address_line_1,\n        approval: lead.approval,\n        coverImage: lead.home.image && lead.home.image,\n        liked: lead.is_liked,\n        notes: lead.notes,\n        rooms: lead.home.rooms,\n        loadingTrue: loadingTrue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 37\n        }\n      })));\n    }) : /*#__PURE__*/React.createElement(Empty, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 34\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }), homeListConfig.length > 0 ? homeListConfig.map(function (home, index) {\n    return /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      md: 8,\n      lg: 8,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(HomeDisplayCard, {\n      homeID: home.id,\n      home: home,\n      name: home.name,\n      address: home.address_line_1,\n      coverImage: home.image && home.image,\n      liked: home.is_liked,\n      rooms: home.rooms,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 29\n      }\n    }));\n  }) : \"\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 19\n    }\n  }, leadClientLikedList && leadClientLikedList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MapViewCommunity, {\n    lead: leadsConfig,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Empty, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  })))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    homeList: state.home.homeList,\n    leadClientLikedList: state.leadClient.leadClientLikedList,\n    leadClientListLoading: state.leadClient.leadClientListLoading,\n    currentLoggedInUser: state.user.currentLoggedInUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllLeadClients: function listAllLeadClients() {\n      return dispatch(listAllLikedLeadClients());\n    },\n    listAll: function listAll() {\n      return dispatch(_listAll());\n    },\n    setLeadClientListLoading: function setLeadClientListLoading() {\n      return dispatch(_setLeadClientListLoading());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFavorite);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/client/favorite/ListFavorite.js"],"names":["React","useState","useEffect","Row","Col","Breadcrumb","Tabs","Skeleton","Empty","connect","useDispatch","listAllLikedLeadClients","setLeadClientListLoading","listAll","DisplayCard","FilterViewFavorite","MapViewCommunity","CardViewRoom","HomeDisplayCard","userService","TabPane","ListFavorite","homeList","leadClientLikedList","leadClientListLoading","currentLoggedInUser","currentUser","getLoggedInUser","dispatch","switchView","setSwitchView","leadsConfig","setLeadsConfig","tabValue","setTabValue","filterDropdownValue","setFilterDropdownValue","loading","setLoading","homeListConfig","setHomeListConfig","is_liked","_eq","user_updated","id","homeFilter","setHomeFilter","leads","_filter","_or","approval","listFilter","setListFilter","type","getLeadClientLikedList","getAllHomes","console","log","Promise","resolve","fields","filter","deep","length","homeLeadbudget","homebudget","getMaxRoomCost","rooms","Math","max","apply","map","room","base_rate","getMinRoomCost","min","loadingTrue","list","forEach","Item","index","home","max_budget","min_budget","callback","key","switchViewHandler","value","onListingFilterChange","filteredValue","filterValue","_and","care_offered","_contains","filterHomeValue","roomsCollection","lead","status","data","community","homeName","name","homeAddress","address_line_1","leadId","leadApproval","leadClientId","leadClientName","leadClientPhone","cell","leadClientRooms","liked","notes","push","roomsData","handleRateChange","NewLeadHomes","sort","a","b","NewHomes","item","image","roomItem","profile","mapStateToProps","state","leadClient","user","mapDispatchToProps","listAllLeadClients"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Breadcrumb, Tabs, Skeleton, Empty } from \"antd\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { listAllLikedLeadClients, setLeadClientListLoading, } from \"../../../redux/actions/lead-client-actions\";\r\nimport { listAll } from \"../../../redux/actions/home-actions\";\r\nimport DisplayCard from \"./DisplayCard\";\r\nimport FilterViewFavorite from \"./FilterViewFavorite\";\r\nimport MapViewCommunity from \"../community/MapViewCommunity\";\r\nimport CardViewRoom from \"../room/CardViewRoom\";\r\nimport HomeDisplayCard from \"./HomeDisplayCard\";\r\nimport userService from \"../../../services/user-service\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ListFavorite = ({ homeList, leadClientLikedList, leadClientListLoading, currentLoggedInUser }) => {\r\n  const currentUser = userService.getLoggedInUser();\r\n  const dispatch = useDispatch();\r\n  const [switchView, setSwitchView] = useState(true);\r\n  const [leadsConfig, setLeadsConfig] = useState([]);\r\n  const [tabValue, setTabValue] = useState(true);\r\n  const [filterDropdownValue, setFilterDropdownValue] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [homeListConfig, setHomeListConfig] = useState([]);\r\n  const [homeFilter, setHomeFilter] = useState({\r\n    is_liked: { _eq: true },\r\n    user_updated: { _eq: currentUser.id }\r\n  });\r\n  const [listFilter, setListFilter] = useState({\r\n    leads: { _filter: { is_liked: { _eq: true }, _or: [{ approval: { _eq: \"accepted\" } }, { approval: { _eq: \"pending\" } }] } },\r\n  });\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'RESET'\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // dispatch(setLeadClientListLoading(true));\r\n    (async () => {\r\n      if (loading) {\r\n        await getLeadClientLikedList();\r\n        await getAllHomes();\r\n        setLoading(false)\r\n      }\r\n    })()\r\n    return () => {\r\n      console.log(\"Lead ClientList Unmounting\");\r\n    };\r\n  }, [loading]);\r\n\r\n\r\n\r\n  const getAllHomes = async () => {\r\n    return await new Promise(async (resolve) => {\r\n      await dispatch(listAll({\r\n        fields: \"*,rooms.*\",\r\n        filter: homeFilter\r\n      }))\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  const getLeadClientLikedList = async () => {\r\n    return await new Promise(async (resolve) => {\r\n      await dispatch(\r\n        listAllLikedLeadClients({\r\n          fields: \"*,leads.*,leads.home.*,leads.home.rooms.*\",\r\n          deep: listFilter,\r\n        })\r\n      );\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (leadClientLikedList.length > 0) {\r\n      homeLeadbudget(leadClientLikedList[0].leads);\r\n    }\r\n  }, [leadClientLikedList]);\r\n\r\n  useEffect(() => {\r\n    if (homeList.length > 0) {\r\n      homebudget(homeList);\r\n    }\r\n  }, [homeList]);\r\n\r\n  const getMaxRoomCost = (rooms) => {\r\n    if (rooms.length) {\r\n      return Math.max.apply(\r\n        null,\r\n        rooms.length\r\n          ? rooms.map(function (room) {\r\n            return room.base_rate ? room.base_rate : 0;\r\n          })\r\n          : [0]\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getMinRoomCost = (rooms) => {\r\n    if (rooms.length) {\r\n      return Math.min.apply(\r\n        null,\r\n        rooms.map(function (room) {\r\n          return room.base_rate ? room.base_rate : 0;\r\n        })\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const loadingTrue = () => {\r\n    setLoading(true);\r\n  }\r\n\r\n  const homeLeadbudget = (list) => {\r\n    list.forEach((Item, index) => {\r\n      if (Item.home) {\r\n        Item.max_budget = getMaxRoomCost(Item.home.rooms);\r\n        Item.min_budget = getMinRoomCost(Item.home.rooms);\r\n      }\r\n\r\n    });\r\n    setLeadsConfig(list);\r\n  };\r\n\r\n  const homebudget = (list) => {\r\n    list.forEach((Item, index) => {\r\n      Item.max_budget = getMaxRoomCost(Item.rooms);\r\n      Item.min_budget = getMinRoomCost(Item.rooms);\r\n    });\r\n    setHomeListConfig(list);\r\n  };\r\n\r\n  function callback(key) {\r\n    setFilterDropdownValue(\"\");\r\n    switch (key) {\r\n      case \"communities\":\r\n        setListFilter({\r\n          leads: { _filter: { is_liked: { _eq: true }, _or: [{ approval: { _eq: \"accepted\" } }, { approval: { _eq: \"pending\" } }] } },\r\n        });\r\n        setHomeFilter({\r\n          is_liked: { _eq: true },\r\n          user_updated: { _eq: currentUser.id }\r\n        })\r\n        setTabValue(true);\r\n        break;\r\n      case \"rooms\":\r\n        setListFilter({\r\n          leads: { _filter: { is_liked: { _eq: true }, _or: [{ approval: { _eq: \"accepted\" } }, { approval: { _eq: \"pending\" } }] } },\r\n        });\r\n        setTabValue(true);\r\n        break;\r\n      case \"disliked\":\r\n        setListFilter({\r\n          leads: { _filter: { is_liked: { _eq: false }, _or: [{ approval: { _eq: \"accepted\" } }, { approval: { _eq: \"pending\" } }] } },\r\n        });\r\n        setHomeFilter({\r\n          is_liked: { _eq: false },\r\n          user_updated: { _eq: currentUser.id }\r\n        })\r\n        setTabValue(false);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    // dispatch(setLeadClientListLoading(true));\r\n    setLoading(true);\r\n  }\r\n\r\n  function switchViewHandler(value) {\r\n    setSwitchView(value);\r\n  }\r\n\r\n  function onListingFilterChange(filteredValue) {\r\n    const filterValue = filteredValue\r\n      ? {\r\n        leads: {\r\n          _filter: {\r\n            _and: [\r\n              { is_liked: { _eq: tabValue }, },\r\n              { home: { care_offered: { _contains: filteredValue } } },\r\n            ],\r\n          },\r\n        },\r\n      }\r\n      : { leads: { _filter: { is_liked: { _eq: tabValue } } } };\r\n\r\n    let filterHomeValue = filteredValue ?\r\n      {\r\n        is_liked: { _eq: tabValue },\r\n        user_updated: { _eq: currentUser.id },\r\n        care_offered: { _contains: filteredValue }\r\n      } :\r\n      {\r\n        is_liked: { _eq: true },\r\n        user_updated: { _eq: currentUser.id }\r\n      }\r\n\r\n    setHomeFilter(filterHomeValue);\r\n    setListFilter(filterValue);\r\n    setFilterDropdownValue(filteredValue);\r\n    // dispatch(setLeadClientListLoading(true));\r\n    setLoading(true);\r\n  }\r\n\r\n  function roomsCollection() {\r\n    let rooms = [];\r\n    if (leadClientLikedList.length > 0) {\r\n      leadClientLikedList[0].leads.map(function (lead) {\r\n        if (lead && lead.home !== null) {\r\n          lead.home.rooms.forEach((room) => {\r\n            if (room.status == \"published\") {\r\n              console.log(room, \"room\");\r\n              let data = {\r\n                ...room,\r\n                status: room.status,\r\n                community: room.community,\r\n                homeName: lead.home.name,\r\n                homeAddress: lead.home.address_line_1,\r\n                leadId: lead.id,\r\n                leadApproval: lead.approval,\r\n                leadClientId: leadClientLikedList[0].id,\r\n                leadClientName: leadClientLikedList[0].name,\r\n                leadClientPhone: leadClientLikedList[0].cell,\r\n                leadClientRooms: lead.home.rooms,\r\n                liked: lead.is_liked,\r\n                notes: lead.notes,\r\n                lead: lead\r\n              };\r\n              rooms.push(data);\r\n            }\r\n\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return rooms;\r\n  }\r\n\r\n  const roomsData = roomsCollection();\r\n\r\n  const handleRateChange = (value) => {\r\n    if (value == \"low_to_high\") {\r\n      let NewLeadHomes = leadsConfig.sort(function (a, b) {\r\n        return a.min_budget - b.min_budget;\r\n      });\r\n      setLeadsConfig([...NewLeadHomes]);\r\n      let NewHomes = homeListConfig.sort(function (a, b) {\r\n        return a.min_budget - b.min_budget;\r\n      });\r\n      setHomeListConfig([...NewHomes]);\r\n    }\r\n    if (value == \"high_to_low\") {\r\n      let NewLeadHomes = leadsConfig.sort(function (a, b) {\r\n        return b.max_budget - a.max_budget;\r\n      });\r\n      setLeadsConfig([...NewLeadHomes]);\r\n      let NewHomes = homeListConfig.sort(function (a, b) {\r\n        return b.max_budget - a.max_budget;\r\n      });\r\n      setHomeListConfig([...NewHomes]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>My Favorites</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div>\r\n        <Tabs defaultActiveKey=\"communities\" onChange={callback}>\r\n          <TabPane tab=\"COMMUNITIES\" key=\"communities\">\r\n            {loading ? (\r\n              <Skeleton />\r\n            ) : (\r\n              <React.Fragment>\r\n                <FilterViewFavorite\r\n                  onSetSwitchView={switchViewHandler}\r\n                  defaultSwitchView={switchView}\r\n                  listFilterChange={onListingFilterChange}\r\n                  defaultFilterListValue={filterDropdownValue}\r\n                  handleRateChange={handleRateChange}\r\n                />\r\n                {switchView ? (\r\n                  <Row gutter={16}>\r\n                    {homeListConfig.length == 0 && leadsConfig.length == 0 ? <Empty /> : \"\"}\r\n\r\n                    {leadClientLikedList && leadClientLikedList.length > 0\r\n                      ? leadClientLikedList.map((item, index) => (\r\n                        <React.Fragment key={index}>\r\n                          {leadsConfig.length > 0 ?\r\n                            leadsConfig.map((lead) => (\r\n                              <>\r\n                                {lead && lead.home !== null && (\r\n                                  <Col xs={24} md={8} lg={8} key={lead.id}>\r\n                                    <DisplayCard\r\n                                      leadClientId={item.id}\r\n                                      leadClientName={item.name}\r\n                                      leadClientPhone={item.cell}\r\n                                      lead={lead}\r\n                                      homeID={lead.home.id}\r\n                                      home={lead.home}\r\n                                      name={lead.home.name}\r\n                                      address={lead.home.address_line_1}\r\n                                      approval={lead.approval}\r\n                                      coverImage={\r\n                                        lead.home.image &&\r\n                                        lead.home.image\r\n                                      }\r\n                                      liked={lead.is_liked}\r\n                                      notes={lead.notes}\r\n                                      rooms={lead.home.rooms}\r\n                                      loadingTrue={loadingTrue}\r\n                                    />\r\n                                  </Col>\r\n                                )}\r\n                              </>\r\n                              // )) : <Empty />}\r\n                            )) : \"\"}\r\n                        </React.Fragment>\r\n                      ))\r\n                      // : <Empty />}\r\n                      : <Empty />}\r\n                    {homeListConfig.length > 0 ? (\r\n                      homeListConfig.map((home, index) => {\r\n                        return (\r\n                          <Col xs={24} md={8} lg={8} key={index}>\r\n                            <HomeDisplayCard\r\n                              homeID={home.id}\r\n                              home={home}\r\n                              name={home.name}\r\n                              address={home.address_line_1}\r\n                              coverImage={\r\n                                home.image &&\r\n                                home.image\r\n                              }\r\n                              liked={home.is_liked}\r\n                              rooms={home.rooms}\r\n                            />\r\n                          </Col>\r\n                        )\r\n\r\n\r\n                      })\r\n                    ) : \"\"}\r\n\r\n                  </Row>\r\n                ) : (\r\n                  <div>\r\n                    {leadClientLikedList && leadClientLikedList.length > 0 ? (\r\n                      <React.Fragment>\r\n                        <MapViewCommunity lead={leadsConfig} />\r\n                      </React.Fragment>\r\n                    ) : <Empty />}\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </TabPane>\r\n\r\n          <TabPane tab=\"ROOMS\" key=\"rooms\">\r\n            <Skeleton loading={loading}>\r\n              {/* <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              > */}\r\n              <Row gutter={16}>\r\n                {roomsData && roomsData.length > 0 ? (\r\n                  <React.Fragment>\r\n                    {roomsData.map((roomItem, index) => (\r\n\r\n                      <React.Fragment key={index}>\r\n\r\n                        {roomItem.home !== null ? (\r\n                          <Col xs={24} md={8} lg={8} key={roomItem.id}>\r\n                            {/* {roomItem.status} */}\r\n                            <CardViewRoom\r\n                              roomName={roomItem.name}\r\n                              lead={roomItem.lead}\r\n                              roomPrice={roomItem.base_rate}\r\n                              // name={roomItem.homeName}\r\n                              name={roomItem.type}\r\n                              address={roomItem.homeAddress}\r\n                              approval={roomItem.leadApproval}\r\n                              coverImage={roomItem.profile}\r\n                              leadID={roomItem.leadId}\r\n                              notes={roomItem.notes}\r\n                              leadClientId={roomItem.leadClientId}\r\n                              leadClientName={roomItem.leadClientName}\r\n                              leadClientPhone={roomItem.leadClientPhone}\r\n                              homeID={roomItem.home}\r\n                              room={roomItem}\r\n                              rooms={roomItem.leadClientRooms}\r\n                              roomId={roomItem.id}\r\n                              liked={roomItem.liked}\r\n                            />\r\n                          </Col>\r\n\r\n                        ) : null}\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </React.Fragment>\r\n                ) : <Empty />}\r\n              </Row>\r\n\r\n              {/* </div> */}\r\n            </Skeleton>\r\n\r\n          </TabPane>\r\n          <TabPane tab=\"DISLIKED\" key=\"disliked\">\r\n\r\n            {loading ? (\r\n              <Skeleton />\r\n            ) : (\r\n              <React.Fragment>\r\n                <FilterViewFavorite\r\n                  onSetSwitchView={switchViewHandler}\r\n                  defaultSwitchView={switchView}\r\n                  listFilterChange={onListingFilterChange}\r\n                  defaultFilterListValue={filterDropdownValue}\r\n                  handleRateChange={handleRateChange}\r\n                />\r\n                {switchView ? (\r\n                  <Row gutter={16}>\r\n                    {homeListConfig.length == 0 && leadsConfig.length == 0 ? <Empty /> : \"\"}\r\n\r\n                    {leadClientLikedList && leadClientLikedList.length > 0\r\n                      ? leadClientLikedList.map((item, index) => (\r\n                        <React.Fragment key={index}>\r\n\r\n                          {leadsConfig.length > 0 ?\r\n                            leadsConfig.map((lead) => (\r\n                              <>\r\n                                {lead && lead.home !== null && (\r\n                                  <Col xs={24} md={8} lg={8} key={lead.id}>\r\n                                    <DisplayCard\r\n                                      leadClientId={item.id}\r\n                                      leadClientName={item.name}\r\n                                      leadClientPhone={item.cell}\r\n                                      lead={lead}\r\n                                      homeID={lead.home.id}\r\n                                      home={lead.home}\r\n                                      name={lead.home.name}\r\n                                      address={lead.home.address_line_1}\r\n                                      approval={lead.approval}\r\n                                      coverImage={\r\n                                        lead.home.image &&\r\n                                        lead.home.image\r\n                                      }\r\n                                      liked={lead.is_liked}\r\n                                      notes={lead.notes}\r\n                                      rooms={lead.home.rooms}\r\n                                      loadingTrue={loadingTrue}\r\n                                    />\r\n                                  </Col>\r\n                                )}\r\n                              </>\r\n\r\n                            )) : <Empty />}\r\n                        </React.Fragment>\r\n                      ))\r\n                      : <Empty />}\r\n                    {homeListConfig.length > 0 ? (\r\n                      homeListConfig.map((home, index) => {\r\n                        return (\r\n                          <Col xs={24} md={8} lg={8} key={index}>\r\n                            <HomeDisplayCard\r\n                              homeID={home.id}\r\n                              home={home}\r\n                              name={home.name}\r\n                              address={home.address_line_1}\r\n                              coverImage={\r\n                                home.image &&\r\n                                home.image\r\n                              }\r\n                              liked={home.is_liked}\r\n                              rooms={home.rooms}\r\n                            />\r\n                          </Col>\r\n                        )\r\n\r\n\r\n                      })\r\n                    ) : \"\"}\r\n                  </Row>\r\n                ) : (\r\n                  <div>\r\n                    {leadClientLikedList && leadClientLikedList.length > 0 ? (\r\n                      <React.Fragment>\r\n                        <MapViewCommunity lead={leadsConfig} />\r\n                      </React.Fragment>\r\n                    ) : <Empty />}\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    homeList: state.home.homeList,\r\n    leadClientLikedList: state.leadClient.leadClientLikedList,\r\n    leadClientListLoading: state.leadClient.leadClientListLoading,\r\n    currentLoggedInUser: state.user.currentLoggedInUser,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllLeadClients: () => dispatch(listAllLikedLeadClients()),\r\n    listAll: () => dispatch(listAll()),\r\n    setLeadClientListLoading: () => dispatch(setLeadClientListLoading()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFavorite);\r\n"]},"metadata":{},"sourceType":"module"}
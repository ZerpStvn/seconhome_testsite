{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\partner-client-contact.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllLeads as _listAllLeads, updateLead as _updateLead, setLeadListLoading as _setLeadListLoading } from \"../../../redux/actions/lead-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Select, Form, Input, Popover, Tooltip } from \"antd\";\nimport { compose } from \"redux\";\nimport { DownOutlined, EditOutlined, FilterFilled, FilterOutlined, TagFilled } from '@ant-design/icons';\nimport { data } from \"jquery\";\nimport { leadApprovalOptions, leadStatusOptions } from \"../../../constants/defaultValues\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\nimport UserService from \"../../../services/user-service\";\nimport PartnerClientApproval from \"./partner-client-approval\";\nvar TextArea = Input.TextArea;\n\nvar PartnersClientContact = function PartnersClientContact(_ref) {\n  var leadList = _ref.leadList,\n      leadListLoading = _ref.leadListLoading,\n      leadMessage = _ref.leadMessage,\n      leadUpdated = _ref.leadUpdated,\n      leadListMeta = _ref.leadListMeta;\n  var user = UserService.getAdminUser();\n\n  var _useState = useState({\n    pageSize: 5,\n    current: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var _useState5 = useState({\n    \"home\": {\n      \"user_created\": {\n        \"_eq\": user.id\n      }\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var handelApprovalChange = function handelApprovalChange(values, leadId) {\n    dispatch(_updateLead(leadId, values));\n  };\n\n  useEffect(function () {\n    leadListLoading && dispatch(_listAllLeads({\n      fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"],\n      filter: filters\n    })); // leadListLoading && dispatch(listAllLeads({ fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"], filter: filters, sort, page: pagination.current, limit: pagination.pageSize, meta: \"*\" }));\n\n    leadListMeta && setPagination(_objectSpread({}, pagination, {\n      total: leadListMeta.filter_count\n    }));\n\n    if (leadUpdated) {\n      notifyUser(leadMessage, \"success\");\n    }\n\n    return function () {\n      console.log(\"Communities Unmounting\");\n    };\n  }, [leadUpdated, leadMessage, leadListLoading]);\n\n  var handelTableChange = function handelTableChange(_ref2, tableFilters, sorter) {\n    var current = _ref2.current;\n    console.log({\n      current: current\n    }, tableFilters, sorter);\n    console.log('clivk');\n    setPagination(function (values) {\n      return _objectSpread({}, values, {\n        current: current\n      });\n    }); // if (sorter && sorter.field) {\n    //     if (sorter.order == \"ascend\") {\n    //         setSort(sorter.field);\n    //     } else {\n    //         setSort(\"-\" + sorter.field);\n    //     }\n    // }\n    // let _filters = {};\n    // Object.entries(tableFilters).forEach(([key, value]) => {\n    //     let orFilter = [];\n    //     if (value) {\n    //         switch (key) {\n    //             case \"approval\":\n    //                 _filters.approval = { _in: value }\n    //                 break;\n    //             case \"status\":\n    //                 _filters.status = { _in: value }\n    //                 break;\n    //             case \"budget\":\n    //                 orFilter = [];\n    //                 value.map((data) => { orFilter.push({ budget: { _eq: data } }) })\n    //                 _filters._or = orFilter;\n    //                 break;\n    //             case \"client_name\":\n    //                 orFilter = [];\n    //                 value.map((data) => { orFilter.push({ clients: { name: { _contains: data } } }) })\n    //                 _filters._or = orFilter;\n    //                 break;\n    //             case \"resident_name\":\n    //                 orFilter = [];\n    //                 value.map((data) => { orFilter.push({ residents: { name: { _contains: data } } }) })\n    //                 _filters._or = orFilter;\n    //                 break;\n    //             default:\n    //                 break;\n    //         }\n    //     } else {\n    //     }\n    // });\n    // setFilters({ ..._filters });\n    // setPagination({ ...pagination, current });\n    // dispatch(setLeadListLoading(true));\n  };\n\n  var columns = [{\n    title: 'Community',\n    dataIndex: 'home_name',\n    key: 'home_name',\n    //...getColumnSearchProps(\"home_name\"),\n    render: function render(text, lead) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/partners/communities/\".concat(lead.home_id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, text));\n    }\n  }, {\n    title: 'Client Name',\n    dataIndex: 'client_name',\n    key: 'client_name',\n    //...getColumnSearchProps(\"client_name\"),\n    render: function render(text, lead) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/owner/leads/\".concat(lead.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, text));\n    }\n  }, {\n    title: 'Resident Name',\n    dataIndex: 'resident_name',\n    key: 'resident_name',\n    //...getColumnSearchProps(\"resident_name\"),\n    render: function render(text, lead) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/owner/leads/\".concat(lead.key, \"/resident\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, text));\n    }\n  }, {\n    title: 'Budget',\n    dataIndex: 'budget',\n    key: 'budget',\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    //...getColumnSearchProps(\"budget\"),\n    render: function render(text) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, text && \"\".concat(text));\n    }\n  }, {\n    title: 'Approval',\n    dataIndex: 'approval',\n    key: 'approval',\n    style: {\n      width: \"130px\"\n    },\n    //sorter: true,\n    sortDirections: ['ascend', 'descend', 'ascend'],\n    //filters: leadApprovalOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 50\n      }\n    })),\n    render: function render(value, lead) {\n      return /*#__PURE__*/React.createElement(PartnerClientApproval, {\n        value: value,\n        lead: lead,\n        handelApprovalChange: handelApprovalChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 24\n        }\n      });\n    }\n  } // {\n  //     title: 'Status',\n  //     dataIndex: 'status',\n  //     key: 'status',\n  //     sorter: true,\n  //     sortDirections: ['ascend', 'descend', 'ascend'],\n  //     filters: leadStatusOptions,\n  //     filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\n  //     render: (text) => (\n  //         <Space >\n  //             {humanize(text)}\n  //         </Space>\n  //     )\n  // },\n  ];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/partners\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Partners\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/partner/overview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 34\n    }\n  }, humanize(user.first_name), \" \", humanize(user.last_name))), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Client Contact\"))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    loading: leadListLoading,\n    dataSource: leadList.map(function (_ref3) {\n      var client = _ref3.client,\n          budget = _ref3.budget,\n          approval = _ref3.approval,\n          status = _ref3.status,\n          id = _ref3.id,\n          denied_reason = _ref3.denied_reason,\n          date_created = _ref3.date_created,\n          home = _ref3.home;\n      console.log(client, budget, approval, status, id, denied_reason, date_created, home, \"client, budget, approval, status, id, denied_reason, date_created, home\");\n      return {\n        client_name: client ? client.name : \"\",\n        resident_name: client && client.primary_resident ? client.primary_resident.name : \"\",\n        budget: client && client.primary_resident ? client.primary_resident.budget_notes : \"\",\n        approval: approval,\n        key: id,\n        status: status,\n        denied_reason: denied_reason,\n        date_created: date_created,\n        home_name: home && home.name,\n        home_id: home && home.id\n      };\n    }),\n    pagination: pagination,\n    onChange: handelTableChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    leadList: state.lead.leadList,\n    leadListLoading: state.lead.leadListLoading,\n    leadListMeta: state.lead.leadListMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllLeads: function listAllLeads() {\n      return dispatch(_listAllLeads());\n    },\n    updateLead: function updateLead() {\n      return dispatch(_updateLead());\n    },\n    setLeadListLoading: function setLeadListLoading() {\n      return dispatch(_setLeadListLoading());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(PartnersClientContact);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/admin/partner/partner-client-contact.js"],"names":["React","useEffect","useState","connect","listAllLeads","updateLead","setLeadListLoading","useDispatch","Link","notifyUser","List","Divider","Row","Col","Button","PageHeader","Table","Tag","Space","Breadcrumb","Select","Form","Input","Popover","Tooltip","compose","DownOutlined","EditOutlined","FilterFilled","FilterOutlined","TagFilled","data","leadApprovalOptions","leadStatusOptions","humanize","getColumnSearchProps","UserService","PartnerClientApproval","TextArea","PartnersClientContact","leadList","leadListLoading","leadMessage","leadUpdated","leadListMeta","user","getAdminUser","pageSize","current","pagination","setPagination","sort","setSort","id","filters","setFilters","dispatch","handelApprovalChange","values","leadId","fields","filter","total","filter_count","console","log","handelTableChange","tableFilters","sorter","columns","title","dataIndex","key","render","text","lead","home_id","sortDirections","style","width","filterIcon","value","first_name","last_name","map","client","budget","approval","status","denied_reason","date_created","home","client_name","name","resident_name","primary_resident","budget_notes","home_name","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllLeads, updateLead, setLeadListLoading } from \"../../../redux/actions/lead-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Select, Form, Input, Popover, Tooltip } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { DownOutlined, EditOutlined, FilterFilled, FilterOutlined, TagFilled } from '@ant-design/icons';\r\nimport { data } from \"jquery\";\r\nimport { leadApprovalOptions, leadStatusOptions } from \"../../../constants/defaultValues\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport PartnerClientApproval from \"./partner-client-approval\";\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PartnersClientContact = ({ leadList, leadListLoading, leadMessage, leadUpdated, leadListMeta }) => {\r\n    const user = UserService.getAdminUser();\r\n\r\n    const [pagination, setPagination] = useState({\r\n        pageSize: 5,\r\n        current: 1,\r\n    });\r\n    const [sort, setSort] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        \"home\": {\r\n            \"user_created\": {\r\n                \"_eq\": user.id\r\n            }\r\n        }\r\n    });\r\n    const dispatch = useDispatch();\r\n    const handelApprovalChange = (values, leadId) => {\r\n        dispatch(updateLead(leadId, values));\r\n    }\r\n    useEffect(() => {\r\n        leadListLoading && dispatch(listAllLeads({ fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"], filter: filters, }));\r\n        // leadListLoading && dispatch(listAllLeads({ fields: ['*', \"client.*\", \"client.primary_resident.*\", \"home.*\"], filter: filters, sort, page: pagination.current, limit: pagination.pageSize, meta: \"*\" }));\r\n        leadListMeta && setPagination({ ...pagination, total: leadListMeta.filter_count })\r\n        if (leadUpdated) {\r\n            notifyUser(leadMessage, \"success\");\r\n        }\r\n        return () => {\r\n            console.log(\"Communities Unmounting\");\r\n        };\r\n    }, [leadUpdated, leadMessage, leadListLoading]);\r\n\r\n    const handelTableChange = ({ current }, tableFilters, sorter) => {\r\n        console.log({ current }, tableFilters, sorter);\r\n        console.log('clivk');\r\n        setPagination((values) => {\r\n            return {\r\n                ...values,\r\n                current: current\r\n            }\r\n        });\r\n        // if (sorter && sorter.field) {\r\n        //     if (sorter.order == \"ascend\") {\r\n        //         setSort(sorter.field);\r\n        //     } else {\r\n        //         setSort(\"-\" + sorter.field);\r\n        //     }\r\n        // }\r\n\r\n        // let _filters = {};\r\n\r\n\r\n        // Object.entries(tableFilters).forEach(([key, value]) => {\r\n        //     let orFilter = [];\r\n        //     if (value) {\r\n        //         switch (key) {\r\n        //             case \"approval\":\r\n        //                 _filters.approval = { _in: value }\r\n        //                 break;\r\n        //             case \"status\":\r\n        //                 _filters.status = { _in: value }\r\n        //                 break;\r\n\r\n        //             case \"budget\":\r\n        //                 orFilter = [];\r\n        //                 value.map((data) => { orFilter.push({ budget: { _eq: data } }) })\r\n        //                 _filters._or = orFilter;\r\n        //                 break;\r\n\r\n        //             case \"client_name\":\r\n        //                 orFilter = [];\r\n        //                 value.map((data) => { orFilter.push({ clients: { name: { _contains: data } } }) })\r\n        //                 _filters._or = orFilter;\r\n        //                 break;\r\n        //             case \"resident_name\":\r\n        //                 orFilter = [];\r\n        //                 value.map((data) => { orFilter.push({ residents: { name: { _contains: data } } }) })\r\n        //                 _filters._or = orFilter;\r\n        //                 break;\r\n\r\n        //             default:\r\n        //                 break;\r\n        //         }\r\n        //     } else {\r\n\r\n        //     }\r\n\r\n        // });\r\n        // setFilters({ ..._filters });\r\n        // setPagination({ ...pagination, current });\r\n        // dispatch(setLeadListLoading(true));\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Community',\r\n            dataIndex: 'home_name',\r\n            key: 'home_name',\r\n            //...getColumnSearchProps(\"home_name\"),\r\n            render: (text, lead) => (\r\n                <Space size=\"middle\">\r\n                    <Link to={`/admin/partners/communities/${lead.home_id}`}>{text}</Link>\r\n\r\n                </Space>\r\n            )\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'client_name',\r\n            key: 'client_name',\r\n            //...getColumnSearchProps(\"client_name\"),\r\n            render: (text, lead) => (\r\n                <Space size=\"middle\">\r\n                    <Link to={`/owner/leads/${lead.key}`}>{text}</Link>\r\n\r\n                </Space>\r\n            )\r\n        },\r\n\r\n        {\r\n            title: 'Resident Name',\r\n            dataIndex: 'resident_name',\r\n            key: 'resident_name',\r\n            //...getColumnSearchProps(\"resident_name\"),\r\n            render: (text, lead) => (\r\n                <Space size=\"middle\">\r\n                    <Link to={`/owner/leads/${lead.key}/resident`}>{text}</Link>\r\n\r\n                </Space>\r\n            )\r\n        },\r\n        {\r\n            title: 'Budget',\r\n            dataIndex: 'budget',\r\n            key: 'budget',\r\n            //sorter: true,\r\n            sortDirections: ['ascend', 'descend', 'ascend'],\r\n            //...getColumnSearchProps(\"budget\"),\r\n            render: (text) => (\r\n                <Space size=\"middle\">\r\n                    {text && `${text}`}\r\n                </Space>\r\n            )\r\n\r\n        },\r\n\r\n\r\n        {\r\n            title: 'Approval',\r\n            dataIndex: 'approval',\r\n            key: 'approval',\r\n            style: { width: \"130px\" },\r\n            //sorter: true,\r\n            sortDirections: ['ascend', 'descend', 'ascend'],\r\n            //filters: leadApprovalOptions,\r\n            filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n            render: (value, lead) => {\r\n                return <PartnerClientApproval value={value} lead={lead} handelApprovalChange={handelApprovalChange} />\r\n            }\r\n        },\r\n        // {\r\n        //     title: 'Status',\r\n        //     dataIndex: 'status',\r\n        //     key: 'status',\r\n        //     sorter: true,\r\n        //     sortDirections: ['ascend', 'descend', 'ascend'],\r\n        //     filters: leadStatusOptions,\r\n        //     filterIcon: (<Tooltip title=\"Filter\"><FilterFilled /></Tooltip>),\r\n        //     render: (text) => (\r\n        //         <Space >\r\n        //             {humanize(text)}\r\n        //         </Space>\r\n        //     )\r\n        // },\r\n\r\n\r\n    ];\r\n    return (\r\n        <>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/admin\">Home</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/admin/partners\">Partners</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item><Link to=\"/admin/partner/overview\">{humanize(user.first_name)} {humanize(user.last_name)}</Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"\">Client Contact</Link>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Row gutter={30}>\r\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                    <Table\r\n                        columns={columns}\r\n                        loading={leadListLoading}\r\n                        dataSource={leadList.map(({ client, budget, approval, status, id, denied_reason, date_created, home }) => {\r\n                            console.log(client, budget, approval, status, id, denied_reason, date_created, home, \"client, budget, approval, status, id, denied_reason, date_created, home\");\r\n                            return { client_name: client ? client.name : \"\", resident_name: (client && client.primary_resident) ? client.primary_resident.name : \"\", budget: (client && client.primary_resident) ? client.primary_resident.budget_notes : \"\", approval, key: id, status, denied_reason, date_created, home_name: home && home.name, home_id: home && home.id };\r\n                        })}\r\n                        pagination={pagination}\r\n                        onChange={handelTableChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        leadList: state.lead.leadList,\r\n        leadListLoading: state.lead.leadListLoading,\r\n        leadListMeta: state.lead.leadListMeta,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        listAllLeads: () => dispatch(listAllLeads()),\r\n        updateLead: () => dispatch(updateLead()),\r\n        setLeadListLoading: () => dispatch(setLeadListLoading()),\r\n    };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(PartnersClientContact);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { Types } from \"../constants/staff-types\";\nimport API from \"../api/staff-api\";\nexport function listAllStaff(params) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.listAllStaff(params).then(function (data) {\n                dispatch({\n                  type: Types.GET_STAFF_LIST,\n                  payload: {\n                    data: data.data,\n                    staffListLoading: false,\n                    meta: data.meta ? data.meta : null\n                  }\n                });\n              }, function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function getStaffById(id) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return API.getStaffById(id, params).then(function (data) {\n                dispatch({\n                  type: Types.GET_EDIT_STAFF,\n                  payload: {\n                    data: data.data,\n                    editStaffLoading: false\n                  }\n                });\n              }, function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context2.next = 7;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport function createStaff(formData) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return API.createStaff(formData).then(function (data) {\n                dispatch({\n                  type: Types.ADD_STAFF,\n                  payload: {\n                    message: \"Staff Updated\",\n                    success: true\n                  }\n                });\n              }, function (error) {\n                console.log(error.response);\n\n                if (error.response && error.response.data && error.response.data.message) {\n                  dispatch({\n                    type: Types.ADD_STAFF,\n                    payload: {\n                      success: false,\n                      message: error.response.data.message\n                    }\n                  });\n                }\n              });\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: Types.ADD_STAFF,\n                payload: {\n                  message: \"There is an error\",\n                  success: false\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 5]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}\nexport function updateStaff(id, formData) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return API.updateStaff(id, formData).then(function (data) {\n                dispatch({\n                  type: Types.EDIT_STAFF,\n                  payload: {\n                    message: \"Staff Updated\",\n                    success: true\n                  }\n                });\n              }, function (error) {\n                console.log(error.response);\n\n                if (error.response && error.response.data && error.response.data.message) {\n                  dispatch({\n                    type: Types.EDIT_STAFF,\n                    payload: {\n                      success: false,\n                      message: error.response.data.message\n                    }\n                  });\n                }\n              });\n\n            case 3:\n              _context4.next = 7;\n              break;\n\n            case 5:\n              _context4.prev = 5;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 5]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}\nexport function setStaffListLoading(value) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: Types.STAFF_LIST_LOADING,\n                payload: value\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/redux/actions/staff-actions.js"],"names":["Types","API","listAllStaff","params","dispatch","getState","then","data","type","GET_STAFF_LIST","payload","staffListLoading","meta","error","console","log","getStaffById","id","GET_EDIT_STAFF","editStaffLoading","createStaff","formData","ADD_STAFF","message","success","response","updateStaff","EDIT_STAFF","setStaffListLoading","value","STAFF_LIST_LOADING"],"mappings":"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","sourcesContent":["import { Types } from \"../constants/staff-types\";\r\nimport API from \"../api/staff-api\";\r\n\r\nexport function listAllStaff(params) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.listAllStaff(params).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.GET_STAFF_LIST,\r\n            payload: {data:data.data,staffListLoading:false,meta:data.meta?data.meta:null},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n}\r\n\r\nexport function getStaffById(id,params = {}) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.getStaffById(id,params).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.GET_EDIT_STAFF,\r\n            payload: {data:data.data,editStaffLoading:false},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    } catch (e) {\r\n      \r\n    }\r\n  };\r\n    \r\n}\r\n\r\nexport function createStaff(formData) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.createStaff(formData).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.ADD_STAFF,\r\n            payload: {message:\"Staff Updated\",success:true},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error.response);\r\n        if(error.response && error.response.data && error.response.data.message) {\r\n          dispatch({\r\n            type: Types.ADD_STAFF,\r\n            payload: {success: false, message: error.response.data.message},\r\n          });\r\n        }  \r\n        }\r\n      );\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Types.ADD_STAFF,\r\n        payload: {message:\"There is an error\",success:false},\r\n      });\r\n    }\r\n  };\r\n  \r\n}\r\n\r\nexport function updateStaff(id,formData) {\r\n  return async function(dispatch, getState) {\r\n    try {\r\n      await API.updateStaff(id,formData).then(\r\n        (data) => {\r\n          dispatch({\r\n            type: Types.EDIT_STAFF,\r\n            payload: {message:\"Staff Updated\",success:true},\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error.response);\r\n        if(error.response && error.response.data && error.response.data.message) {\r\n          dispatch({\r\n            type: Types.EDIT_STAFF,\r\n            payload: {success: false, message: error.response.data.message},\r\n          });\r\n        }  \r\n        }\r\n      );\r\n    } catch (e) {\r\n      \r\n    }\r\n  };\r\n}\r\n\r\nexport function setStaffListLoading(value) {\r\n  return async function(dispatch, getState) {\r\n      dispatch({\r\n        type: Types.STAFF_LIST_LOADING,\r\n        payload:value,\r\n      });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
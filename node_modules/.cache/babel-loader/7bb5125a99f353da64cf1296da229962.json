{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\mainSearch.js\";\n\nimport React, { useState } from \"react\";\n\nvar AutocompleteSearch = function AutocompleteSearch() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var handleSearchChange = function handleSearchChange(e) {\n    var value = e.target.value;\n    setSearchText(value); // Perform search based on the value\n    // Replace this with your own search logic\n\n    var searchResults = searchCountry(value); // Set the search results\n\n    setResults(searchResults);\n  };\n\n  var searchCountry = function searchCountry(value) {\n    // Replace this with your own data source or API call\n    var countries = [{\n      type: \"City\",\n      name: \"Los Angeles\"\n    }, {\n      type: \"City\",\n      name: \"Los Angeles\"\n    }, {\n      type: \"Neighborhood\",\n      name: \"West Los Angeles\"\n    }, {\n      type: \"Country\",\n      name: \"Los Angeles\"\n    }]; // Filter countries based on the search value\n\n    return countries.filter(function (country) {\n      return country.name.toLowerCase().includes(value.toLowerCase());\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    value: searchText,\n    onChange: handleSearchChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, results.map(function (country, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, country.type, \": \", country.name);\n  })));\n};\n\nexport default AutocompleteSearch;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/mainSearch.js"],"names":["React","useState","AutocompleteSearch","searchText","setSearchText","results","setResults","handleSearchChange","e","value","target","searchResults","searchCountry","countries","type","name","filter","country","toLowerCase","includes","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,kBACKD,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACxBE,UADwB;AAAA,MACZC,aADY;;AAAA,mBAEDH,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,MAExBI,OAFwB;AAAA,MAEfC,UAFe;;AAI/B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAO;AAAA,QACxBC,KADwB,GACdD,CAAC,CAACE,MADY,CACxBD,KADwB;AAEhCL,IAAAA,aAAa,CAACK,KAAD,CAAb,CAFgC,CAIhC;AACA;;AACA,QAAME,aAAa,GAAGC,aAAa,CAACH,KAAD,CAAnC,CANgC,CAQhC;;AACAH,IAAAA,UAAU,CAACK,aAAD,CAAV;AACD,GAVD;;AAYA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACH,KAAD,EAAW;AAC/B;AACA,QAAMI,SAAS,GAAG,CAChB;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADgB,EAKhB;AACED,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KALgB,EAShB;AACED,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KATgB,EAahB;AACED,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KAbgB,CAAlB,CAF+B,CAqB/B;;AACA,WAAOF,SAAS,CAACG,MAAV,CAAiB,UAACC,OAAD;AAAA,aACtBA,OAAO,CAACF,IAAR,CAAaG,WAAb,GAA2BC,QAA3B,CAAoCV,KAAK,CAACS,WAAN,EAApC,CADsB;AAAA,KAAjB,CAAP;AAGD,GAzBD;;AA2BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAEf,UAHT;AAIE,IAAA,QAAQ,EAAEI,kBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACe,GAAR,CAAY,UAACH,OAAD,EAAUI,KAAV;AAAA,wBACX;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,CAACH,IADX,QACmBG,OAAO,CAACF,IAD3B,CADW;AAAA,GAAZ,CADH,CAPF,CADF;AAiBD,CA5DD;;AA8DA,eAAeb,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AutocompleteSearch = () => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    const { value } = e.target;\r\n    setSearchText(value);\r\n\r\n    // Perform search based on the value\r\n    // Replace this with your own search logic\r\n    const searchResults = searchCountry(value);\r\n\r\n    // Set the search results\r\n    setResults(searchResults);\r\n  };\r\n\r\n  const searchCountry = (value) => {\r\n    // Replace this with your own data source or API call\r\n    const countries = [\r\n      {\r\n        type: \"City\",\r\n        name: \"Los Angeles\",\r\n      },\r\n      {\r\n        type: \"City\",\r\n        name: \"Los Angeles\",\r\n      },\r\n      {\r\n        type: \"Neighborhood\",\r\n        name: \"West Los Angeles\",\r\n      },\r\n      {\r\n        type: \"Country\",\r\n        name: \"Los Angeles\",\r\n      },\r\n    ];\r\n\r\n    // Filter countries based on the search value\r\n    return countries.filter((country) =>\r\n      country.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchText}\r\n        onChange={handleSearchChange}\r\n      />\r\n      <ul>\r\n        {results.map((country, index) => (\r\n          <li key={index}>\r\n            {country.type}: {country.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutocompleteSearch;\r\n"]},"metadata":{},"sourceType":"module"}
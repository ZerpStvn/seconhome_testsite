{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\home-owner\\\\communities\\\\add-community.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { createHome as _createHome } from \"../../../redux/actions/home-actions\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport { List, Divider, Row, Col, Button, Tabs, Form, Input, Card, Image, Select, InputNumber, Breadcrumb, PageHeader } from \"antd\";\nimport Geocode from \"react-geocode\";\nimport { compose } from \"redux\";\nimport { identity } from \"ramda\";\nimport { careOfferdValues, licenseStatusValues, homeGendersAcceptedOptions, homeCareOfferedOptions, homeLicenseStatusOptions } from \"../../../constants/defaultValues\";\nimport { useForm } from \"../../../constants/use-form\";\nimport Locator from \"../../../components/forms/locator\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport config from \"../../../config\";\nvar TabPane = Tabs.TabPane;\nvar TextArea = Input.TextArea;\nvar Meta = Card.Meta;\nvar careOfferdOptions = [];\nvar licenseStatusOptions = [];\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\nvar formSubItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\n{\n  Object.entries(careOfferdValues).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return careOfferdOptions.push( /*#__PURE__*/React.createElement(Select.Option, {\n      key: key,\n      value: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, value));\n  });\n}\n{\n  Object.entries(licenseStatusValues).forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return licenseStatusOptions.push( /*#__PURE__*/React.createElement(Select.Option, {\n      key: key,\n      value: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, value));\n  });\n}\n\nvar AddCommunity = function AddCommunity(_ref5) {\n  var history = _ref5.history;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState({\n    lat: 0,\n    lng: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    return function () {\n      console.log(\"Add Community Unmounting\");\n    };\n  }, []);\n\n  var setLatLong = function setLatLong(cords, locationObj) {\n    var _cords = location;\n\n    if (cords && cords !== null && cords !== undefined) {\n      _cords.lat = cords.lat;\n      _cords.lng = cords.lng;\n    }\n\n    setLocation(_cords); // console.log(_cords,locationObj)\n\n    if (locationObj && locationObj.state) {\n      form.setFieldsValue({\n        address_line_1: locationObj.address,\n        city: locationObj.city,\n        state: locationObj.state,\n        zip: locationObj.zip,\n        county: locationObj.county\n      });\n    }\n  };\n\n  var onSelectAddress = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAddressComponets(address.label);\n\n            case 2:\n              response = _context.sent;\n\n              if (response) {\n                form.setFieldsValue(_objectSpread({}, response));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSelectAddress(_x) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var getAddressComponets = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n      var response, addressComponents, _location, acCity, acCounty, acState, acZip, addressLine;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Geocode.fromAddress(address);\n\n            case 2:\n              response = _context2.sent;\n              addressComponents = {};\n\n              if (response.results.length) {\n                console.log(response, \"responseresponseresponse\");\n                console.log(response.results[0].formatted_address, \"asaa\");\n                _location = response.results[0].geometry.location;\n                setLocation({\n                  lat: _location.lat,\n                  lng: _location.lng\n                }); // addressComponents.geo.lat = location.lat;\n                // addressComponents.geo.lng = location.lng;\n                // addressComponents.address = response.formatted_address\n\n                acCity = response.results[0].address_components.find(function (r) {\n                  return r.types.indexOf(\"locality\") > -1;\n                });\n\n                if (acCity && acCity.long_name) {\n                  addressComponents.city = acCity.long_name;\n                }\n\n                acCounty = response.results[0].address_components.find(function (r) {\n                  return r.types.indexOf(\"administrative_area_level_2\") > -1;\n                });\n\n                if (acCounty && acCounty.long_name) {\n                  addressComponents.county = acCounty.long_name;\n                }\n\n                acState = response.results[0].address_components.find(function (r) {\n                  return r.types.indexOf(\"administrative_area_level_1\") > -1;\n                });\n\n                if (acState && acState.long_name) {\n                  addressComponents.state = acState.long_name;\n                }\n\n                acZip = response.results[0].address_components.find(function (r) {\n                  return r.types.indexOf(\"postal_code\") > -1;\n                });\n\n                if (acZip && acZip.long_name) {\n                  addressComponents.zip = acZip.long_name;\n                }\n\n                addressLine = address.replace(addressComponents.city, \"\").replace(addressComponents.state, \"\").replace(addressComponents.county, \"\").replace(addressComponents.zip, \"\").replace(acCounty.short_name, \"\").replace(/,/g, \"\").trim();\n                addressComponents.address_line_1 = addressLine;\n              }\n\n              return _context2.abrupt(\"return\", addressComponents);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getAddressComponets(_x2) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handelSave = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              values.geo = location;\n              _context3.next = 4;\n              return dispatch(_createHome(values));\n\n            case 4:\n              history.push(\"/owner/communities\");\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handelSave(_x3) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/owner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/owner/communities\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Communities\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/owner/communities/add\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Add Community\"))), /*#__PURE__*/React.createElement(PageHeader, {\n    className: \"site-page-header\",\n    title: \"Add Community\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 16,\n    lg: 16,\n    xl: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"horizontal\",\n    onFinish: handelSave,\n    initialValues: {\n      genders_accepted: \"male_female\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Basic Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Community Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"Please Input Name!\",\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Office Phone\",\n    name: \"phone\",\n    rules: [{\n      required: true,\n      pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\n      message: 'Please input valid number!' // max: 14\n\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Add Phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Website\",\n    name: \"website\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add Website\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Parent Company\",\n    name: \"parent_company\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add Parant company\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Community Description\",\n    tooltip: \"Write a description about your community that you want to showcase to potential families.\",\n    name: \"short_description\",\n    rules: [{\n      pattern: \"^([^0-9]*)$\",\n      message: \"Only Text is Allowed !\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    maxLength: 255,\n    placeholder: \"Add Description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    title: \"Location Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"location\",\n    label: \"Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    selectProps: {\n      placeholder: \"Enter Address, Zip or City to look up\",\n      onChange: onSelectAddress\n    },\n    apiKey: config.googleMapsAPIkey,\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"us\"]\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Address Line 1\",\n    name: \"address_line_1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    maxLength: 255,\n    placeholder: \"Add Address Line 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Address Line 2\",\n    name: \"address_line_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    maxLength: 255,\n    placeholder: \"Add Address Line 2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"City\",\n    name: \"city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add City\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"State\",\n    name: \"state\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add State\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Country\",\n    name: \"county\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add County\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Zip\",\n    name: \"zip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add Zip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    title: \"Type of Community\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Genders Accepted\",\n    name: \"genders_accepted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, homeGendersAcceptedOptions.map(function (_ref9) {\n    var text = _ref9.text,\n        value = _ref9.value;\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, text);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Minimum Age Accepted\",\n    name: \"minimum_age_accepted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    max: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    title: \"License Information\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"License Number\",\n    name: \"license_number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    placeholder: \"Add License Number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Capacity\",\n    name: \"capacity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Year Started\",\n    name: \"year_started\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    max: new Date().getFullYear(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"License Status\",\n    name: \"license_status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, homeLicenseStatusOptions.map(function (_ref10) {\n    var text = _ref10.text,\n        value = _ref10.value;\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, text);\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"Save\"))))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createHome: function createHome() {\n      return dispatch(_createHome());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(AddCommunity);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/home-owner/communities/add-community.js"],"names":["React","useEffect","useState","connect","useDispatch","createHome","Link","useParams","notifyUser","List","Divider","Row","Col","Button","Tabs","Form","Input","Card","Image","Select","InputNumber","Breadcrumb","PageHeader","Geocode","compose","identity","careOfferdValues","licenseStatusValues","homeGendersAcceptedOptions","homeCareOfferedOptions","homeLicenseStatusOptions","useForm","Locator","GooglePlacesAutocomplete","config","TabPane","TextArea","Meta","careOfferdOptions","licenseStatusOptions","formItemLayout","labelCol","span","wrapperCol","formSubItemLayout","Object","entries","forEach","key","value","push","AddCommunity","history","form","lat","lng","location","setLocation","loading","setLoading","dispatch","console","log","setLatLong","cords","locationObj","_cords","undefined","state","setFieldsValue","address_line_1","address","city","zip","county","onSelectAddress","getAddressComponets","label","response","fromAddress","addressComponents","results","length","formatted_address","geometry","acCity","address_components","find","r","types","indexOf","long_name","acCounty","acState","acZip","addressLine","replace","short_name","trim","handelSave","values","geo","genders_accepted","required","message","whitespace","pattern","placeholder","onChange","googleMapsAPIkey","componentRestrictions","country","map","text","Date","getFullYear","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createHome } from \"../../../redux/actions/home-actions\";\r\n\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport {\r\n  List,\r\n  Divider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tabs,\r\n  Form,\r\n  Input,\r\n  Card,\r\n  Image,\r\n  Select,\r\n  InputNumber,\r\n  Breadcrumb,\r\n  PageHeader,\r\n} from \"antd\";\r\nimport Geocode from \"react-geocode\";\r\nimport { compose } from \"redux\";\r\nimport { identity } from \"ramda\";\r\nimport {\r\n  careOfferdValues,\r\n  licenseStatusValues,\r\n  homeGendersAcceptedOptions,\r\n  homeCareOfferedOptions,\r\n  homeLicenseStatusOptions,\r\n} from \"../../../constants/defaultValues\";\r\nimport { useForm } from \"../../../constants/use-form\";\r\nimport Locator from \"../../../components/forms/locator\";\r\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\r\nimport config from \"../../../config\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { TextArea } = Input;\r\nconst { Meta } = Card;\r\n\r\nconst careOfferdOptions = [];\r\nconst licenseStatusOptions = [];\r\nconst formItemLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 18 },\r\n};\r\n\r\nconst formSubItemLayout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\n{\r\n\r\n  Object.entries(careOfferdValues).forEach(([key, value]) =>\r\n    careOfferdOptions.push(\r\n      <Select.Option key={key} value={key}>\r\n        {value}\r\n      </Select.Option>\r\n    )\r\n  );\r\n}\r\n\r\n{\r\n  Object.entries(licenseStatusValues).forEach(([key, value]) =>\r\n    licenseStatusOptions.push(\r\n      <Select.Option key={key} value={key}>\r\n        {value}\r\n      </Select.Option>\r\n    )\r\n  );\r\n}\r\n\r\nconst AddCommunity = ({ history }) => {\r\n  const [form] = Form.useForm();\r\n  const [location, setLocation] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"Add Community Unmounting\");\r\n    };\r\n  }, []);\r\n\r\n  const setLatLong = (cords, locationObj) => {\r\n    var _cords = location;\r\n    if (cords && cords !== null && cords !== undefined) {\r\n      _cords.lat = cords.lat;\r\n      _cords.lng = cords.lng;\r\n    }\r\n    setLocation(_cords);\r\n    // console.log(_cords,locationObj)\r\n    if (locationObj && locationObj.state) {\r\n      form.setFieldsValue({\r\n        address_line_1: locationObj.address,\r\n        city: locationObj.city,\r\n        state: locationObj.state,\r\n        zip: locationObj.zip,\r\n        county: locationObj.county,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSelectAddress = async (address) => {\r\n    let response = await getAddressComponets(address.label);\r\n    if (response) {\r\n      form.setFieldsValue({ ...response });\r\n    }\r\n  };\r\n\r\n  const getAddressComponets = async (address) => {\r\n    let response = await Geocode.fromAddress(address);\r\n    let addressComponents = {};\r\n    if (response.results.length) {\r\n      console.log(response, \"responseresponseresponse\");\r\n      console.log(response.results[0].formatted_address, \"asaa\");\r\n      let location = response.results[0].geometry.location;\r\n      setLocation({\r\n        lat: location.lat,\r\n        lng: location.lng\r\n      });\r\n\r\n      // addressComponents.geo.lat = location.lat;\r\n      // addressComponents.geo.lng = location.lng;\r\n      // addressComponents.address = response.formatted_address\r\n      let acCity = response.results[0].address_components.find(\r\n        (r) => r.types.indexOf(\"locality\") > -1\r\n      );\r\n      if (acCity && acCity.long_name) {\r\n        addressComponents.city = acCity.long_name;\r\n      }\r\n      let acCounty = response.results[0].address_components.find(\r\n        (r) => r.types.indexOf(\"administrative_area_level_2\") > -1\r\n      );\r\n\r\n      if (acCounty && acCounty.long_name) {\r\n        addressComponents.county = acCounty.long_name;\r\n      }\r\n      let acState = response.results[0].address_components.find(\r\n        (r) => r.types.indexOf(\"administrative_area_level_1\") > -1\r\n      );\r\n      if (acState && acState.long_name) {\r\n        addressComponents.state = acState.long_name;\r\n      }\r\n      let acZip = response.results[0].address_components.find(\r\n        (r) => r.types.indexOf(\"postal_code\") > -1\r\n      );\r\n      if (acZip && acZip.long_name) {\r\n        addressComponents.zip = acZip.long_name;\r\n      }\r\n\r\n      let addressLine = address.replace(addressComponents.city, \"\").replace(addressComponents.state, \"\").replace(addressComponents.county, \"\").replace(addressComponents.zip, \"\").replace(acCounty.short_name, \"\").replace(/,/g, \"\").trim();\r\n\r\n      addressComponents.address_line_1 = addressLine\r\n    }\r\n    return addressComponents;\r\n  };\r\n\r\n\r\n  const handelSave = async (values) => {\r\n    setLoading(true);\r\n    values.geo = location;\r\n    await dispatch(createHome(values));\r\n    history.push(\"/owner/communities\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/owner\">Home</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/owner/communities\">Communities</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to={`/owner/communities/add`}>Add Community</Link>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <PageHeader className=\"site-page-header\" title=\"Add Community\" />\r\n\r\n      <Row gutter={30}>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16}>\r\n          <Form form={form} layout={\"horizontal\"} onFinish={handelSave} initialValues={{ genders_accepted: \"male_female\" }}>\r\n            <Card title=\"Basic Details\">\r\n              <Form.Item\r\n                {...formItemLayout}\r\n                label=\"Community Name\"\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please Input Name!\",\r\n                    whitespace: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input maxLength={255} placeholder=\"Add Name\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"Office Phone\" name=\"phone\" rules={[\r\n                {\r\n                  required: true,\r\n                  pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\r\n                  message: 'Please input valid number!',\r\n                  // max: 14\r\n                },\r\n              ]}>\r\n                <Input placeholder=\"Add Phone\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"Website\" name=\"website\">\r\n                <Input maxLength={255} placeholder=\"Add Website\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"Parent Company\" name=\"parent_company\">\r\n                <Input maxLength={255} placeholder=\"Add Parant company\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                {...formItemLayout}\r\n                label=\"Community Description\"\r\n                tooltip=\"Write a description about your community that you want to showcase to potential families.\"\r\n                name=\"short_description\" rules={[{\r\n                  pattern: \"^([^0-9]*)$\",\r\n                  message: \"Only Text is Allowed !\"\r\n                }]}\r\n              >\r\n                <TextArea maxLength={255} placeholder=\"Add Description\" />\r\n              </Form.Item>\r\n            </Card>\r\n            <Card title=\"Location Details\">\r\n              <Form.Item  {...formItemLayout} name=\"location\" label={\"Address\"}>\r\n                <GooglePlacesAutocomplete\r\n                  selectProps={{\r\n\r\n                    placeholder: \"Enter Address, Zip or City to look up\",\r\n                    onChange: onSelectAddress,\r\n                  }}\r\n                  apiKey={config.googleMapsAPIkey}\r\n                  autocompletionRequest={{\r\n                    componentRestrictions: { country: [\"us\"] },\r\n                  }}\r\n                />\r\n                {/* <Locator\r\n                  on_locate={setLatLong}\r\n                  cords={location}\r\n                  radius={20}\r\n                  radius_input={null}\r\n                  defaultAddress={null}\r\n                /> */}\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"Address Line 1\" name=\"address_line_1\">\r\n                <TextArea maxLength={255} placeholder=\"Add Address Line 1\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"Address Line 2\" name=\"address_line_2\">\r\n                <TextArea maxLength={255} placeholder=\"Add Address Line 2\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"City\" name=\"city\">\r\n                <Input maxLength={255} placeholder=\"Add City\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"State\" name=\"state\">\r\n                <Input maxLength={255} placeholder=\"Add State\" />\r\n              </Form.Item>\r\n              {/* <Form.Item label=\"Country\" name=\"country\">\r\n                <Input maxLength={255} placeholder=\"Add Country\" />\r\n              </Form.Item> */}\r\n              <Form.Item  {...formItemLayout} label=\"Country\" name=\"county\">\r\n                <Input maxLength={255} placeholder=\"Add County\" />\r\n              </Form.Item>\r\n              <Form.Item  {...formItemLayout} label=\"Zip\" name=\"zip\">\r\n                <Input maxLength={255} placeholder=\"Add Zip\" />\r\n              </Form.Item>\r\n            </Card>\r\n            <Card title=\"Type of Community\">\r\n              {/* <Form.Item\r\n                label=\"Care Offered\"\r\n                tooltip={\"Select all that apply\"}\r\n                name=\"care_offered\"\r\n              >\r\n                <Select mode=\"multiple\">\r\n                  {homeCareOfferedOptions.map(({ text, value }) => (\r\n                    <Select.Option key={value} value={value}>\r\n                      {text}\r\n                    </Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item> */}\r\n              <Form.Item  {...formItemLayout} label=\"Genders Accepted\" name=\"genders_accepted\">\r\n                <Select>\r\n                  {homeGendersAcceptedOptions.map(({ text, value }) => (\r\n                    <Select.Option key={value} value={value}>\r\n                      {text}\r\n                    </Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                {...formItemLayout}\r\n                label=\"Minimum Age Accepted\"\r\n                name=\"minimum_age_accepted\"\r\n              >\r\n                <InputNumber max={100} />\r\n              </Form.Item>\r\n            </Card>\r\n            <Card title=\"License Information\">\r\n              <Form.Item {...formItemLayout} label=\"License Number\" name=\"license_number\">\r\n                <Input maxLength={255} placeholder=\"Add License Number\" />\r\n              </Form.Item>\r\n              <Form.Item {...formItemLayout} label=\"Capacity\" name=\"capacity\">\r\n                <InputNumber />\r\n              </Form.Item>\r\n              <Form.Item {...formItemLayout} label=\"Year Started\" name=\"year_started\">\r\n                <InputNumber max={new Date().getFullYear()} />\r\n              </Form.Item>\r\n              <Form.Item {...formItemLayout} label=\"License Status\" name=\"license_status\">\r\n                <Select>\r\n                  {homeLicenseStatusOptions.map(({ text, value }) => (\r\n                    <Select.Option key={value} value={value}>\r\n                      {text}\r\n                    </Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Card>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                Save\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createHome: () => dispatch(createHome()),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\r\n  AddCommunity\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
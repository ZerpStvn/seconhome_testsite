{"ast":null,"code":"var customMiddleware = function customMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      return isFunction(action) ? action(store.dispatch, store.getState) : next(action);\n    };\n  };\n};\n\nvar isFunction = function isFunction(action) {\n  return typeof action === 'function';\n};\n\nexport default customMiddleware;","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/redux/middleware/thunk.js"],"names":["customMiddleware","store","next","action","isFunction","dispatch","getState"],"mappings":"AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AAChD,aAAOC,UAAU,CAACD,MAAD,CAAV,GAAqBA,MAAM,CAACF,KAAK,CAACI,QAAP,EAAiBJ,KAAK,CAACK,QAAvB,CAA3B,GAA6DJ,IAAI,CAACC,MAAD,CAAxE;AACH,KAFqC;AAAA,GAAR;AAAA,CAA9B;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,MAAD,EAAY;AAC3B,SAAO,OAAOA,MAAP,KAAkB,UAAzB;AACH,CAFD;;AAGA,eAAeH,gBAAf","sourcesContent":["\r\nconst customMiddleware = store => next => action => {\r\n    return isFunction(action) ? action(store.dispatch, store.getState): next(action);\r\n}\r\nconst isFunction = (action) => {\r\n    return typeof action === 'function';\r\n}\r\nexport default customMiddleware;"]},"metadata":{},"sourceType":"module"}
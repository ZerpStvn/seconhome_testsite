{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\admin\\\\client\\\\add-client-admin.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signin } from \"../../../redux/actions/auth-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { notifyUser } from \"../../../services/notification-service\";\nimport UserService from \"../../../services/user-service\";\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\nimport API from \"../../../redux/api/lead-client-api\";\nimport UserAPI from \"../../../redux/api/user-api\";\nimport Config from \"../../../config\";\nimport { mileageOptions, clientRelationShipOptions, leadSourceOptions, housingTypesOptions } from \"../../../constants/defaultValues\";\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { Space, Collapse, Form, Input, Select, Radio, Checkbox, Button, Card, Row, Col, Spin, List, Avatar, InputNumber } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport { EyeTwoTone, EyeInvisibleOutlined, CaretRightOutlined } from \"@ant-design/icons\";\nimport { EditSvg } from \"../../../components/shared/svg/edit\";\nimport { EyeSvg } from \"../../../components/shared/svg/eye\";\nimport { PenSvg } from \"../../../components/shared/svg/pen\";\nimport { placeholder } from \"@babel/types\";\nimport Geocode from \"react-geocode\";\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\nGeocode.setApiKey(Config.googleMapsAPIkey);\n\nvar AddClient = function AddClient(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      primaryClient = _useState4[0],\n      setPrimaryClient = _useState4[1];\n\n  var _useState5 = useState(3),\n      _useState6 = _slicedToArray(_useState5, 2),\n      numOfTestimonials = _useState6[0],\n      setnNumOfTestimonials = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clientAddress = _useState8[0],\n      setClientAddress = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var updateMedia = function updateMedia() {\n    var num = window.innerWidth > 1199 ? 3 : window.innerWidth < 1199 && window.innerWidth > 767 ? 2 : 1;\n    setnNumOfTestimonials(num);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", updateMedia);\n    return function () {\n      return window.removeEventListener(\"resize\", updateMedia);\n    };\n  }, []);\n  var Panel = Collapse.Panel;\n  var Option = Select.Option;\n\n  function callback(key) {}\n\n  var AddZero = function AddZero(num, size) {\n    num = num.toString();\n\n    while (num.length < size) {\n      num = \"0\" + num;\n    }\n\n    return num;\n  };\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var users, countPartners;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              _context2.next = 3;\n              return UserAPI.loadAllUsers({\n                meta: 'filter_count',\n                filter: {\n                  role: {\n                    _eq: \"eed0ea0e-d137-42b3-8cef-3e53c9038aa8\"\n                  }\n                }\n              });\n\n            case 3:\n              users = _context2.sent;\n              countPartners = users.meta.filter_count;\n              values.client_code = \"C\" + (countPartners + 1 + \"\").padStart(3, \"0\");\n              values.role = \"eed0ea0e-d137-42b3-8cef-3e53c9038aa8\";\n              values.name = values.first_name + \" \" + values.last_name;\n              UserAPI.addUser({\n                first_name: values.first_name,\n                last_name: values.last_name,\n                role: \"eed0ea0e-d137-42b3-8cef-3e53c9038aa8\",\n                email: values.email,\n                password: values.password\n              }).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!user.data) {\n                            _context.next = 7;\n                            break;\n                          }\n\n                          values.user = user.data.id;\n                          values.address = clientAddress;\n                          _context.next = 5;\n                          return API.createLeadClient(values);\n\n                        case 5:\n                          response = _context.sent;\n\n                          if (response.data) {\n                            user.data.client = [response.data];\n                            UserService.setAdminUser(user.data); // var updateLeadResponse = await API.updateLeadClient(response.data.id, { client_code: AddZero(response.data.id, 3) });\n                            // if (updateLeadResponse.data) {\n\n                            notifyUser(\"New Client Added.\", \"success\");\n                            history.push(\"/admin/client/overview\");\n                            setLoading(false); // }\n                            // history.push(`/admin/client/overview`)\n                          } else {\n                            notifyUser(\"There is some error. Please try again.\", \"error\");\n                            setLoading(false);\n                          }\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()).catch(function (Error) {\n                notifyUser(JSON.parse(Error.response.data).errors[0].message, \"error\");\n                console.log(JSON.parse(Error.response.data).errors[0].message);\n                setLoading(false);\n              }); // console.log(response.data);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinishLeadSource = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(values);\n              dispatch(createLeadClient(values));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onFinishLeadSource(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 18\n    }\n  };\n  var formSubItemLayout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n  var formTailLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 18,\n      offset: 6\n    }\n  };\n\n  var onSelectAddress = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(address) {\n      var response, location;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              form.setFieldsValue({\n                address: address.label\n              });\n              _context4.next = 3;\n              return Geocode.fromAddress(address.label);\n\n            case 3:\n              response = _context4.sent;\n              console.log(response);\n\n              if (response.results.length) {\n                location = response.results[0].geometry.location;\n                form.setFieldsValue({\n                  lat: location.lat,\n                  lng: location.lng\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function onSelectAddress(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    className: \"dashboard-listings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-form change-password-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: ['1'],\n    onChange: callback,\n    expandIconPosition: ['right'],\n    showArrow: \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Preliminary Details\",\n    key: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: onFinish,\n    name: \"dynamic_rule\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"first_name\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Please enter First Name',\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Johan\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"last_name\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Please enter Last Name',\n      whitespace: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Smith\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      type: 'email',\n      required: true,\n      message: 'Please enter Email'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"johansmith@example.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please enter Password'\n    }, {\n      validator: function validator(_, value) {\n        return !value.includes(\" \") ? Promise.resolve() : Promise.reject(new Error(\"No spaces allowed\"));\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input.Password, {\n    placeholder: \"Password\",\n    iconRender: function iconRender(visible) {\n      return visible ? /*#__PURE__*/React.createElement(EyeTwoTone, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 79\n        }\n      }) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 96\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Budget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noasterisk\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formSubItemLayout, {\n    name: \"min_budget\",\n    label: \"Min\" // rules={[\n    //     {\n    //         required: true,\n    //         message: 'Please enter Minimum Budget',\n    //     },\n    // ]}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    placeholder: \"----\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noasterisk\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formSubItemLayout, {\n    name: \"max_budget\",\n    label: \"Max\" // rules={[\n    //     {\n    //         required: true,\n    //         message: 'Please Enter Maximum Budget',\n    //     },\n    // ]}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    placeholder: \"----\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 57\n    }\n  })))))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"budget_type\",\n    label: \"Budget Type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Radio.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    value: \"alw\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 45\n    }\n  }, \"ALW\"), /*#__PURE__*/React.createElement(Radio, {\n    value: \"ssi\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 45\n    }\n  }, \"SSI\"))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"housing_type\",\n    label: \"Housing Type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    showArrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 41\n    }\n  }, housingTypesOptions.map(function (_ref6) {\n    var text = _ref6.text,\n        value = _ref6.value;\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 91\n      }\n    }, text);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    label: \"Locate Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    selectProps: {\n      placeholder: \"Enter Address, Zip or City\",\n      onChange: onSelectAddress // inputValue: clientAddress,\n      //onInputChange: setClientAddress\n\n    },\n    apiKey: Config.googleMapsAPIkey,\n    autocompletionRequest: {\n      componentRestrictions: {\n        country: [\"us\"]\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"address\",\n    label: \"Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"lat\",\n    label: \"Latitute\" // style={{display:\"none\"}}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"lng\",\n    label: \"Longitude\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n    name: \"mileage\",\n    label: \"Mileage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  }, mileageOptions.map(function (_ref7) {\n    var text = _ref7.text,\n        value = _ref7.value;\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 49\n      }\n    }, text);\n  }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, formTailLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: form.submit,\n    type: \"primary\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 41\n    }\n  }, \"Save\")))))))));\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/admin/client/add-client-admin.js"],"names":["React","useState","useEffect","connect","signin","useDispatch","notifyUser","UserService","createLeadClient","API","UserAPI","Config","mileageOptions","clientRelationShipOptions","leadSourceOptions","housingTypesOptions","GooglePlacesAutocomplete","Space","Collapse","Form","Input","Select","Radio","Checkbox","Button","Card","Row","Col","Spin","List","Avatar","InputNumber","Icon","EyeTwoTone","EyeInvisibleOutlined","CaretRightOutlined","EditSvg","EyeSvg","PenSvg","placeholder","Geocode","faL","setApiKey","googleMapsAPIkey","AddClient","history","dispatch","submitted","setSubmitted","primaryClient","setPrimaryClient","numOfTestimonials","setnNumOfTestimonials","clientAddress","setClientAddress","loading","setLoading","useForm","form","updateMedia","num","window","innerWidth","addEventListener","removeEventListener","Panel","Option","callback","key","AddZero","size","toString","length","onFinish","values","loadAllUsers","meta","filter","role","_eq","users","countPartners","filter_count","client_code","padStart","name","first_name","last_name","addUser","email","password","then","user","data","id","address","response","client","setAdminUser","push","catch","Error","JSON","parse","errors","message","console","log","onFinishLeadSource","formItemLayout","labelCol","span","wrapperCol","formSubItemLayout","formTailLayout","offset","onSelectAddress","setFieldsValue","label","fromAddress","results","location","geometry","lat","lng","xs","sm","md","lg","required","whitespace","type","validator","_","value","includes","Promise","resolve","reject","visible","map","text","onChange","componentRestrictions","country","submit","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../../redux/actions/auth-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\nimport UserService from \"../../../services/user-service\";\r\nimport { createLeadClient } from \"../../../redux/actions/lead-client-actions\";\r\nimport API from \"../../../redux/api/lead-client-api\";\r\nimport UserAPI from \"../../../redux/api/user-api\";\r\nimport Config from \"../../../config\";\r\nimport { mileageOptions, clientRelationShipOptions, leadSourceOptions, housingTypesOptions } from \"../../../constants/defaultValues\";\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport {\r\n    Space, Collapse,\r\n    Form, Input, Select,\r\n    Radio, Checkbox, Button,\r\n    Card, Row, Col, Spin,\r\n    List, Avatar, InputNumber\r\n} from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { EyeTwoTone, EyeInvisibleOutlined, CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { EditSvg } from \"../../../components/shared/svg/edit\";\r\nimport { EyeSvg } from \"../../../components/shared/svg/eye\";\r\nimport { PenSvg } from \"../../../components/shared/svg/pen\";\r\nimport { placeholder } from \"@babel/types\";\r\nimport Geocode from \"react-geocode\";\r\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nGeocode.setApiKey(Config.googleMapsAPIkey);\r\n\r\n\r\nconst AddClient = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [primaryClient, setPrimaryClient] = useState(false);\r\n    const [numOfTestimonials, setnNumOfTestimonials] = useState(3);\r\n    const [clientAddress, setClientAddress] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const updateMedia = () => {\r\n        var num = window.innerWidth > 1199 ? 3 : (window.innerWidth < 1199 && window.innerWidth > 767) ? 2 : 1\r\n        setnNumOfTestimonials(num);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    }, []);\r\n\r\n\r\n    const { Panel } = Collapse;\r\n    const { Option } = Select;\r\n\r\n    function callback(key) {\r\n    }\r\n\r\n    const AddZero = (num, size) => {\r\n        num = num.toString();\r\n        while (num.length < size) num = \"0\" + num;\r\n        return num;\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        setLoading(true);\r\n        const users = await UserAPI.loadAllUsers({ meta: 'filter_count', filter: { role: { _eq: \"eed0ea0e-d137-42b3-8cef-3e53c9038aa8\" } } });\r\n        const countPartners = users.meta.filter_count;\r\n        values.client_code = \"C\" + ((countPartners + 1) + \"\").padStart(3, \"0\");\r\n        values.role = \"eed0ea0e-d137-42b3-8cef-3e53c9038aa8\";\r\n\r\n\r\n        values.name = values.first_name + \" \" + values.last_name;\r\n\r\n        UserAPI.addUser({ first_name: values.first_name, last_name: values.last_name, role: \"eed0ea0e-d137-42b3-8cef-3e53c9038aa8\", email: values.email, password: values.password }).then(async user => {\r\n            if (user.data) {\r\n                values.user = user.data.id;\r\n                values.address = clientAddress\r\n                var response = await API.createLeadClient(values)\r\n                if (response.data) {\r\n                    user.data.client = [response.data];\r\n                    UserService.setAdminUser(user.data);\r\n\r\n                    // var updateLeadResponse = await API.updateLeadClient(response.data.id, { client_code: AddZero(response.data.id, 3) });\r\n                    // if (updateLeadResponse.data) {\r\n                    notifyUser(\"New Client Added.\", \"success\");\r\n                    history.push(`/admin/client/overview`);\r\n                    setLoading(false);\r\n                    // }\r\n                    // history.push(`/admin/client/overview`)\r\n                } else {\r\n                    notifyUser(\"There is some error. Please try again.\", \"error\")\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        }).catch(Error => {\r\n            notifyUser(JSON.parse(Error.response.data).errors[0].message, \"error\");\r\n            console.log(JSON.parse(Error.response.data).errors[0].message);\r\n            setLoading(false);\r\n        });\r\n\r\n        // console.log(response.data);\r\n\r\n    };\r\n    const onFinishLeadSource = async (values) => {\r\n        console.log(values);\r\n        dispatch(createLeadClient(values));\r\n    };\r\n\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18 },\r\n    };\r\n    const formSubItemLayout = {\r\n        labelCol: { span: 24 },\r\n        wrapperCol: { span: 24 },\r\n    };\r\n    const formTailLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18, offset: 6 },\r\n    };\r\n\r\n    const onSelectAddress = async (address) => {\r\n        form.setFieldsValue({ address: address.label })\r\n        let response = await Geocode.fromAddress(address.label);\r\n        console.log(response);\r\n        if (response.results.length) {\r\n            let location = response.results[0].geometry.location;\r\n            form.setFieldsValue({ lat: location.lat, lng: location.lng })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n\r\n\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"dashboard-listings\">\r\n                <Col span={24}>\r\n                    <div className=\"admin-form change-password-form\">\r\n\r\n                        <Collapse\r\n                            defaultActiveKey={['1']}\r\n                            onChange={callback}\r\n                            expandIconPosition={['right']}\r\n                            showArrow=\"false\"\r\n                        >\r\n\r\n                            <Panel header=\"Preliminary Details\" key=\"1\" >\r\n                                <Form form={form} onFinish={onFinish} name=\"dynamic_rule\" autoComplete=\"off\">\r\n                                    <div className=\"\">\r\n                                        <Form.Item\r\n                                            {...formItemLayout}\r\n                                            name=\"first_name\"\r\n                                            label=\"First Name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please enter First Name', whitespace: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"Johan\" />\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                    <div className=\"\">\r\n                                        <Form.Item\r\n                                            {...formItemLayout}\r\n                                            name=\"last_name\"\r\n                                            label=\"Last Name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please enter Last Name', whitespace: true,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"Smith\" />\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                    <div className=\"\">\r\n                                        <Form.Item\r\n                                            {...formItemLayout}\r\n                                            name=\"email\"\r\n                                            label=\"Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    required: true,\r\n                                                    message: 'Please enter Email',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"johansmith@example.com\" />\r\n                                        </Form.Item>\r\n                                    </div>\r\n\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please enter Password',\r\n                                            },\r\n                                            {\r\n                                                validator: (_, value) =>\r\n                                                  !value.includes(\" \")\r\n                                                    ? Promise.resolve()\r\n                                                    : Promise.reject(new Error(\"No spaces allowed\"))\r\n                                              }\r\n                                        ]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            placeholder=\"Password\"\r\n                                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        label=\"Budget\"\r\n                                    >\r\n                                        <Row gutter={16}>\r\n                                            <Col span={12}>\r\n                                                <div className=\"noasterisk\">\r\n                                                    <Form.Item\r\n                                                        {...formSubItemLayout}\r\n                                                        name=\"min_budget\"\r\n                                                        label=\"Min\"\r\n                                                    // rules={[\r\n                                                    //     {\r\n                                                    //         required: true,\r\n                                                    //         message: 'Please enter Minimum Budget',\r\n                                                    //     },\r\n                                                    // ]}\r\n                                                    >\r\n                                                        <InputNumber placeholder=\"----\" />\r\n                                                    </Form.Item>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col span={12}>\r\n                                                <div className=\"noasterisk\">\r\n                                                    <Form.Item\r\n                                                        {...formSubItemLayout}\r\n                                                        name=\"max_budget\"\r\n                                                        label=\"Max\"\r\n                                                    // rules={[\r\n                                                    //     {\r\n\r\n                                                    //         required: true,\r\n                                                    //         message: 'Please Enter Maximum Budget',\r\n                                                    //     },\r\n                                                    // ]}\r\n                                                    >\r\n                                                        <InputNumber placeholder=\"----\" />\r\n                                                    </Form.Item>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form.Item>\r\n                                    <Form.Item {...formItemLayout}\r\n                                        name=\"budget_type\"\r\n                                        label=\"Budget Type\">\r\n                                        <Radio.Group>\r\n                                            <Radio value=\"alw\">ALW</Radio>\r\n                                            <Radio value=\"ssi\">SSI</Radio>\r\n                                        </Radio.Group>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        name=\"housing_type\"\r\n                                        label=\"Housing Type\"\r\n                                    >\r\n                                        <Select mode=\"multiple\" showArrow={true}>\r\n                                            {housingTypesOptions.map(({ text, value }) => <Select.Option value={value}>{text}</Select.Option>)}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item {...formItemLayout} label=\"Locate Address\">\r\n                                        {/* <Input placeholder=\"Address\"/> */}\r\n                                        <GooglePlacesAutocomplete\r\n                                            selectProps={{\r\n                                                placeholder: \"Enter Address, Zip or City\",\r\n                                                onChange: onSelectAddress,\r\n                                                // inputValue: clientAddress,\r\n                                                //onInputChange: setClientAddress\r\n                                            }}\r\n                                            apiKey={Config.googleMapsAPIkey}\r\n                                            autocompletionRequest={{\r\n                                                componentRestrictions: { country: [\"us\"] },\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        name=\"address\"\r\n                                        label=\"Address\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        name=\"lat\"\r\n                                        label=\"Latitute\"\r\n                                    // style={{display:\"none\"}}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        name=\"lng\"\r\n                                        label=\"Longitude\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        {...formItemLayout}\r\n                                        name=\"mileage\"\r\n                                        label=\"Mileage\"\r\n                                    >\r\n                                        <Select>\r\n                                            {mileageOptions.map(({ text, value }) => (\r\n                                                <Select.Option key={value} value={value}>\r\n                                                    {text}\r\n                                                </Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item {...formTailLayout}>\r\n                                        <Button onClick={form.submit} type=\"primary\" loading={loading}>Save</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);\r\n"]},"metadata":{},"sourceType":"module"}
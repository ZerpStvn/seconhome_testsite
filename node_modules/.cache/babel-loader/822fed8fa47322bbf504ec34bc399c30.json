{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\client\\\\community\\\\MapViewCommunity.jsx\";\n\nimport React from \"react\";\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from \"google-maps-react\";\nimport Config from \"../../../config\"; // import HeartImg from \"../../../assets/images/heart.svg\";\n\nimport HeartImg from \"../../../assets/images/new-map-icon.png\";\n\nvar MapViewCommunity = function MapViewCommunity(props) {\n  var leadData = props.lead;\n  console.log(leadData, \"leadDataleadDataleadData\");\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      home = _React$useState2[0],\n      setHome = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      infoVisible = _React$useState4[0],\n      setInfoVisible = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activeMarker = _React$useState6[0],\n      setActiveMarker = _React$useState6[1];\n\n  var onMarkerClick = function onMarkerClick(marker, location) {\n    setHome(location);\n    setInfoVisible(true);\n    setActiveMarker(marker);\n  };\n\n  var closeInfo = function closeInfo(e) {\n    console.log(e);\n    setHome(null);\n    setInfoVisible(false);\n    setActiveMarker(null);\n  };\n\n  function mapConfig() {\n    var points = [];\n\n    if (leadData !== null) {\n      leadData.map(function (lead) {\n        if (lead.home !== null) {\n          points.push(lead.home.geo);\n        }\n      });\n    }\n\n    return points;\n  }\n\n  var mapPoints = mapConfig();\n  var initialMapCenter = leadData !== null && leadData.length > 0 && leadData[0].home !== null && leadData[0].home.geo !== null ? leadData[0].home.geo : mapPoints[0];\n  var mapBounds = new props.google.maps.LatLngBounds();\n\n  for (var i = 0; i < mapPoints.length; i++) {\n    mapBounds.extend(mapPoints[i]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      height: \"calc(100vh - 20px)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    style: {},\n    zoom: 7,\n    initialCenter: initialMapCenter,\n    google: props.google,\n    bounds: mapBounds,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, leadData.map(function (item, index) {\n    if (props.approvalType) {\n      if (item.approval === props.approvalType && item.home !== null) {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          name: \"Current location\",\n          icon: {\n            url: HeartImg,\n            anchor: new props.google.maps.Point(32, 45),\n            scaledSize: new props.google.maps.Size(32, 45)\n          },\n          position: {\n            lat: item.home.geo.lat,\n            lng: item.home.geo.lng\n          },\n          onClick: function onClick(_, marker) {\n            return onMarkerClick(marker, item.home);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        });\n      }\n    } else {\n      if (item.home !== null) {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          name: \"Current location\",\n          icon: {\n            url: HeartImg,\n            anchor: new props.google.maps.Point(32, 45),\n            scaledSize: new props.google.maps.Size(32, 45)\n          },\n          position: {\n            lat: item.home.geo.lat,\n            lng: item.home.geo.lng\n          },\n          onClick: function onClick(_, marker) {\n            return onMarkerClick(marker, item.home);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }), /*#__PURE__*/React.createElement(InfoWindow, {\n    visible: infoVisible,\n    marker: activeMarker,\n    onClose: function onClose(e) {\n      return closeInfo(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"100%\",\n      height: \"200px\",\n      backgroundPosition: \"center center\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    src: home && home.image ? \"\".concat(Config.API, \"/assets/\").concat(home.image) : \"https://via.placeholder.com/600X400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, home && home.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, home && home.address_line_1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, home && home.city, \" \", home && home.state, \" \", home && home.zip), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, home && home.country)))));\n};\n\nexport default GoogleApiWrapper({\n  apiKey: Config.googleMapsAPIkey\n})(MapViewCommunity);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/client/community/MapViewCommunity.jsx"],"names":["React","GoogleApiWrapper","Map","InfoWindow","Marker","Config","HeartImg","MapViewCommunity","props","leadData","lead","console","log","useState","home","setHome","infoVisible","setInfoVisible","activeMarker","setActiveMarker","onMarkerClick","marker","location","closeInfo","e","mapConfig","points","map","push","geo","mapPoints","initialMapCenter","length","mapBounds","google","maps","LatLngBounds","i","extend","position","height","item","index","approvalType","approval","url","anchor","Point","scaledSize","Size","lat","lng","_","width","backgroundPosition","backgroundRepeat","image","API","fontWeight","name","address_line_1","city","state","zip","country","apiKey","googleMapsAPIkey"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from \"google-maps-react\";\r\nimport Config from \"../../../config\";\r\n// import HeartImg from \"../../../assets/images/heart.svg\";\r\nimport HeartImg from \"../../../assets/images/new-map-icon.png\";\r\n\r\n\r\nconst MapViewCommunity = (props) => {\r\n  const leadData = props.lead;\r\n  console.log(leadData, \"leadDataleadDataleadData\");\r\n  const [home, setHome] = React.useState(null);\r\n  const [infoVisible, setInfoVisible] = React.useState(false);\r\n  const [activeMarker, setActiveMarker] = React.useState(null);\r\n\r\n  const onMarkerClick = (marker, location) => {\r\n    setHome(location);\r\n    setInfoVisible(true);\r\n    setActiveMarker(marker);\r\n  };\r\n\r\n  const closeInfo = (e) => {\r\n    console.log(e);\r\n    setHome(null);\r\n    setInfoVisible(false);\r\n    setActiveMarker(null);\r\n  };\r\n\r\n  function mapConfig() {\r\n    const points = [];\r\n    if (leadData !== null) {\r\n      leadData.map(function (lead) {\r\n        if (lead.home !== null) {\r\n          points.push(lead.home.geo);\r\n        }\r\n      });\r\n    }\r\n    return points;\r\n  }\r\n  const mapPoints = mapConfig();\r\n  const initialMapCenter =\r\n    leadData !== null &&\r\n      leadData.length > 0 &&\r\n      leadData[0].home !== null &&\r\n      leadData[0].home.geo !== null\r\n      ? leadData[0].home.geo\r\n      : mapPoints[0];\r\n  let mapBounds = new props.google.maps.LatLngBounds();\r\n  for (let i = 0; i < mapPoints.length; i++) {\r\n    mapBounds.extend(mapPoints[i]);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        height: \"calc(100vh - 20px)\",\r\n      }}\r\n    >\r\n      <Map\r\n        style={{}}\r\n        zoom={7}\r\n        initialCenter={initialMapCenter}\r\n        google={props.google}\r\n        bounds={mapBounds}\r\n      >\r\n        {leadData.map(function (item, index) {\r\n          if (props.approvalType) {\r\n            if (\r\n              item.approval === props.approvalType &&\r\n              item.home !== null\r\n            ) {\r\n              return (\r\n                <Marker\r\n                  key={index}\r\n                  name={\"Current location\"}\r\n                  icon={{\r\n                    url: HeartImg,\r\n                    anchor: new props.google.maps.Point(32, 45),\r\n                    scaledSize: new props.google.maps.Size(32, 45),\r\n                  }}\r\n                  position={{\r\n                    lat: item.home.geo.lat,\r\n                    lng: item.home.geo.lng,\r\n                  }}\r\n                  onClick={(_, marker) => onMarkerClick(marker, item.home)}\r\n                />\r\n              );\r\n            }\r\n          } else {\r\n            if (item.home !== null) {\r\n              return (\r\n                <Marker\r\n                  key={index}\r\n                  name={\"Current location\"}\r\n                  icon={{\r\n                    url: HeartImg,\r\n                    anchor: new props.google.maps.Point(32, 45),\r\n                    scaledSize: new props.google.maps.Size(32, 45),\r\n                  }}\r\n                  position={{\r\n                    lat: item.home.geo.lat,\r\n                    lng: item.home.geo.lng,\r\n                  }}\r\n                  onClick={(_, marker) => onMarkerClick(marker, item.home)}\r\n                />\r\n              );\r\n            }\r\n          }\r\n        })}\r\n\r\n        <InfoWindow\r\n          visible={infoVisible}\r\n          marker={activeMarker}\r\n          onClose={(e) => closeInfo(e)}\r\n        >\r\n          <div>\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"200px\",\r\n                backgroundPosition: \"center center\",\r\n                backgroundRepeat: \"no-repeat\",\r\n              }}\r\n              src={\r\n                home && home.image\r\n                  ? `${Config.API}/assets/${home.image}`\r\n                  : `https://via.placeholder.com/600X400`\r\n              }\r\n            />\r\n            <h1 style={{ fontWeight: \"bold\" }}>{home && home.name}</h1>\r\n            <p>{home && home.address_line_1}</p>\r\n            <p>\r\n              {home && home.city} {home && home.state} {home && home.zip}\r\n            </p>\r\n\r\n            <p>{home && home.country}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: Config.googleMapsAPIkey,\r\n})(MapViewCommunity);\r\n"]},"metadata":{},"sourceType":"module"}
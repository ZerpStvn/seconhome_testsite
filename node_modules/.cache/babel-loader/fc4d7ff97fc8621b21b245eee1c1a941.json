{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\components\\\\forms\\\\locator.js\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker, Circle } from \"google-maps-react\";\nimport { Button, Row, Col, Input, AutoComplete } from \"antd\";\nimport Geocode from \"react-geocode\";\nimport Config from \"../../config\";\nimport axios from \"axios\";\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nvar mapStyles = {\n  container: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"400px\"\n  },\n  map: {\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n};\nvar googleMapsAPIkey = Config.googleMapsAPIkey || 'AIzaSyA6eaMRrfLzlYUe-H1sL6D9tkVXjS6O7BQ';\nGeocode.setApiKey(googleMapsAPIkey); //Geocode.enableDebug();\n\nvar Locator = /*#__PURE__*/function (_Component) {\n  _inherits(Locator, _Component);\n\n  function Locator(props) {\n    var _this;\n\n    _classCallCheck(this, Locator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Locator).call(this, props));\n\n    _this.autoCenterMap = function (_ref, map) {\n      var google = _ref.google;\n      _this._map = map;\n      var bounds = new google.maps.LatLngBounds();\n\n      if (typeof _this.state.markers !== \"undefined\" && _this.state.markers.length > 0) {\n        _this.state.markers.forEach(function (mrk) {\n          var lat = mrk.lat,\n              lng = mrk.lng;\n          map.panTo({\n            lat: lat,\n            lng: lng\n          });\n          bounds.extend(new google.maps.LatLng(lat, lng));\n        });\n      }\n    };\n\n    _this.getLatLngFromAddress = function () {\n      _this.setState({\n        geocodeError: \"\",\n        locateBtnText: \"Please wait..\"\n      });\n\n      var address = _this.state.address;\n\n      if (address !== \"\") {\n        Geocode.fromAddress(address).then(function (response) {\n          _this.setState({\n            locateBtnText: \"Locate\",\n            latLngFromAddress: response.results[0].geometry.location\n          });\n\n          _this.setState({\n            markers: [{\n              lat: response.results[0].geometry.location.lat,\n              lng: response.results[0].geometry.location.lng\n            }],\n            showingInfoWindow: true,\n            showingDetails: true,\n            zoom: _this.state.zoom\n          }, function () {\n            var position = {\n              lat: response.results[0].geometry.location.lat,\n              lng: response.results[0].geometry.location.lng\n            };\n\n            _this.getAddressFromLatLng(position).then(function (response) {\n              _this.setState({\n                locateBtnDisabled: !(response.address && response.address !== '' || _this.state.address && _this.state.address !== ''),\n                address: response.address,\n                locationObj: response\n              }, function () {\n                return _this.onChangeLatLngOrDragMarker(position, false);\n              });\n            });\n          });\n\n          _this._map.panTo(response.results[0].geometry.location);\n        }).catch(function (e) {\n          _this.setState({\n            geocodeError: \"No results found. Please try with different keywords.\",\n            locateBtnText: \"Locate\"\n          });\n        });\n      }\n    };\n\n    _this.getLatLngFromAddress2 = function (address) {\n      _this.setState({\n        geocodeError: \"\",\n        locateBtnText: \"Please wait..\"\n      });\n\n      if (address !== \"\") {\n        Geocode.fromAddress(address).then(function (response) {\n          _this.setState({\n            locateBtnText: \"Locate\",\n            latLngFromAddress: response.results[0].geometry.location\n          });\n\n          _this.setState({\n            markers: [{\n              lat: response.results[0].geometry.location.lat,\n              lng: response.results[0].geometry.location.lng\n            }],\n            showingInfoWindow: true,\n            showingDetails: true,\n            zoom: _this.state.zoom\n          }, function () {\n            var position = {\n              lat: response.results[0].geometry.location.lat,\n              lng: response.results[0].geometry.location.lng\n            };\n\n            _this.getAddressFromLatLng(position).then(function (response) {\n              _this.setState({\n                locateBtnDisabled: !(response.address && response.address !== '' || _this.state.address && _this.state.address !== ''),\n                address: response.address,\n                locationObj: response\n              }, function () {\n                return _this.onChangeLatLngOrDragMarker(position, false);\n              });\n            });\n          });\n\n          _this._map.panTo(response.results[0].geometry.location);\n        }).catch(function (e) {\n          _this.setState({\n            geocodeError: \"No results found. Please try with different keywords.\",\n            locateBtnText: \"Locate\"\n          });\n        });\n      }\n    };\n\n    _this.onMarkerDrag = function (_props, marker) {\n      var tempMarker = _this.state.markers[0];\n      var position = {\n        lat: marker.position.lat(),\n        lng: marker.position.lng()\n      };\n\n      _this.getAddressFromLatLng(position).then(function (response) {\n        _this.setState({\n          locateBtnDisabled: !(response.address && response.address !== '' || _this.state.address && _this.state.address !== ''),\n          address: response.address,\n          locationObj: response\n        }, function () {\n          return _this.onChangeLatLngOrDragMarker(position, false);\n        });\n      });\n\n      tempMarker.lat = position.lat;\n      tempMarker.lng = position.lng;\n\n      if (_this.circleRef !== null && _this.circleRef.circle !== null) {\n        _this.circleRef.circle.center = position;\n      }\n\n      _this.setState({\n        markers: [tempMarker]\n      }, function () {\n        return _this.onChangeLatLngOrDragMarker(position, false);\n      });\n    };\n\n    _this.onLatChange = function (e) {\n      var position = {\n        lat: e.currentTarget.value,\n        lng: _this.state.markers.length > 0 && _this.state.markers[0].lng ? _this.state.markers[0].lng : 0\n      };\n\n      _this.getAddressFromLatLng(position).then(function (response) {\n        _this.setState({\n          locateBtnDisabled: !(response.address && response.address !== '' || _this.state.address && _this.state.address !== ''),\n          address: response.address,\n          locationObj: response\n        }, function () {\n          return _this.onChangeLatLngOrDragMarker(position);\n        });\n      });\n\n      _this.setState({\n        markers: [position]\n      }, function () {\n        return _this.onChangeLatLngOrDragMarker(position);\n      });\n    };\n\n    _this.onLngChange = function (e) {\n      var position = {\n        lat: _this.state.markers.length > 0 && _this.state.markers[0].lat ? _this.state.markers[0].lat : 0,\n        lng: e.currentTarget.value\n      };\n\n      _this.getAddressFromLatLng(position).then(function (response) {\n        _this.setState({\n          locateBtnDisabled: !(response.address && response.address !== '' || _this.state.address && _this.state.address !== ''),\n          address: response.address,\n          locationObj: response\n        }, function () {\n          return _this.onChangeLatLngOrDragMarker(position);\n        });\n      });\n\n      _this.setState({\n        markers: [position]\n      }, function () {\n        return _this.onChangeLatLngOrDragMarker(position);\n      });\n    };\n\n    _this.onChangeLatLngOrDragMarker = function (position, focus) {\n      if (typeof focus === 'undefined') {\n        focus = true;\n      }\n\n      _this.props.on_locate(position, _this.state.locationObj);\n    };\n\n    _this.onChangeLocatorLocation = function (e) {\n      var _locationObj = _this.state.locationObj; // debugger;\n\n      _locationObj.address = e.currentTarget.value;\n\n      _this.setState({\n        locateBtnDisabled: !(e.currentTarget.value !== ''),\n        address: e.currentTarget.value,\n        locationObj: _locationObj\n      }, function () {\n        _this.z(null, false);\n      });\n    };\n\n    _this.onPressLocatorEnterKey = function (e) {\n      if (e.currentTarget.value !== '') {\n        var code = e.keyCode || e.which;\n\n        if (code === 13) {\n          _this.getLatLngFromAddress();\n\n          e.preventDefault();\n        }\n      }\n    };\n\n    _this.getAddressFromLatLng = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(position) {\n        var _locationObj;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _locationObj = _this.state.locationObj;\n                _context.next = 3;\n                return Geocode.fromLatLng(position.lat, position.lng).then(function (positionDetails) {\n                  var addressComponent = positionDetails.results[0];\n                  var drCountryAlpha = '';\n\n                  if (positionDetails && positionDetails.plus_code && positionDetails.plus_code.compound_code) {\n                    drCountryAlpha = positionDetails.plus_code.compound_code.split(',');\n                    drCountryAlpha = drCountryAlpha[drCountryAlpha.length - 1].trim();\n                  }\n\n                  var drCountry = positionDetails.results.find(function (r) {\n                    return r.types.indexOf(\"country\") > -1;\n                  });\n\n                  if (drCountry && drCountry.formatted_address) {\n                    drCountry = drCountry.formatted_address;\n                  }\n\n                  var drState = positionDetails.results.find(function (r) {\n                    return r.types.indexOf(\"administrative_area_level_1\") > -1;\n                  });\n                  var acState = drState.address_components.find(function (r) {\n                    return r.types.indexOf(\"administrative_area_level_1\") > -1;\n                  });\n\n                  if (acState && acState.long_name) {\n                    _locationObj.state = acState.long_name;\n                  }\n\n                  var drCounty = positionDetails.results.find(function (r) {\n                    return r.types.indexOf(\"administrative_area_level_2\") > -1;\n                  });\n                  var acCounty = drCounty.address_components.find(function (r) {\n                    return r.types.indexOf(\"administrative_area_level_2\") > -1;\n                  });\n\n                  if (acCounty && acCounty.long_name) {\n                    _locationObj.county = acCounty.long_name;\n                  } // debugger;\n\n\n                  // debugger;\n                  var drCity = positionDetails.results.find(function (r) {\n                    return r.types.indexOf(\"locality\") > -1;\n                  });\n\n                  if (drCity) {\n                    var acCity = drCity.address_components.find(function (r) {\n                      return r.types.indexOf(\"locality\") > -1;\n                    });\n\n                    if (acCity && acCity.long_name) {\n                      _locationObj.city = acCity.long_name;\n                    }\n                  }\n\n                  var drZip = positionDetails.results.find(function (r) {\n                    return r.types.indexOf(\"postal_code\") > -1;\n                  });\n                  var acZip = drZip.address_components.find(function (r) {\n                    return r.types.indexOf(\"postal_code\") > -1;\n                  });\n\n                  if (acZip && acZip.long_name) {\n                    _locationObj.zip = acZip.long_name;\n                  }\n\n                  var drAddress = positionDetails.results[0];\n\n                  if (drAddress && drAddress.formatted_address) {\n                    drAddress = drAddress.formatted_address.replace(drCountryAlpha, \"\");\n                    drAddress = drAddress.replace(drCountry, \"\");\n                    drAddress = drAddress.replace(_locationObj.state, \"\");\n                    drAddress = drAddress.replace(_locationObj.county, \"\");\n                    drAddress = drAddress.replace(acState.short_name, \"\");\n                    drAddress = drAddress.replace(_locationObj.city, \"\");\n                    drAddress = drAddress.replace(_locationObj.zip, \"\");\n                    drAddress = drAddress.replace(_locationObj.county, \"\");\n                    drAddress = drAddress.replace(/,/g, \"\").trim();\n                    _locationObj.address = drAddress;\n                  }\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _locationObj);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.textInput = React.createRef();\n    _this.mapRef = React.createRef();\n    _this.circleRef = React.createRef();\n    _this.markerRef = React.createRef();\n    _this.addressInput = React.createRef();\n    _this.state = {\n      markers: [],\n      cloneMarkers: [],\n      locations: [],\n      activeMarker: {},\n      showingDetails: true,\n      latLngFromAddress: {},\n      zoom: 17,\n      formData: \"\",\n      geocodeError: \"\",\n      locateBtnText: \"Locate\",\n      radiusdata: [],\n      isCheckbox: false,\n      locateBtnDisabled: true,\n      locationObj: {\n        address: null,\n        address_2: null,\n        city: null,\n        state: null,\n        zip: null\n      },\n      addressOptions: []\n    };\n    _this.onMarkerDrag = _this.onMarkerDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLngChange = _this.onLngChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._map = null;\n    return _this;\n  }\n\n  _createClass(Locator, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var position;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                position = {};\n\n                if (this.props.cords && this.props.cords.lat && this.props.cords.lat !== \"\") {\n                  position.lat = parseFloat(this.props.cords.lat);\n                  position.lng = parseFloat(this.props.cords.lng);\n                  this.setState({\n                    markers: [position],\n                    zoom: this.state.zoom\n                  });\n                } else {\n                  if (navigator.geolocation) {\n                    navigator.geolocation.getCurrentPosition(function (pos) {\n                      position.lat = pos.coords.latitude;\n                      position.lng = pos.coords.longitude;\n\n                      _this2.setState({\n                        markers: [position],\n                        zoom: _this2.state.zoom\n                      }, function () {\n                        return _this2.onChangeLatLngOrDragMarker(position, false);\n                      });\n                    }, function () {\n                      position.lat = 43.653225;\n                      position.lng = -79.383186;\n\n                      _this2.setState({\n                        markers: [position],\n                        zoom: _this2.state.zoom\n                      }, function () {\n                        return _this2.onChangeLatLngOrDragMarker(position, false);\n                      });\n                    });\n                  } else {\n                    position.lat = 43.653225;\n                    position.lng = -79.383186;\n                    this.setState({\n                      markers: [position],\n                      zoom: this.state.zoom\n                    }, function () {\n                      return _this2.onChangeLatLngOrDragMarker(position, false);\n                    });\n                  }\n                }\n\n                if (this.props.defaultAddress) {\n                  this.setState({\n                    address: this.props.defaultAddress\n                  });\n                }\n                /* if(this.markerRef !== null && this.markerRef.current && this.circleRef !== null && this.circleRef.current){\r\n                  this.markerRef.current.addListener('drag', function(event) {                     \r\n                    this.circleRef.current.setOptions({center:{lat:event.latLng.lat(),lng:event.latLng.lng()}});        \r\n                  });\r\n                } */\n\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"UserMap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        sm: 12,\n        className: this.props.nullAddressError ? \"ant-form-item-has-error\" : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n        selectProps: {\n          placeholder: \"Enter Address\",\n          value: this.state.address,\n          onChange: function onChange(value) {\n            _this3.setState({\n              address: value.label\n            });\n\n            _this3.getLatLngFromAddress2(value.label);\n          }\n        },\n        apiKey: Config.googleMapsAPIkey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }), this.props.nullAddressError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ant-col ant-form-item-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ant-form-item-explain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 92\n        }\n      }, \"Address is required.\")))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 24,\n        style: {\n          display: this.state.geocodeError !== \"\" ? 'block' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }\n      }, this.state.geocodeError)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 9\n        }\n      }), this.state.markers.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        gutter: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginBottom: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }\n      }, \"Latitude\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Latitude\",\n        type: \"text\",\n        value: this.state.markers[0].lat ? this.state.markers[0].lat : \"\",\n        onChange: this.onLatChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginBottom: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 17\n        }\n      }, \"Longitude\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Longitude\",\n        type: \"text\",\n        value: this.state.markers[0].lng ? this.state.markers[0].lng : \"\",\n        onChange: this.onLngChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }\n      })) : '', /*#__PURE__*/React.createElement(Row, {\n        gutter: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: mapStyles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }\n      }, this.state.markers.length > 0 && /*#__PURE__*/React.createElement(Map, {\n        ref: function ref(_ref5) {\n          return _this3.mapRef = _ref5;\n        },\n        google: this.props.google,\n        zoom: this.state.zoom,\n        style: mapStyles,\n        onReady: this.autoCenterMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 17\n        }\n      }, this.props.radius > 0 && this.state.markers[0].lat ? /*#__PURE__*/React.createElement(Circle, {\n        ref: function ref(_ref3) {\n          return _this3.circleRef = _ref3;\n        },\n        center: this.state.markers[0],\n        radius: this.props.radius,\n        strokeColor: \"#0000FF\",\n        strokeOpacity: 0.2,\n        strokeWeight: 1,\n        fillColor: \"#0000FF\",\n        fillOpacity: 0.2,\n        editable: false,\n        draggable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }\n      }) : \"\", this.state.markers.map(function (place, i) {\n        return /*#__PURE__*/React.createElement(Marker, {\n          ref: function ref(_ref4) {\n            return _this3.markerRef = _ref4;\n          },\n          key: i,\n          place_: place,\n          position: {\n            lat: place.lat,\n            lng: place.lng\n          },\n          draggable: true,\n          onDragend: _this3.onMarkerDrag,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 23\n          }\n        });\n      }))))));\n    }\n  }]);\n\n  return Locator;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: googleMapsAPIkey\n})(Locator);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/components/forms/locator.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","Circle","Button","Row","Col","Input","AutoComplete","Geocode","Config","axios","GooglePlacesAutocomplete","mapStyles","container","position","width","height","map","left","right","bottom","top","googleMapsAPIkey","setApiKey","Locator","props","autoCenterMap","google","_map","bounds","maps","LatLngBounds","state","markers","length","forEach","mrk","lat","lng","panTo","extend","LatLng","getLatLngFromAddress","setState","geocodeError","locateBtnText","address","fromAddress","then","response","latLngFromAddress","results","geometry","location","showingInfoWindow","showingDetails","zoom","getAddressFromLatLng","locateBtnDisabled","locationObj","onChangeLatLngOrDragMarker","catch","e","getLatLngFromAddress2","onMarkerDrag","_props","marker","tempMarker","circleRef","circle","center","onLatChange","currentTarget","value","onLngChange","focus","on_locate","onChangeLocatorLocation","_locationObj","z","onPressLocatorEnterKey","code","keyCode","which","preventDefault","fromLatLng","positionDetails","addressComponent","drCountryAlpha","plus_code","compound_code","split","trim","drCountry","find","r","types","indexOf","formatted_address","drState","acState","address_components","long_name","drCounty","acCounty","county","drCity","acCity","city","drZip","acZip","zip","drAddress","replace","short_name","textInput","createRef","mapRef","markerRef","addressInput","cloneMarkers","locations","activeMarker","formData","radiusdata","isCheckbox","address_2","addressOptions","bind","cords","parseFloat","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","defaultAddress","nullAddressError","placeholder","onChange","label","display","color","marginBottom","ref","radius","place","i","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, Circle } from \"google-maps-react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  AutoComplete\r\n} from \"antd\";\r\nimport Geocode from \"react-geocode\";\r\nimport Config from \"../../config\"\r\nimport axios from \"axios\";\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\n\r\n\r\nvar mapStyles = {\r\n  container: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"400px\"\r\n  },\r\n  map: {\r\n    position: \"relative\",\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    top: 0\r\n  }\r\n};\r\n\r\nconst googleMapsAPIkey = Config.googleMapsAPIkey || 'AIzaSyA6eaMRrfLzlYUe-H1sL6D9tkVXjS6O7BQ';\r\n\r\nGeocode.setApiKey(googleMapsAPIkey);\r\n//Geocode.enableDebug();\r\n\r\nclass Locator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInput = React.createRef();\r\n    this.mapRef = React.createRef();\r\n    this.circleRef = React.createRef();\r\n    this.markerRef = React.createRef();\r\n    this.addressInput = React.createRef();\r\n    this.state = {\r\n      markers: [],\r\n      cloneMarkers: [],\r\n      locations: [],\r\n      activeMarker: {},\r\n      showingDetails: true,\r\n      latLngFromAddress: {},\r\n      zoom: 17,\r\n      formData: \"\",\r\n      geocodeError: \"\",\r\n      locateBtnText: \"Locate\",\r\n      radiusdata: [],\r\n      isCheckbox: false,\r\n      locateBtnDisabled: true,\r\n      locationObj: {\r\n        address: null,\r\n        address_2: null,\r\n        city: null,\r\n        state: null,\r\n        zip: null\r\n      },\r\n      addressOptions: []\r\n    };\r\n    this.onMarkerDrag = this.onMarkerDrag.bind(this);\r\n    this.onLngChange = this.onLngChange.bind(this);\r\n    this._map = null;\r\n  }\r\n\r\n  autoCenterMap = ({ google }, map) => {\r\n    this._map = map;\r\n    const bounds = new google.maps.LatLngBounds();\r\n    if (\r\n      typeof this.state.markers !== \"undefined\" &&\r\n      this.state.markers.length > 0\r\n    ) {\r\n      this.state.markers.forEach(mrk => {\r\n        const { lat, lng } = mrk;\r\n        map.panTo({ lat, lng });\r\n        bounds.extend(new google.maps.LatLng(lat, lng));\r\n      });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let position = {};\r\n    if (this.props.cords && this.props.cords.lat && this.props.cords.lat !== \"\") {\r\n      position.lat = parseFloat(this.props.cords.lat);\r\n      position.lng = parseFloat(this.props.cords.lng);\r\n      this.setState({\r\n        markers: [position],\r\n        zoom: this.state.zoom\r\n      });\r\n    } else {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          pos => {\r\n            position.lat = pos.coords.latitude;\r\n            position.lng = pos.coords.longitude;\r\n\r\n            this.setState({\r\n              markers: [position],\r\n              zoom: this.state.zoom\r\n            }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n          },\r\n          () => {\r\n            position.lat = 43.653225;\r\n            position.lng = -79.383186;\r\n            this.setState({\r\n              markers: [position],\r\n              zoom: this.state.zoom\r\n            }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n          }\r\n        );\r\n      } else {\r\n        position.lat = 43.653225;\r\n        position.lng = -79.383186;\r\n        this.setState({\r\n          markers: [position],\r\n          zoom: this.state.zoom\r\n        }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n      }\r\n    }\r\n    if (this.props.defaultAddress) {\r\n      this.setState({\r\n        address: this.props.defaultAddress\r\n      })\r\n    }\r\n    /* if(this.markerRef !== null && this.markerRef.current && this.circleRef !== null && this.circleRef.current){\r\n      this.markerRef.current.addListener('drag', function(event) {                     \r\n        this.circleRef.current.setOptions({center:{lat:event.latLng.lat(),lng:event.latLng.lng()}});        \r\n      });\r\n    } */\r\n  }\r\n\r\n  getLatLngFromAddress = () => {\r\n    this.setState({ geocodeError: \"\", locateBtnText: \"Please wait..\" });\r\n    let address = this.state.address;\r\n    if (address !== \"\") {\r\n      Geocode.fromAddress(address).then(\r\n        response => {\r\n          this.setState({\r\n            locateBtnText: \"Locate\",\r\n            latLngFromAddress: response.results[0].geometry.location\r\n          });\r\n          this.setState({\r\n            markers: [\r\n              {\r\n                lat: response.results[0].geometry.location.lat,\r\n                lng: response.results[0].geometry.location.lng\r\n              }\r\n\r\n            ],\r\n            showingInfoWindow: true,\r\n            showingDetails: true,\r\n            zoom: this.state.zoom\r\n          }, () => {\r\n            let position = {\r\n              lat: response.results[0].geometry.location.lat,\r\n              lng: response.results[0].geometry.location.lng\r\n            };\r\n            this.getAddressFromLatLng(position).then(response => {\r\n              this.setState({\r\n                locateBtnDisabled: !((response.address && response.address !== '') || (this.state.address && this.state.address !== '')),\r\n                address: response.address,\r\n                locationObj: response\r\n              }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n            });\r\n          });\r\n          this._map.panTo(response.results[0].geometry.location);\r\n        }\r\n      ).catch(e => {\r\n        this.setState({ geocodeError: \"No results found. Please try with different keywords.\", locateBtnText: \"Locate\" });\r\n      });\r\n    }\r\n  };\r\n\r\n  getLatLngFromAddress2 = (address) => {\r\n    this.setState({ geocodeError: \"\", locateBtnText: \"Please wait..\" });\r\n    if (address !== \"\") {\r\n      Geocode.fromAddress(address).then(\r\n        response => {\r\n          this.setState({\r\n            locateBtnText: \"Locate\",\r\n            latLngFromAddress: response.results[0].geometry.location\r\n          });\r\n          this.setState({\r\n            markers: [\r\n              {\r\n                lat: response.results[0].geometry.location.lat,\r\n                lng: response.results[0].geometry.location.lng\r\n              }\r\n\r\n            ],\r\n            showingInfoWindow: true,\r\n            showingDetails: true,\r\n            zoom: this.state.zoom\r\n          }, () => {\r\n            let position = {\r\n              lat: response.results[0].geometry.location.lat,\r\n              lng: response.results[0].geometry.location.lng\r\n            };\r\n            this.getAddressFromLatLng(position).then(response => {\r\n              this.setState({\r\n                locateBtnDisabled: !((response.address && response.address !== '') || (this.state.address && this.state.address !== '')),\r\n                address: response.address,\r\n                locationObj: response\r\n              }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n            });\r\n          });\r\n          this._map.panTo(response.results[0].geometry.location);\r\n        }\r\n      ).catch(e => {\r\n        this.setState({ geocodeError: \"No results found. Please try with different keywords.\", locateBtnText: \"Locate\" });\r\n      });\r\n    }\r\n  };\r\n\r\n  onMarkerDrag = (_props, marker) => {\r\n    let tempMarker = this.state.markers[0];\r\n    let position = {\r\n      lat: marker.position.lat(),\r\n      lng: marker.position.lng()\r\n    };\r\n    this.getAddressFromLatLng(position).then(response => {\r\n      this.setState({\r\n        locateBtnDisabled: !((response.address && response.address !== '') || (this.state.address && this.state.address !== '')),\r\n        address: response.address,\r\n        locationObj: response\r\n      }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n    });\r\n    tempMarker.lat = position.lat;\r\n    tempMarker.lng = position.lng;\r\n    if (this.circleRef !== null && this.circleRef.circle !== null) {\r\n      this.circleRef.circle.center = (position);\r\n    }\r\n    this.setState({ markers: [tempMarker] }, () => this.onChangeLatLngOrDragMarker(position, false));\r\n  };\r\n\r\n  onLatChange = (e) => {\r\n    let position = {\r\n      lat: e.currentTarget.value,\r\n      lng: this.state.markers.length > 0 && this.state.markers[0].lng ? this.state.markers[0].lng : 0\r\n    };\r\n    this.getAddressFromLatLng(position).then(response => {\r\n      this.setState({\r\n        locateBtnDisabled: !((response.address && response.address !== '') || (this.state.address && this.state.address !== '')),\r\n        address: response.address,\r\n        locationObj: response\r\n      }, () => this.onChangeLatLngOrDragMarker(position));\r\n    });\r\n    this.setState({\r\n      markers: [position]\r\n    }, () => this.onChangeLatLngOrDragMarker(position));\r\n  }\r\n\r\n  onLngChange = (e) => {\r\n    let position = {\r\n      lat: this.state.markers.length > 0 && this.state.markers[0].lat ? this.state.markers[0].lat : 0,\r\n      lng: e.currentTarget.value\r\n    };\r\n    this.getAddressFromLatLng(position).then(response => {\r\n      this.setState({\r\n        locateBtnDisabled: !((response.address && response.address !== '') || (this.state.address && this.state.address !== '')),\r\n        address: response.address,\r\n        locationObj: response\r\n      }, () => this.onChangeLatLngOrDragMarker(position));\r\n    });\r\n    this.setState({\r\n      markers: [position]\r\n    }, () => this.onChangeLatLngOrDragMarker(position));\r\n  }\r\n\r\n  onChangeLatLngOrDragMarker = (position, focus) => {\r\n    if (typeof focus === 'undefined') {\r\n      focus = true;\r\n    }\r\n    this.props.on_locate(position, this.state.locationObj);\r\n  }\r\n\r\n  onChangeLocatorLocation = (e) => {\r\n    let _locationObj = this.state.locationObj;\r\n    // debugger;\r\n    _locationObj.address = e.currentTarget.value;\r\n    this.setState({\r\n      locateBtnDisabled: !(e.currentTarget.value !== ''),\r\n      address: e.currentTarget.value,\r\n      locationObj: _locationObj\r\n    }, () => {\r\n      this.z(null, false);\r\n    });\r\n  }\r\n\r\n  onPressLocatorEnterKey = (e) => {\r\n    if (e.currentTarget.value !== '') {\r\n      var code = e.keyCode || e.which;\r\n      if (code === 13) {\r\n        this.getLatLngFromAddress();\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAddressFromLatLng = async (position) => {\r\n    let _locationObj = this.state.locationObj;\r\n    await Geocode.fromLatLng(position.lat, position.lng).then(positionDetails => {\r\n      let addressComponent = positionDetails.results[0];\r\n\r\n      let drCountryAlpha = '';\r\n      if (positionDetails && positionDetails.plus_code && positionDetails.plus_code.compound_code) {\r\n        drCountryAlpha = positionDetails.plus_code.compound_code.split(',');\r\n        drCountryAlpha = drCountryAlpha[drCountryAlpha.length - 1].trim();\r\n      }\r\n\r\n      let drCountry = positionDetails.results.find(r => r.types.indexOf(\"country\") > -1);\r\n      if (drCountry && drCountry.formatted_address) {\r\n        drCountry = drCountry.formatted_address;\r\n      }\r\n\r\n      let drState = positionDetails.results.find(r => r.types.indexOf(\"administrative_area_level_1\") > -1);\r\n      let acState = drState.address_components.find(r => r.types.indexOf(\"administrative_area_level_1\") > -1);\r\n      if (acState && acState.long_name) {\r\n        _locationObj.state = acState.long_name;\r\n      }\r\n      let drCounty = positionDetails.results.find(r => r.types.indexOf(\"administrative_area_level_2\") > -1);\r\n      let acCounty = drCounty.address_components.find(r => r.types.indexOf(\"administrative_area_level_2\") > -1);\r\n      if (acCounty && acCounty.long_name) {\r\n        _locationObj.county = acCounty.long_name;\r\n      }\r\n      // debugger;\r\n      let drCity = positionDetails.results.find(r => r.types.indexOf(\"locality\") > -1);\r\n      if (drCity) {\r\n        let acCity = drCity.address_components.find(r => r.types.indexOf(\"locality\") > -1);\r\n        if (acCity && acCity.long_name) {\r\n          _locationObj.city = acCity.long_name;\r\n        }\r\n      }\r\n\r\n\r\n      let drZip = positionDetails.results.find(r => r.types.indexOf(\"postal_code\") > -1);\r\n      let acZip = drZip.address_components.find(r => r.types.indexOf(\"postal_code\") > -1);\r\n      if (acZip && acZip.long_name) {\r\n        _locationObj.zip = acZip.long_name;\r\n      }\r\n\r\n\r\n      let drAddress = positionDetails.results[0];\r\n      if (drAddress && drAddress.formatted_address) {\r\n        drAddress = drAddress.formatted_address.replace(drCountryAlpha, \"\");\r\n        drAddress = drAddress.replace(drCountry, \"\");\r\n        drAddress = drAddress.replace(_locationObj.state, \"\");\r\n        drAddress = drAddress.replace(_locationObj.county, \"\");\r\n        drAddress = drAddress.replace(acState.short_name, \"\");\r\n        drAddress = drAddress.replace(_locationObj.city, \"\");\r\n        drAddress = drAddress.replace(_locationObj.zip, \"\");\r\n        drAddress = drAddress.replace(_locationObj.county, \"\");\r\n        drAddress = drAddress.replace(/,/g, \"\").trim();\r\n        _locationObj.address = drAddress;\r\n      }\r\n    });\r\n    return _locationObj;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"UserMap\">\r\n        <Row gutter={24}>\r\n          <Col xs={24} sm={12} className={this.props.nullAddressError ? \"ant-form-item-has-error\" : ''}>\r\n            {/* <Input \r\n              placeholder=\"Type address here...\"\r\n              type=\"text\"\r\n              ref={this.addressInput}\r\n              value={\r\n                this.state.address ? this.state.address : \"\"\r\n              }\r\n              onChange={this.onChangeLocatorLocation}\r\n              onKeyPress={this.onPressLocatorEnterKey}\r\n            /> */}\r\n            <GooglePlacesAutocomplete selectProps={{ placeholder: \"Enter Address\", value: this.state.address, onChange: (value) => { this.setState({ address: value.label }); this.getLatLngFromAddress2(value.label) } }} apiKey={Config.googleMapsAPIkey} />\r\n            {this.props.nullAddressError && <div className=\"ant-col ant-form-item-control\"><div className=\"ant-form-item-explain\">Address is required.</div></div>}\r\n          </Col>\r\n          {/* <Col xs={24} sm={12}>\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"ant-btn ant-input-search-button ant-btn-primary ant-btn-lg\"\r\n              htmlType=\"button\"\r\n              onClick={this.getLatLngFromAddress}\r\n              disabled={this.state.locateBtnDisabled}\r\n            >\r\n              {this.state.locateBtnText}\r\n            </Button>\r\n          </Col> */}\r\n        </Row>\r\n        <Row gutter={24} style={{ display: (this.state.geocodeError !== \"\") ? 'block' : 'none' }}>\r\n          <p style={{ color: \"red\" }}>{this.state.geocodeError}</p>\r\n        </Row>\r\n        <br />\r\n        {this.state.markers.length > 0 ?\r\n          (<>\r\n            <Row gutter={24}>\r\n              <Col xs={24} sm={12}>\r\n                <span style={{ display: 'block', marginBottom: 7 }}>Latitude</span>\r\n                <Input\r\n                  placeholder=\"Latitude\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.markers[0].lat ? this.state.markers[0].lat : \"\"\r\n                  }\r\n                  onChange={this.onLatChange}\r\n                />\r\n              </Col>\r\n              <Col xs={24} sm={12}>\r\n                <span style={{ display: 'block', marginBottom: 7 }}>Longitude</span>\r\n                <Input\r\n                  placeholder=\"Longitude\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.markers[0].lng ? this.state.markers[0].lng : \"\"\r\n                  }\r\n                  onChange={this.onLngChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n          </>)\r\n          : ''}\r\n        <Row gutter={24}>\r\n          <Col xs={24}>\r\n            <div style={mapStyles.container}>\r\n              {this.state.markers.length > 0 && (\r\n                <Map\r\n                  ref={(ref) => this.mapRef = ref}\r\n                  google={this.props.google}\r\n                  zoom={this.state.zoom}\r\n                  style={mapStyles}\r\n                  onReady={this.autoCenterMap}\r\n                >\r\n                  {this.props.radius > 0 && this.state.markers[0].lat ?\r\n                    <Circle\r\n                      ref={(ref) => this.circleRef = ref}\r\n                      center={this.state.markers[0]}\r\n                      radius={this.props.radius}\r\n                      strokeColor=\"#0000FF\"\r\n                      strokeOpacity={0.2}\r\n                      strokeWeight={1}\r\n                      fillColor=\"#0000FF\"\r\n                      fillOpacity={0.2}\r\n                      editable={false}\r\n                      draggable={false}\r\n                    />\r\n                    : \"\"}\r\n\r\n                  {this.state.markers.map((place, i) => {\r\n                    return (\r\n                      <Marker\r\n                        ref={(ref) => this.markerRef = ref}\r\n                        key={i}\r\n                        place_={place}\r\n                        position={{ lat: place.lat, lng: place.lng }}\r\n                        draggable={true}\r\n                        onDragend={this.onMarkerDrag}\r\n                      ></Marker>\r\n                    );\r\n                  })}\r\n                </Map>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper({ apiKey: googleMapsAPIkey })(Locator);"]},"metadata":{},"sourceType":"module"}
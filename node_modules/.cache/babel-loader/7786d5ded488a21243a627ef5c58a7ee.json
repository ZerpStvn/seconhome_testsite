{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\components\\\\shared\\\\displayCard\\\\DisplayCard.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, Divider, Button, Modal, Input, Form, Spin, List, Avatar, Descriptions, AutoComplete } from \"antd\";\nimport { EyeOutlined, LikeOutlined, DislikeOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { homeCareOfferedOptions } from \"../../../constants/defaultValues\";\nimport Config from \"../../../config\";\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\nimport { createLeadClientMessage } from \"../../../redux/actions/lead-client-actions\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport NotesListCard from \"./NotesListCard\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport avatar from '../../../assets/images/notes.png';\nvar Meta = Card.Meta;\nvar TextArea = Input.TextArea;\n\nvar DisplayCard = function DisplayCard(_ref) {\n  var name = _ref.name,\n      address = _ref.address,\n      approval = _ref.approval,\n      coverImage = _ref.coverImage,\n      liked = _ref.liked,\n      lead = _ref.lead,\n      notes = _ref.notes,\n      leadClientId = _ref.leadClientId,\n      leadClientName = _ref.leadClientName,\n      leadClientPhone = _ref.leadClientPhone,\n      home = _ref.home,\n      homeID = _ref.homeID,\n      rooms = _ref.rooms;\n  var data = {\n    leads: {\n      _filter: {\n        lead: {\n          _and: [{\n            status: {\n              _eq: \"accepted\"\n            }\n          }, {\n            approval: {\n              _eq: \"accepted\"\n            }\n          }]\n        }\n      }\n    }\n  };\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var leadID = lead.id;\n  var imageUrl = coverImage ? \"\".concat(Config.API, \"/assets/\").concat(coverImage) : null;\n  var badgeBG = approval === \"accepted\" ? \"#52c41a\" : approval === \"pending\" ? \"#ff6d00\" : \"#ff0000\";\n  var likeColor = liked == true ? \"#008000\" : \"#000\";\n  var dislikeColor = liked == false ? \"#ff0000\" : \"#000\";\n\n  var _useState = useState(lead && lead.notes !== null ? \"#0000ff\" : \"#000\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      noteIconColor = _useState2[0],\n      setNoteIconColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openNote = _useState4[0],\n      setOpenNote = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openConnect = _useState6[0],\n      setOpenConnect = _useState6[1];\n\n  var _useState7 = useState(likeColor),\n      _useState8 = _slicedToArray(_useState7, 2),\n      likeButtonColor = _useState8[0],\n      setLikeButtonColor = _useState8[1];\n\n  var _useState9 = useState(dislikeColor),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dislikeButtonColor = _useState10[0],\n      setDislikeButtonColor = _useState10[1];\n\n  var _useState11 = useState(notes !== null ? notes.data : []),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notesValue = _useState12[0],\n      setNotesValue = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      noteData = _useState14[0],\n      setNoteData = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isDetailModalVisible = _useState18[0],\n      setIsDetailModalVisible = _useState18[1];\n\n  var contactFormInitialValue = {\n    first_name: leadClientName.split(\" \")[0],\n    last_name: leadClientName.split(\" \")[1],\n    phone: leadClientPhone,\n    message: \"Kindly contact us for more information.\"\n  };\n\n  var likeHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(likeValue) {\n      var _data, _data2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(likeValue != null && liked != likeValue)) {\n                _context.next = 15;\n                break;\n              }\n\n              setLoading(true);\n              _data = {\n                is_liked: likeValue\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return dispatch(updateLead(leadID, _data));\n\n            case 6:\n              if (likeValue === true) {\n                setDislikeButtonColor(\"#000\");\n                setLikeButtonColor(\"#008000\");\n              } else {\n                setDislikeButtonColor(\"#ff0000\");\n                setLikeButtonColor(\"#000\");\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 12:\n              // loadingHandle();\n              setLoading(false);\n              _context.next = 26;\n              break;\n\n            case 15:\n              setLoading(true);\n              _data2 = {\n                is_liked: null\n              };\n              _context.prev = 17;\n              _context.next = 20;\n              return dispatch(updateLead(leadID, _data2));\n\n            case 20:\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](17);\n              console.log(_context.t1);\n\n            case 25:\n              // loadingHandle();\n              setLoading(false);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 9], [17, 22]]);\n    }));\n\n    return function likeHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Success:\", _objectSpread({}, values, {\n                home: homeID,\n                client: leadClientId\n              }));\n              setLoading(true);\n              formData = _objectSpread({}, values, {\n                home: homeID,\n                client: leadClientId\n              });\n              _context2.next = 5;\n              return dispatch(createLeadClientMessage(formData));\n\n            case 5:\n              setLoading(false);\n              setOpenConnect(false);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinish(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      notesForm = _Form$useForm2[0];\n\n  var onNotesFinish = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      var newNotesData, updatedNotes;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newNotesData = [].concat(_toConsumableArray(notesValue), [values.notes]);\n              updatedNotes = {\n                notes: {\n                  data: newNotesData\n                }\n              };\n              setLoading(true);\n              _context3.next = 5;\n              return dispatch(updateLead(leadID, updatedNotes));\n\n            case 5:\n              notesForm.resetFields();\n              notesValue.push(values.notes);\n              setLoading(false);\n              setNoteIconColor(\"#0000ff\"); //setOpenNote(false);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onNotesFinish(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onNotesFinishFailed = function onNotesFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var getMaxRoomCost = function getMaxRoomCost() {\n    return Math.max.apply(Math, rooms.map(function (room) {\n      return room.base_rate;\n    }));\n  };\n\n  var getMinRoomCost = function getMinRoomCost() {\n    return Math.min.apply(Math, rooms.map(function (room) {\n      return room.base_rate;\n    }));\n  };\n\n  var showDetailModal = function showDetailModal() {\n    setIsDetailModalVisible(!isDetailModalVisible);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      maxWidth: \"100%\"\n    },\n    cover: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \" home-status\",\n      style: {\n        position: \"absolute\",\n        left: \"10px\",\n        top: \"10px\",\n        background: badgeBG\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, humanize(approval)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \" home-status home-availability\",\n      style: {\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        left: 'auto',\n        background: 'blue'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"Available\"), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"300px\",\n        backgroundPosition: \"center center\",\n        backgroundRepeat: \"no-repeat\",\n        objectFit: \"cover\"\n      },\n      alt: \"home-image\",\n      src: imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    })),\n    actions: [/*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      onClick: function onClick() {\n        return setOpenNote(true);\n      },\n      \"aria-label\": \"form\",\n      className: \"anticon anticon-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"64 64 896 896\",\n      focusable: \"false\",\n      \"data-icon\": \"form\",\n      width: \"1em\",\n      height: \"1em\",\n      fill: noteIconColor,\n      \"aria-hidden\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, loading && !openConnect && !openNote ? /*#__PURE__*/React.createElement(Spin, {\n      style: {\n        padding: 10,\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LikeOutlined, {\n      key: \"like\",\n      style: {\n        fontSize: \"20px\",\n        color: likeButtonColor\n      },\n      onClick: function onClick() {\n        return likeHandler(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      type: \"vertical\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DislikeOutlined, {\n      key: \"dislike\",\n      style: {\n        fontSize: \"20px\",\n        color: dislikeButtonColor\n      },\n      onClick: function onClick() {\n        return likeHandler(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    })))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content community_detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    title: name,\n    description: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-details\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"budget\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, \"$\", getMinRoomCost(), \" - $\", getMaxRoomCost(), \" / Month\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"community_type\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, home.care_offered && home.care_offered.map(function (item, index) {\n      // if (item == \"continuing_care_retirement_community\") {\n      //   return \"Continuing Care Retirement Community\"\n      // }\n      // else {\n      //   return humanize(item)\n      // }\n      return humanize(item);\n    }).join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"address-deatils\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, address)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"align-center\",\n    style: {\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"connect-btn\",\n    onClick: function onClick() {\n      window.open(\"/dashboard/home-detail/\".concat(home.id), '_blank');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"Learn More\"))))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add Note\",\n    centered: true,\n    visible: openNote,\n    onCancel: function onCancel() {\n      return setOpenNote(false);\n    },\n    className: \"connect-modal\",\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }\n  }, notesValue && notesValue.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    dataSource: notesValue,\n    renderItem: function renderItem(note, index) {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: avatar,\n          style: {\n            height: 30,\n            width: 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 21\n          }\n        }),\n        description: /*#__PURE__*/React.createElement(NotesListCard, {\n          note: note,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 32\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    name: \"notes\",\n    initialValues: {\n      notes: \"\"\n    },\n    onFinish: onNotesFinish,\n    onFinishFailed: onNotesFinishFailed,\n    form: notesForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"notes\",\n    rules: [{\n      required: true,\n      message: \"This field is required!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    onChange: function onChange(e) {\n      return setNoteData(e.target.value);\n    },\n    placeholder: \"Add notes here..!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Connect\",\n    centered: true,\n    visible: openConnect,\n    onCancel: function onCancel() {\n      return setOpenConnect(false);\n    },\n    className: \"connect-modal\",\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"connect\",\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 20\n    },\n    initialValues: contactFormInitialValue,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"first_name\",\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input your first name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"First Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"last_name\",\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input your last name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Last Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Phone\",\n    name: \"phone\",\n    rules: [{\n      required: true,\n      pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\n      message: 'Please input valid number!' // max: 14\n\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Message\",\n    name: \"message\",\n    rules: [{\n      required: true,\n      message: \"Please input your message!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    placeholder: \"Message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: {\n      offset: 4,\n      span: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\nexport default DisplayCard;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/components/shared/displayCard/DisplayCard.jsx"],"names":["React","useEffect","useState","useDispatch","Card","Divider","Button","Modal","Input","Form","Spin","List","Avatar","Descriptions","AutoComplete","EyeOutlined","LikeOutlined","DislikeOutlined","MessageOutlined","homeCareOfferedOptions","Config","updateLead","createLeadClientMessage","SendOutlined","NotesListCard","humanize","moment","useHistory","avatar","Meta","TextArea","DisplayCard","name","address","approval","coverImage","liked","lead","notes","leadClientId","leadClientName","leadClientPhone","home","homeID","rooms","data","leads","_filter","_and","status","_eq","dispatch","history","leadID","id","imageUrl","API","badgeBG","likeColor","dislikeColor","noteIconColor","setNoteIconColor","openNote","setOpenNote","openConnect","setOpenConnect","likeButtonColor","setLikeButtonColor","dislikeButtonColor","setDislikeButtonColor","notesValue","setNotesValue","noteData","setNoteData","loading","setLoading","isDetailModalVisible","setIsDetailModalVisible","contactFormInitialValue","first_name","split","last_name","phone","message","likeHandler","likeValue","is_liked","console","log","onFinish","values","client","formData","onFinishFailed","errorInfo","useForm","notesForm","onNotesFinish","newNotesData","updatedNotes","resetFields","push","onNotesFinishFailed","getMaxRoomCost","Math","max","apply","map","room","base_rate","getMinRoomCost","min","showDetailModal","maxWidth","position","left","top","background","right","width","height","backgroundPosition","backgroundRepeat","objectFit","display","justifyContent","marginLeft","marginRight","padding","backgroundColor","fontSize","color","care_offered","item","index","join","window","open","length","note","alignItems","required","e","target","value","span","whitespace","pattern","offset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, Divider, Button, Modal, Input, Form, Spin, List, Avatar, Descriptions, AutoComplete, } from \"antd\";\r\nimport { EyeOutlined, LikeOutlined, DislikeOutlined, MessageOutlined, } from \"@ant-design/icons\";\r\nimport { homeCareOfferedOptions } from \"../../../constants/defaultValues\";\r\nimport Config from \"../../../config\";\r\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\r\nimport { createLeadClientMessage } from \"../../../redux/actions/lead-client-actions\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport NotesListCard from \"./NotesListCard\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport avatar from '../../../assets/images/notes.png';\r\n\r\nconst { Meta } = Card;\r\nconst { TextArea } = Input;\r\n\r\nconst DisplayCard = ({ name, address, approval, coverImage, liked, lead, notes, leadClientId, leadClientName, leadClientPhone, home, homeID, rooms, }) => {\r\n\r\n  const data = {\r\n    leads: {\r\n      _filter: {\r\n        lead: {\r\n          _and: [\r\n            {\r\n              status: {\r\n                _eq: \"accepted\",\r\n              },\r\n            },\r\n            {\r\n              approval: {\r\n                _eq: \"accepted\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const leadID = lead.id;\r\n  const imageUrl = coverImage ? `${Config.API}/assets/${coverImage}` : null;\r\n  const badgeBG =\r\n    approval === \"accepted\"\r\n      ? \"#52c41a\"\r\n      : approval === \"pending\"\r\n        ? \"#ff6d00\"\r\n        : \"#ff0000\";\r\n  const likeColor = liked == true ? \"#008000\" : \"#000\";\r\n  const dislikeColor = liked == false ? \"#ff0000\" : \"#000\";\r\n\r\n  const [noteIconColor, setNoteIconColor] = useState(\r\n    lead && lead.notes !== null ? \"#0000ff\" : \"#000\"\r\n  );\r\n  const [openNote, setOpenNote] = useState(false);\r\n  const [openConnect, setOpenConnect] = useState(false);\r\n  const [likeButtonColor, setLikeButtonColor] = useState(likeColor);\r\n  const [dislikeButtonColor, setDislikeButtonColor] = useState(dislikeColor);\r\n  const [notesValue, setNotesValue] = useState(\r\n    notes !== null ? notes.data : []\r\n  );\r\n  const [noteData, setNoteData] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isDetailModalVisible, setIsDetailModalVisible] = useState(false);\r\n\r\n  const contactFormInitialValue = {\r\n    first_name: leadClientName.split(\" \")[0],\r\n    last_name: leadClientName.split(\" \")[1],\r\n    phone: leadClientPhone,\r\n    message: \"Kindly contact us for more information.\",\r\n  };\r\n\r\n  const likeHandler = async (likeValue) => {\r\n    // if (likeValue != null) {\r\n    if (likeValue != null && liked != likeValue) {\r\n      setLoading(true);\r\n      const data = { is_liked: likeValue };\r\n      try {\r\n        await dispatch(updateLead(leadID, data));\r\n        if (likeValue === true) {\r\n          setDislikeButtonColor(\"#000\");\r\n          setLikeButtonColor(\"#008000\");\r\n        } else {\r\n          setDislikeButtonColor(\"#ff0000\");\r\n          setLikeButtonColor(\"#000\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      // loadingHandle();\r\n      setLoading(false);\r\n    }\r\n    else {\r\n      setLoading(true);\r\n      const data = { is_liked: null };\r\n      try {\r\n        await dispatch(updateLead(leadID, data));\r\n        // await dispatch(updateLead(leadID, data));\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      // loadingHandle();\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Success:\", { ...values, home: homeID, client: leadClientId });\r\n    setLoading(true);\r\n    const formData = { ...values, home: homeID, client: leadClientId };\r\n    await dispatch(createLeadClientMessage(formData));\r\n    setLoading(false);\r\n    setOpenConnect(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const [notesForm] = Form.useForm();\r\n\r\n  const onNotesFinish = async (values) => {\r\n    const newNotesData = [...notesValue, values.notes];\r\n    const updatedNotes = { notes: { data: newNotesData } };\r\n    setLoading(true);\r\n    await dispatch(updateLead(leadID, updatedNotes));\r\n    notesForm.resetFields();\r\n    notesValue.push(values.notes);\r\n    setLoading(false);\r\n    setNoteIconColor(\"#0000ff\");\r\n    //setOpenNote(false);\r\n  };\r\n\r\n  const onNotesFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const getMaxRoomCost = () => {\r\n    return Math.max.apply(\r\n      Math,\r\n      rooms.map(function (room) {\r\n        return room.base_rate;\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n  const getMinRoomCost = () => {\r\n    return Math.min.apply(\r\n      Math,\r\n      rooms.map(function (room) {\r\n        return room.base_rate;\r\n      })\r\n    );\r\n  };\r\n\r\n  const showDetailModal = () => {\r\n    setIsDetailModalVisible(!isDetailModalVisible);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        style={{ maxWidth: \"100%\" }}\r\n        cover={\r\n          <div>\r\n            <span\r\n              className=\" home-status\"\r\n\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: \"10px\",\r\n                background: badgeBG,\r\n              }}\r\n            >\r\n              {humanize(approval)}\r\n            </span>\r\n            <span\r\n              className=\" home-status home-availability\"\r\n\r\n              style={{\r\n                position: \"absolute\",\r\n                right: \"10px\",\r\n                top: \"10px\",\r\n                left: 'auto',\r\n                background: 'blue',\r\n              }}\r\n            >\r\n              Available\r\n            </span>\r\n            <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"300px\",\r\n                backgroundPosition: \"center center\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                objectFit: \"cover\",\r\n              }}\r\n              alt=\"home-image\"\r\n              src={imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\"}\r\n            />\r\n          </div>\r\n        }\r\n        actions={[\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <span\r\n              role=\"img\"\r\n              onClick={() => setOpenNote(true)}\r\n              aria-label=\"form\"\r\n              className=\"anticon anticon-form\"\r\n            >\r\n              <svg\r\n                viewBox=\"64 64 896 896\"\r\n                focusable=\"false\"\r\n                data-icon=\"form\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                fill={noteIconColor}\r\n                aria-hidden=\"true\"\r\n              >\r\n                <path d=\"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\"></path>\r\n                <path d=\"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\"></path>\r\n              </svg>\r\n            </span>\r\n\r\n            {/* <span role=\"img\" onClick={() => setOpenNote(true)} aria-label=\"comment\" tabIndex=\"-1\" className=\"anticon anticon-comment\" >\r\n              <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"comment\" width=\"1em\" height=\"1em\" fill={noteIconColor} aria-hidden=\"true\"><defs><style></style></defs><path d=\"M573 421c-23.1 0-41 17.9-41 40s17.9 40 41 40c21.1 0 39-17.9 39-40s-17.9-40-39-40zm-280 0c-23.1 0-41 17.9-41 40s17.9 40 41 40c21.1 0 39-17.9 39-40s-17.9-40-39-40z\"></path><path d=\"M894 345a343.92 343.92 0 00-189-130v.1c-17.1-19-36.4-36.5-58-52.1-163.7-119-393.5-82.7-513 81-96.3 133-92.2 311.9 6 439l.8 132.6c0 3.2.5 6.4 1.5 9.4a31.95 31.95 0 0040.1 20.9L309 806c33.5 11.9 68.1 18.7 102.5 20.6l-.5.4c89.1 64.9 205.9 84.4 313 49l127.1 41.4c3.2 1 6.5 1.6 9.9 1.6 17.7 0 32-14.3 32-32V753c88.1-119.6 90.4-284.9 1-408zM323 735l-12-5-99 31-1-104-8-9c-84.6-103.2-90.2-251.9-11-361 96.4-132.2 281.2-161.4 413-66 132.2 96.1 161.5 280.6 66 412-80.1 109.9-223.5 150.5-348 102zm505-17l-8 10 1 104-98-33-12 5c-56 20.8-115.7 22.5-171 7l-.2-.1A367.31 367.31 0 00729 676c76.4-105.3 88.8-237.6 44.4-350.4l.6.4c23 16.5 44.1 37.1 62 62 72.6 99.6 68.5 235.2-8 330z\"></path><path d=\"M433 421c-23.1 0-41 17.9-41 40s17.9 40 41 40c21.1 0 39-17.9 39-40s-17.9-40-39-40z\"></path></svg>\r\n            </span> */}\r\n\r\n            {/* <CommentOutlined\r\n              key=\"note\"\r\n              onClick={() => setOpenNote(true)}\r\n              style={{ fontSize: \"20px\", color: \"#000\" }}\r\n            /> */}\r\n          </div>,\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            {loading && !openConnect && !openNote ? (\r\n              <Spin\r\n                style={{\r\n                  padding: 10,\r\n                  backgroundColor: \"#fff\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <React.Fragment>\r\n                <LikeOutlined\r\n                  key=\"like\"\r\n                  style={{ fontSize: \"20px\", color: likeButtonColor }}\r\n                  onClick={() => likeHandler(true)}\r\n                />\r\n                <Divider type=\"vertical\" />\r\n                <DislikeOutlined\r\n                  key=\"dislike\"\r\n                  style={{ fontSize: \"20px\", color: dislikeButtonColor }}\r\n                  onClick={() => likeHandler(false)}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </div>,\r\n        ]}\r\n      >\r\n        <div className=\"card-content community_detail\">\r\n          <Meta\r\n            title={name}\r\n            description={\r\n              <div className=\"card-details\">\r\n                <p className=\"budget\">\r\n                  ${getMinRoomCost()} - ${getMaxRoomCost()} / Month\r\n                </p>\r\n                <div className=\"community_type\">\r\n                  {home.care_offered &&\r\n                    home.care_offered.map((item, index) => {\r\n                      // if (item == \"continuing_care_retirement_community\") {\r\n                      //   return \"Continuing Care Retirement Community\"\r\n                      // }\r\n                      // else {\r\n                      //   return humanize(item)\r\n                      // }\r\n                      return humanize(item)\r\n                    }).join(', ')}\r\n                </div>\r\n                <p className=\"address-deatils\">{address}</p>\r\n              </div>\r\n            }\r\n          />\r\n          <ul className=\"align-center\" style={{ display: \"flex\" }}>\r\n            <li >\r\n              {/* <Button\r\n                className=\"connect-btn\"\r\n                onClick={() => setOpenConnect(true)}\r\n              >\r\n                Connect\r\n              </Button> */}\r\n\r\n              <Button\r\n                className=\"connect-btn\"\r\n                onClick={() => {\r\n                  window.open(`/dashboard/home-detail/${home.id}`, '_blank');\r\n                }}\r\n              >\r\n                Learn More\r\n              </Button>\r\n            </li>\r\n            {/* <li style={{ width: \"50%\", textAlign: \"right\" }}>\r\n              <a onClick={showDetailModal} style={{ color: \"#1B75BC\" }}>\r\n                <EyeOutlined />\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </Card>\r\n      {/* <Modal\r\n        footer={null}\r\n        title=\"Community Details\"\r\n        visible={isDetailModalVisible}\r\n        onOk={showDetailModal}\r\n        onCancel={showDetailModal}\r\n      >\r\n        <div className=\"client-details\">\r\n          <Descriptions title=\"User Info\" column={2}>\r\n            {home.name && (\r\n              <Descriptions.Item label=\"Name\">{home.name}</Descriptions.Item>\r\n            )}\r\n            {lead && lead.date_created && (\r\n              <Descriptions.Item label=\"Date & Time\">\r\n                {moment(lead.date_created).format(\"MM/DD/YY\")}{\" \"}\r\n                {moment(lead.date_created).format(\"LT\")}{\" \"}\r\n              </Descriptions.Item>\r\n            )}\r\n            <Descriptions.Item label=\"Address\">\r\n              {home.address_line_1} {home.address_line_2}\r\n            </Descriptions.Item>\r\n            {home.city && (\r\n              <Descriptions.Item label=\"City\">{home.city}</Descriptions.Item>\r\n            )}\r\n            {home.zip && (\r\n              <Descriptions.Item label=\"Zip\">{home.zip}</Descriptions.Item>\r\n            )}\r\n            {home.state && (\r\n              <Descriptions.Item label=\"State\">{home.state}</Descriptions.Item>\r\n            )}\r\n            {home.county && (\r\n              <Descriptions.Item label=\"County\">\r\n                {home.county}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.phone && (\r\n              <Descriptions.Item label=\"Phone\">{home.phone}</Descriptions.Item>\r\n            )}\r\n            {home.user_created && (\r\n              <Descriptions.Item label=\"Partner Name\">\r\n                {home.user_created.first_name} {home.user_created.last_name}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.license_number && (\r\n              <Descriptions.Item label=\"License Number\">\r\n                {home.license_number}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.care_offered && (\r\n              <Descriptions.Item label=\"Care Offered\">\r\n                {home.care_offered\r\n                  .map((item, index) => {\r\n                    let Value = \"\";\r\n                    homeCareOfferedOptions.forEach((Item) => {\r\n                      if (Item.value === item) {\r\n                        Value = Item.text;\r\n                      }\r\n                    });\r\n                    return Value;\r\n                  })\r\n                  .join(\", \")}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.user_created && home.user_created.cell && (\r\n              <Descriptions.Item label=\"Cell\">\r\n                {home.user_created.cell}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.user_created && home.user_created.email && (\r\n              <Descriptions.Item label=\"Email\">\r\n                {home.user_created.email}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.community_fee && (\r\n              <Descriptions.Item label=\"Community Fee\">\r\n                ${home.community_fee}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.current_specials && (\r\n              <Descriptions.Item label=\"Move-in Specials\">\r\n                {home.current_specials}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.capacity && (\r\n              <Descriptions.Item label=\"Capacity\">\r\n                {home.capacity}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.year_started && (\r\n              <Descriptions.Item label=\"Year Started\">\r\n                {home.year_started}\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.state_report && (\r\n              <Descriptions.Item label=\"State Report\">\r\n                <a href={home.state_report}>{home.state_report}</a>\r\n              </Descriptions.Item>\r\n            )}\r\n            {home.website && (\r\n              <Descriptions.Item label=\"Website\">\r\n                <a href={home.website}>{home.website}</a>\r\n              </Descriptions.Item>\r\n            )}\r\n          </Descriptions>\r\n          {home.respite_daily_rates && (\r\n            <Descriptions title=\"Respite Daily Rates\" column={2}>\r\n              {home.respite_daily_rates.shared_room && (\r\n                <Descriptions.Item label=\"Shared Room\">\r\n                  ${home.respite_daily_rates.shared_room}\r\n                </Descriptions.Item>\r\n              )}\r\n              {home.respite_daily_rates.private_room && (\r\n                <Descriptions.Item label=\"Private Room\">\r\n                  ${home.respite_daily_rates.private_room}\r\n                </Descriptions.Item>\r\n              )}\r\n            </Descriptions>\r\n          )}\r\n          {home.point_system && (\r\n            <Descriptions title=\"Point System\" column={2}>\r\n              {home.point_system.point && (\r\n                <Descriptions.Item label=\"Point\">\r\n                  ${home.point_system.point}\r\n                </Descriptions.Item>\r\n              )}\r\n              {home.point_system.total_points && (\r\n                <Descriptions.Item label=\"Total Points\">\r\n                  {home.point_system.total_points}\r\n                </Descriptions.Item>\r\n              )}\r\n            </Descriptions>\r\n          )}\r\n          <Descriptions title=\"Care Levels\" column={2}>\r\n            <Descriptions.Item label=\"Care Costs Included\">\r\n              {home.care_costs_included ? \"Yes\" : \"No\"}\r\n            </Descriptions.Item>\r\n            {home.care_levels &&\r\n              home.care_levels.map((item, index) => {\r\n                return (\r\n                  <Descriptions.Item key={index} label={item.key}>\r\n                    ${item.value}\r\n                  </Descriptions.Item>\r\n                );\r\n              })}\r\n          </Descriptions>\r\n          {home.additional_fee && (\r\n            <Descriptions title=\"Additional Fee\" column={2}>\r\n              {home.additional_fee.map((item, index) => {\r\n                return (\r\n                  <Descriptions.Item key={index} label={item.key}>\r\n                    ${item.value}\r\n                  </Descriptions.Item>\r\n                );\r\n              })}\r\n            </Descriptions>\r\n          )}\r\n          {home.a_la_carte && (\r\n            <Descriptions title=\"A La Carte\" column={2}>\r\n              {Object.entries(home.a_la_carte).map((item, index) => {\r\n                return (\r\n                  <Descriptions.Item key={index} label={humanize(item[0])}>\r\n                    ${item[1]}\r\n                  </Descriptions.Item>\r\n                );\r\n              })}\r\n            </Descriptions>\r\n          )}\r\n          \r\n        </div>\r\n      </Modal> */}\r\n      <Modal\r\n        title=\"Add Note\"\r\n        centered\r\n        visible={openNote}\r\n        onCancel={() => setOpenNote(false)}\r\n        className=\"connect-modal\"\r\n        footer={null}\r\n      >\r\n        {notesValue && notesValue.length > 0 ? (\r\n          <List\r\n            dataSource={notesValue}\r\n            renderItem={(note, index) => (\r\n              <List.Item key={index}>\r\n                <List.Item.Meta\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  avatar={\r\n                    <Avatar\r\n                      src={avatar}\r\n                      style={{ height: 30, width: 30 }}\r\n                    />\r\n                  }\r\n                  description={<NotesListCard note={note} />}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          ></List>\r\n        ) : null}\r\n        <Form\r\n          name=\"notes\"\r\n          initialValues={{ notes: \"\" }}\r\n          onFinish={onNotesFinish}\r\n          onFinishFailed={onNotesFinishFailed}\r\n          form={notesForm}\r\n        >\r\n          <Form.Item\r\n            name=\"notes\"\r\n            rules={[{ required: true, message: \"This field is required!\" }]}\r\n          >\r\n            <TextArea\r\n              rows={4}\r\n              onChange={(e) => setNoteData(e.target.value)}\r\n              placeholder=\"Add notes here..!\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Connect\"\r\n        centered\r\n        visible={openConnect}\r\n        onCancel={() => setOpenConnect(false)}\r\n        className=\"connect-modal\"\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"connect\"\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          initialValues={contactFormInitialValue}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"first_name\"\r\n            rules={[\r\n              { required: true, whitespace: true, message: \"Please input your first name!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"First Name\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"last_name\"\r\n            rules={[\r\n              { required: true, whitespace: true, message: \"Please input your last name!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Last Name\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                pattern: /^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/g,\r\n                message: 'Please input valid number!',\r\n                // max: 14\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Phone\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Message\"\r\n            name=\"message\"\r\n            rules={[{ required: true, message: \"Please input your message!\" }]}\r\n          >\r\n            <TextArea rows={4} placeholder=\"Message\" />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DisplayCard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { Types } from \"../constants/auth-types\";\nimport API from \"../api/auth-api\";\nimport Config from \"../../config\";\nimport UserService from \"./../../services/user-service\";\nexport function signOut() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                UserService.signOut();\n                dispatch({\n                  type: Types.LOG_OUT,\n                  payload: true\n                });\n                window.location = window.location.origin;\n              } catch (e) {}\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function signin(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, _getState) {\n      var data, loginData, user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              data = {\n                email: email,\n                password: password\n              };\n              _context2.next = 4;\n              return API.login(data);\n\n            case 4:\n              loginData = _context2.sent;\n\n              if (!(loginData != null)) {\n                _context2.next = 25;\n                break;\n              }\n\n              _context2.prev = 6;\n              _context2.next = 9;\n              return API.me(loginData.data.access_token);\n\n            case 9:\n              user = _context2.sent;\n\n              if (!(user.data.role !== Config.userId.lead_client)) {\n                _context2.next = 17;\n                break;\n              }\n\n              if (user.data.role) {\n                user.data.redirect = Config.userRoleTypes[user.data.role].url;\n              }\n\n              if (user.data != null) {\n                UserService.setUserData(user.data);\n                UserService.setAccessToken(loginData.data.access_token);\n                UserService.setRefreshToken(loginData.data.refresh_token);\n                UserService.setTokenExpiryTime(loginData.data.expires);\n              }\n\n              dispatch({\n                type: Types.CURRENT_LOGGED_IN_USER,\n                payload: {\n                  user: user.data,\n                  token: loginData.data.access_token,\n                  isLoggedIn: true\n                }\n              });\n              return _context2.abrupt(\"return\", user.data);\n\n            case 17:\n              return _context2.abrupt(\"return\", {\n                error: \"Invalid email / password!\"\n              });\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](6);\n              console.log(_context2.t0);\n\n            case 23:\n              _context2.next = 27;\n              break;\n\n            case 25:\n              dispatch({\n                type: Types.LOGIN_FAIL\n              });\n              return _context2.abrupt(\"return\", {\n                error: \"Error logging in. Please try again!\"\n              });\n\n            case 27:\n              _context2.next = 36;\n              break;\n\n            case 29:\n              _context2.prev = 29;\n              _context2.t1 = _context2[\"catch\"](0);\n\n              if (!(_context2.t1 && _context2.t1.response && _context2.t1.response.data && _context2.t1.response.data.status && _context2.t1.response.data.status === 401)) {\n                _context2.next = 35;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", {\n                error: \"Invalid email / password!\"\n              });\n\n            case 35:\n              return _context2.abrupt(\"return\", {\n                error: \"Invalid email / password!\"\n              });\n\n            case 36:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 29], [6, 20]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport function requestPassword(_x5) {\n  return _requestPassword.apply(this, arguments);\n}\n\nfunction _requestPassword() {\n  _requestPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(Data) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return API.requestPassword(Data);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _requestPassword.apply(this, arguments);\n}\n\nexport function resetPassword(_x6) {\n  return _resetPassword.apply(this, arguments);\n}\n\nfunction _resetPassword() {\n  _resetPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(Data) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return API.resetPassword(Data);\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _resetPassword.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/redux/actions/auth-actions.js"],"names":["Types","API","Config","UserService","signOut","dispatch","getState","type","LOG_OUT","payload","window","location","origin","e","signin","email","password","_getState","data","login","loginData","me","access_token","user","role","userId","lead_client","redirect","userRoleTypes","url","setUserData","setAccessToken","setRefreshToken","refresh_token","setTokenExpiryTime","expires","CURRENT_LOGGED_IN_USER","token","isLoggedIn","error","console","log","LOGIN_FAIL","response","status","requestPassword","Data","resetPassword"],"mappings":"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","sourcesContent":["import { Types } from \"../constants/auth-types\";\r\nimport API from \"../api/auth-api\";\r\nimport Config from \"../../config\";\r\nimport UserService from \"./../../services/user-service\";\r\n\r\nexport function signOut() {\r\n  return async function (dispatch, getState) {\r\n    try {\r\n      UserService.signOut();\r\n      dispatch({\r\n        type: Types.LOG_OUT,\r\n        payload: true,\r\n      });\r\n      window.location = window.location.origin;\r\n    } catch (e) { }\r\n  };\r\n}\r\n\r\n\r\nexport function signin(email, password) {\r\n  return async function (dispatch, _getState) {\r\n    try {\r\n      let data = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      let loginData = await API.login(data);\r\n      if (loginData != null) {\r\n        try {\r\n          let user = await API.me(loginData.data.access_token);\r\n          // user.data.redirect = \"/\";\r\n          if (user.data.role !== Config.userId.lead_client) {\r\n            if (user.data.role) {\r\n              user.data.redirect = Config.userRoleTypes[user.data.role].url;\r\n            }\r\n            if (user.data != null) {\r\n              UserService.setUserData(user.data);\r\n              UserService.setAccessToken(loginData.data.access_token);\r\n              UserService.setRefreshToken(loginData.data.refresh_token);\r\n              UserService.setTokenExpiryTime(loginData.data.expires);\r\n            }\r\n            dispatch({\r\n              type: Types.CURRENT_LOGGED_IN_USER,\r\n              payload: {\r\n                user: user.data,\r\n                token: loginData.data.access_token,\r\n                isLoggedIn: true,\r\n              },\r\n            });\r\n            return user.data;\r\n          }\r\n          else { }\r\n          return { error: \"Invalid email / password!\" };\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type: Types.LOGIN_FAIL,\r\n        });\r\n        return { error: \"Error logging in. Please try again!\" };\r\n      }\r\n    } catch (e) {\r\n      if (\r\n        e &&\r\n        e.response &&\r\n        e.response.data &&\r\n        e.response.data.status &&\r\n        e.response.data.status === 401\r\n      ) {\r\n        return { error: \"Invalid email / password!\" };\r\n      } else {\r\n        return { error: \"Invalid email / password!\" };\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport async function requestPassword(Data) {\r\n  await API.requestPassword(Data);\r\n}\r\nexport async function resetPassword(Data) {\r\n  await API.resetPassword(Data);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
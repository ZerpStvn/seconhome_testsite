{"ast":null,"code":"var setUserData = function setUserData(user) {\n  return new Promise(function (resolve) {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n};\n\nvar setAccessToken = function setAccessToken(access_token) {\n  return new Promise(function (resolve) {\n    if (access_token) {\n      localStorage.setItem(\"access_token\", access_token);\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n};\n\nvar setRefreshToken = function setRefreshToken(token) {\n  return new Promise(function (resolve) {\n    if (token) {\n      localStorage.setItem(\"refresh_token\", token);\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n};\n\nvar setTokenExpiryTime = function setTokenExpiryTime(time) {\n  return new Promise(function (resolve) {\n    if (time) {\n      localStorage.setItem(\"token_expires\", time);\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n};\n\nvar isUserLoggedIn = function isUserLoggedIn(user) {\n  if (\"user\" in localStorage && \"access_token\" in localStorage) {\n    var _user = JSON.parse(localStorage.getItem(\"user\"));\n\n    var authToken = localStorage.getItem(\"access_token\");\n\n    if (_user && authToken !== \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n\nvar getLoggedInUser = function getLoggedInUser(user) {\n  if (\"user\" in localStorage && \"access_token\" in localStorage) {\n    var _user2 = JSON.parse(localStorage.getItem(\"user\"));\n\n    return _user2;\n  } else {\n    return false;\n  }\n};\n\nvar setAdminUser = function setAdminUser(user) {\n  return new Promise(function (resolve) {\n    if (user) {\n      console.log(user, 'user');\n      localStorage.setItem(\"admin_user\", JSON.stringify(user));\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n};\n\nvar getAdminUser = function getAdminUser() {\n  if (\"admin_user\" in localStorage) {\n    var user = JSON.parse(localStorage.getItem(\"admin_user\"));\n    return user;\n  } else {\n    return false;\n  }\n};\n\nvar signOut = function signOut() {\n  return new Promise(function (resolve) {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"admin_user\");\n    resolve(true);\n  });\n};\n\nexport default {\n  setUserData: setUserData,\n  isUserLoggedIn: isUserLoggedIn,\n  signOut: signOut,\n  setAccessToken: setAccessToken,\n  setRefreshToken: setRefreshToken,\n  setTokenExpiryTime: setTokenExpiryTime,\n  getLoggedInUser: getLoggedInUser,\n  setAdminUser: setAdminUser,\n  getAdminUser: getAdminUser\n};","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/services/user-service.js"],"names":["setUserData","user","Promise","resolve","localStorage","setItem","JSON","stringify","setAccessToken","access_token","setRefreshToken","token","setTokenExpiryTime","time","isUserLoggedIn","parse","getItem","authToken","getLoggedInUser","setAdminUser","console","log","getAdminUser","signOut","removeItem"],"mappings":"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","sourcesContent":["const setUserData = (user) => {\r\n  return new Promise((resolve) => {\r\n    if (user) {\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      resolve(true);\r\n    } else {\r\n      resolve(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst setAccessToken = (access_token) => {\r\n  return new Promise((resolve) => {\r\n    if (access_token) {\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      resolve(true);\r\n    } else {\r\n      resolve(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst setRefreshToken = (token) => {\r\n  return new Promise((resolve) => {\r\n    if (token) {\r\n      localStorage.setItem(\"refresh_token\", token);\r\n      resolve(true);\r\n    } else {\r\n      resolve(false);\r\n    }\r\n  });\r\n};\r\nconst setTokenExpiryTime = (time) => {\r\n  return new Promise((resolve) => {\r\n    if (time) {\r\n      localStorage.setItem(\"token_expires\", time);\r\n      resolve(true);\r\n    } else {\r\n      resolve(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst isUserLoggedIn = (user) => {\r\n  if (\"user\" in localStorage && \"access_token\" in localStorage) {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const authToken = localStorage.getItem(\"access_token\");\r\n    if (user && authToken !== \"\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getLoggedInUser = (user) => {\r\n  if (\"user\" in localStorage && \"access_token\" in localStorage) {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    return user;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nconst setAdminUser = (user) => {\r\n  return new Promise((resolve) => {\r\n    if (user) {\r\n      console.log(user, 'user');\r\n      localStorage.setItem(\"admin_user\", JSON.stringify(user));\r\n      resolve(true);\r\n    } else {\r\n      resolve(false);\r\n    }\r\n  });\r\n};\r\nconst getAdminUser = () => {\r\n  if (\"admin_user\" in localStorage) {\r\n    const user = JSON.parse(localStorage.getItem(\"admin_user\"));\r\n    return user;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst signOut = () => {\r\n  return new Promise((resolve) => {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"admin_user\");\r\n    resolve(true);\r\n  });\r\n};\r\n\r\nexport default {\r\n  setUserData,\r\n  isUserLoggedIn,\r\n  signOut,\r\n  setAccessToken,\r\n  setRefreshToken,\r\n  setTokenExpiryTime,\r\n  getLoggedInUser,\r\n  setAdminUser,\r\n  getAdminUser\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wordpress\\\\dashboard\\\\src\\\\app\\\\pages\\\\client\\\\room\\\\CardViewRoom.jsx\";\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, Divider, Button, Modal, Input, Form, Spin, Image, List, Avatar } from \"antd\";\nimport { CommentOutlined, LikeOutlined, DislikeOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport Config from \"../../../config\";\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\nimport { createLeadClientMessage, updateLeadClient } from \"../../../redux/actions/lead-client-actions\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport NotesListCard from \"../../../components/shared/displayCard/NotesListCard\";\nimport avatar from '../../../assets/images/notes.png';\nimport { useEffect } from \"react\";\nvar Meta = Card.Meta;\nvar TextArea = Input.TextArea;\n\nvar CardViewRoom = function CardViewRoom(_ref) {\n  var lead = _ref.lead,\n      roomName = _ref.roomName,\n      roomPrice = _ref.roomPrice,\n      homeName = _ref.homeName,\n      name = _ref.name,\n      address = _ref.address,\n      approval = _ref.approval,\n      coverImage = _ref.coverImage,\n      liked = _ref.liked,\n      leadID = _ref.leadID,\n      notes = _ref.notes,\n      leadClientId = _ref.leadClientId,\n      leadClientName = _ref.leadClientName,\n      leadClientPhone = _ref.leadClientPhone,\n      homeID = _ref.homeID,\n      rooms = _ref.rooms,\n      room = _ref.room,\n      roomId = _ref.roomId;\n  var dispatch = useDispatch();\n  var imageUrl = coverImage ? \"\".concat(Config.API, \"/assets/\").concat(coverImage) : null;\n  var badgeBG = approval === \"accepted\" ? \"#52c41a\" : approval === \"pending\" ? \"#ff6d00\" : \"#ff0000\";\n  var likeColor = liked == true ? \"#008000\" : \"#000\";\n  var dislikeColor = liked == false ? \"#ff0000\" : \"#000\";\n\n  var _useState = useState(!!notes ? \"#0000ff\" : \"#000000\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      noteIconColor = _useState2[0],\n      setNoteIconColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openNote = _useState4[0],\n      setOpenNote = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openConnect = _useState6[0],\n      setOpenConnect = _useState6[1];\n\n  var _useState7 = useState(likeColor),\n      _useState8 = _slicedToArray(_useState7, 2),\n      likeButtonColor = _useState8[0],\n      setLikeButtonColor = _useState8[1];\n\n  var _useState9 = useState(dislikeColor),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dislikeButtonColor = _useState10[0],\n      setDislikeButtonColor = _useState10[1]; // const [notesValue, setNotesValue] = useState(notes);\n\n\n  var _useState11 = useState(!!notes ? notes.data : []),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notesValue = _useState12[0],\n      setNotesValue = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      noteData = _useState14[0],\n      setNoteData = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0 // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  useEffect(function () {\n    setLikeButtonColor(likeColor);\n    setDislikeButtonColor(dislikeColor);\n  }, [likeColor, dislikeColor]);\n  var contactFormInitialValue = {\n    first_name: leadClientName.split(\" \")[0],\n    last_name: leadClientName.split(\" \")[1],\n    phone: leadClientPhone // message: \"Kindly contact us for more information.\",\n\n  };\n\n  var likeHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(likeValue) {\n      var data, _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(likeValue != null && liked != likeValue)) {\n                _context.next = 15;\n                break;\n              }\n\n              setLoading(true);\n              data = {\n                \"leads\": {\n                  \"update\": [{\n                    \"id\": leadID,\n                    \"is_liked\": likeValue\n                  }]\n                }\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return dispatch(updateLeadClient(leadClientId, data));\n\n            case 6:\n              if (likeValue === true) {\n                setDislikeButtonColor(\"#000\");\n                setLikeButtonColor(\"#008000\");\n              } else {\n                setDislikeButtonColor(\"#ff0000\");\n                setLikeButtonColor(\"#000\");\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 12:\n              setLoading(false);\n              _context.next = 26;\n              break;\n\n            case 15:\n              setLoading(true); // const data = { is_liked: likeValue };\n\n              _data = {\n                \"leads\": {\n                  \"update\": [{\n                    \"id\": leadID,\n                    \"is_liked\": null\n                  }]\n                }\n              };\n              _context.prev = 17;\n              _context.next = 20;\n              return dispatch(updateLeadClient(leadClientId, _data));\n\n            case 20:\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](17);\n              console.log(_context.t1);\n\n            case 25:\n              // loadingHandle();\n              setLoading(false);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 9], [17, 22]]);\n    }));\n\n    return function likeHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Success:\", _objectSpread({}, values, {\n                home: homeID,\n                client: leadClientId\n              }));\n              setLoading(true);\n              formData = _objectSpread({}, values, {\n                home: homeID,\n                client: leadClientId\n              });\n              _context2.next = 5;\n              return dispatch(createLeadClientMessage(formData));\n\n            case 5:\n              setLoading(false);\n              setOpenConnect(false);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFinish(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      notesForm = _Form$useForm2[0];\n\n  var onNotesFinish = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      var newNotesData, updatedNotes;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newNotesData = [].concat(_toConsumableArray(notesValue), [values.notes]);\n              updatedNotes = {\n                notes: {\n                  data: newNotesData\n                }\n              };\n              setLoading(true);\n              _context3.next = 5;\n              return dispatch(updateLead(leadID, updatedNotes));\n\n            case 5:\n              notesForm.resetFields();\n              notesValue.push(values.notes);\n              setLoading(false);\n              setNoteIconColor(\"#0000ff\"); //setOpenNote(false);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onNotesFinish(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onNotesFinishFailed = function onNotesFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  var getMaxRoomCost = function getMaxRoomCost() {\n    return Math.max.apply(Math, rooms.map(function (room) {\n      return room.base_rate;\n    }));\n  };\n\n  var getMinRoomCost = function getMinRoomCost() {\n    return Math.min.apply(Math, rooms.map(function (room) {\n      return room.base_rate;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card // style={{ width: 400, marginRight: 10 }}\n  , {\n    cover: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \" home-status\",\n      style: {\n        position: \"absolute\",\n        left: \"10px\",\n        top: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, humanize(approval)), /*#__PURE__*/React.createElement(Image, {\n      src: imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    })),\n    actions: [/*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      onClick: function onClick() {\n        return setOpenNote(true);\n      },\n      \"aria-label\": \"form\",\n      className: \"anticon anticon-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"64 64 896 896\",\n      focusable: \"false\",\n      \"data-icon\": \"form\",\n      width: \"1em\",\n      height: \"1em\",\n      fill: noteIconColor,\n      \"aria-hidden\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 115\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 244\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 440\n      }\n    })))) // <div\n    //   style={{\n    //     display: \"flex\",\n    //     justifyContent: \"flex-end\",\n    //     marginRight: 10,\n    //   }}\n    // >\n    //   {loading && !openConnect && !openNote ? (\n    //     <Spin\n    //       style={{\n    //         padding: 10,\n    //         backgroundColor: \"#fff\",\n    //         display: \"flex\",\n    //         justifyContent: \"flex-end\",\n    //       }}\n    //     />\n    //   ) : (\n    //     <React.Fragment>\n    //       <LikeOutlined\n    //         key=\"like\"\n    //         style={{ fontSize: \"20px\", color: likeButtonColor }}\n    //         onClick={() => likeHandler(true)}\n    //       />\n    //       <Divider type=\"vertical\" />\n    //       <DislikeOutlined\n    //         key=\"dislike\"\n    //         style={{ fontSize: \"20px\", color: dislikeButtonColor }}\n    //         onClick={() => likeHandler(false)}\n    //       />\n    //     </React.Fragment>\n    //   )}\n    // </div>,\n    ],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content community_detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    title: homeName,\n    description: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-details\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, room && room.availability == \"shared_male\" ? \"Shared Room - Male Only\" : \"\", room && room.availability == \"shared_female\" ? \"Shared Room - Female Only\" : \"\", humanize(name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"budget\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, formatter.format(room && room.base_rate), \" / Month\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"address-deatils\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, lead.home.city)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"connect-btn\",\n    onClick: function onClick() {\n      return setOpenConnect(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Message\"))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add Note\",\n    centered: true,\n    visible: openNote,\n    onCancel: function onCancel() {\n      return setOpenNote(false);\n    },\n    className: \"connect-modal\",\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, notesValue && notesValue.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    dataSource: notesValue,\n    renderItem: function renderItem(note, index) {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: avatar,\n          style: {\n            height: 30,\n            width: 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 21\n          }\n        }),\n        description: /*#__PURE__*/React.createElement(NotesListCard, {\n          note: note,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 32\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    name: \"notes\",\n    initialValues: {\n      notes: \"\"\n    },\n    onFinish: onNotesFinish,\n    onFinishFailed: onNotesFinishFailed,\n    form: notesForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"notes\",\n    rules: [{\n      required: true,\n      message: \"This field is required!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    onChange: function onChange(e) {\n      return setNoteData(e.target.value);\n    },\n    placeholder: \"Add notes here..!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Message Community\",\n    centered: true,\n    visible: openConnect,\n    onCancel: function onCancel() {\n      return setOpenConnect(false);\n    },\n    className: \"connect-modal\",\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"connect\",\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 20\n    },\n    initialValues: contactFormInitialValue,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"first_name\",\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input your first name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"First Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"last_name\",\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"Please input your last name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Last Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Message\",\n    name: \"message\",\n    rules: [{\n      required: true,\n      message: \"Please input your message!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    placeholder: \"Write your message to the community here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: {\n      offset: 4,\n      span: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\nexport default CardViewRoom;","map":{"version":3,"sources":["C:/xampp/htdocs/wordpress/dashboard/src/app/pages/client/room/CardViewRoom.jsx"],"names":["React","useState","useDispatch","Card","Divider","Button","Modal","Input","Form","Spin","Image","List","Avatar","CommentOutlined","LikeOutlined","DislikeOutlined","LoadingOutlined","Config","updateLead","createLeadClientMessage","updateLeadClient","SendOutlined","humanize","NotesListCard","avatar","useEffect","Meta","TextArea","CardViewRoom","lead","roomName","roomPrice","homeName","name","address","approval","coverImage","liked","leadID","notes","leadClientId","leadClientName","leadClientPhone","homeID","rooms","room","roomId","dispatch","imageUrl","API","badgeBG","likeColor","dislikeColor","noteIconColor","setNoteIconColor","openNote","setOpenNote","openConnect","setOpenConnect","likeButtonColor","setLikeButtonColor","dislikeButtonColor","setDislikeButtonColor","data","notesValue","setNotesValue","noteData","setNoteData","loading","setLoading","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","contactFormInitialValue","first_name","split","last_name","phone","likeHandler","likeValue","console","log","onFinish","values","home","client","formData","onFinishFailed","errorInfo","useForm","notesForm","onNotesFinish","newNotesData","updatedNotes","resetFields","push","onNotesFinishFailed","getMaxRoomCost","Math","max","apply","map","base_rate","getMinRoomCost","min","position","left","top","display","justifyContent","alignItems","marginLeft","availability","format","city","length","note","index","height","width","required","message","e","target","value","span","whitespace","offset"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,IAA9C,EAAoDC,IAApD,EAA0DC,KAA1D,EAAiEC,IAAjE,EAAuEC,MAAvE,QAAqF,MAArF;AACA,SACEC,eADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,4CAA1D;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,sDAA1B;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;IAEQC,I,GAASvB,I,CAATuB,I;IACAC,Q,GAAapB,K,CAAboB,Q;;AAER,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoL;AAAA,MAAjLC,IAAiL,QAAjLA,IAAiL;AAAA,MAA3KC,QAA2K,QAA3KA,QAA2K;AAAA,MAAjKC,SAAiK,QAAjKA,SAAiK;AAAA,MAAtJC,QAAsJ,QAAtJA,QAAsJ;AAAA,MAA5IC,IAA4I,QAA5IA,IAA4I;AAAA,MAAtIC,OAAsI,QAAtIA,OAAsI;AAAA,MAA7HC,QAA6H,QAA7HA,QAA6H;AAAA,MAAnHC,UAAmH,QAAnHA,UAAmH;AAAA,MAAvGC,KAAuG,QAAvGA,KAAuG;AAAA,MAAhGC,MAAgG,QAAhGA,MAAgG;AAAA,MAAxFC,KAAwF,QAAxFA,KAAwF;AAAA,MAAjFC,YAAiF,QAAjFA,YAAiF;AAAA,MAAnEC,cAAmE,QAAnEA,cAAmE;AAAA,MAAnDC,eAAmD,QAAnDA,eAAmD;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAEvM,MAAMC,QAAQ,GAAG7C,WAAW,EAA5B;AACA,MAAM8C,QAAQ,GAAGZ,UAAU,aAAMnB,MAAM,CAACgC,GAAb,qBAA2Bb,UAA3B,IAA0C,IAArE;AACA,MAAMc,OAAO,GAAGf,QAAQ,KAAK,UAAb,GAA0B,SAA1B,GAAsCA,QAAQ,KAAK,SAAb,GAAyB,SAAzB,GAAqC,SAA3F;AACA,MAAMgB,SAAS,GAAGd,KAAK,IAAI,IAAT,GAAgB,SAAhB,GAA4B,MAA9C;AAEA,MAAMe,YAAY,GAAGf,KAAK,IAAI,KAAT,GAAiB,SAAjB,GAA6B,MAAlD;;AAPuM,kBAQ7JpC,QAAQ,CAAC,CAAC,CAACsC,KAAF,GAAU,SAAV,GAAsB,SAAvB,CARqJ;AAAA;AAAA,MAQhMc,aARgM;AAAA,MAQjLC,gBARiL;;AAAA,mBASvKrD,QAAQ,CAAC,KAAD,CAT+J;AAAA;AAAA,MAShMsD,QATgM;AAAA,MAStLC,WATsL;;AAAA,mBAUjKvD,QAAQ,CAAC,KAAD,CAVyJ;AAAA;AAAA,MAUhMwD,WAVgM;AAAA,MAUnLC,cAVmL;;AAAA,mBAWzJzD,QAAQ,CAACkD,SAAD,CAXiJ;AAAA;AAAA,MAWhMQ,eAXgM;AAAA,MAW/KC,kBAX+K;;AAAA,mBAYnJ3D,QAAQ,CAACmD,YAAD,CAZ2I;AAAA;AAAA,MAYhMS,kBAZgM;AAAA,MAY5KC,qBAZ4K,mBAavM;;;AAbuM,oBAcnK7D,QAAQ,CAC1C,CAAC,CAACsC,KAAF,GAAUA,KAAK,CAACwB,IAAhB,GAAuB,EADmB,CAd2J;AAAA;AAAA,MAchMC,UAdgM;AAAA,MAcpLC,aAdoL;;AAAA,oBAiBvKhE,QAAQ,CAAC,EAAD,CAjB+J;AAAA;AAAA,MAiBhMiE,QAjBgM;AAAA,MAiBtLC,WAjBsL;;AAAA,oBAkBzKlE,QAAQ,CAAC,KAAD,CAlBiK;AAAA;AAAA,MAkBhMmE,OAlBgM;AAAA,MAkBvLC,UAlBuL;;AAmBvM,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,IAAAA,KAAK,EAAE,UADwC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,qBAAqB,EAAE,CAHwB;AAI/CC,IAAAA,qBAAqB,EAAE,CAJwB,CAK/C;AACA;AACA;;AAP+C,GAA/B,CAAlB;AASAnD,EAAAA,SAAS,CAAC,YAAM;AACdmC,IAAAA,kBAAkB,CAACT,SAAD,CAAlB;AACAW,IAAAA,qBAAqB,CAACV,YAAD,CAArB;AACD,GAHQ,EAGN,CAACD,SAAD,EAAYC,YAAZ,CAHM,CAAT;AAIA,MAAMyB,uBAAuB,GAAG;AAC9BC,IAAAA,UAAU,EAAErC,cAAc,CAACsC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CADkB;AAE9BC,IAAAA,SAAS,EAAEvC,cAAc,CAACsC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAFmB;AAG9BE,IAAAA,KAAK,EAAEvC,eAHuB,CAI9B;;AAJ8B,GAAhC;;AAOA,MAAMwC,WAAW;AAAA,yEAAG,iBAAOC,SAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACdA,SAAS,IAAI,IAAb,IAAqB9C,KAAK,IAAI8C,SADhB;AAAA;AAAA;AAAA;;AAEhBd,cAAAA,UAAU,CAAC,IAAD,CAAV;AACMN,cAAAA,IAHU,GAGH;AACX,yBAAS;AACP,4BAAU,CAAC;AAAE,0BAAMzB,MAAR;AAAgB,gCAAY6C;AAA5B,mBAAD;AADH;AADE,eAHG;AAAA;AAAA;AAAA,qBASRpC,QAAQ,CAAC3B,gBAAgB,CAACoB,YAAD,EAAeuB,IAAf,CAAjB,CATA;;AAAA;AAUd,kBAAIoB,SAAS,KAAK,IAAlB,EAAwB;AACtBrB,gBAAAA,qBAAqB,CAAC,MAAD,CAArB;AACAF,gBAAAA,kBAAkB,CAAC,SAAD,CAAlB;AACD,eAHD,MAGO;AACLE,gBAAAA,qBAAqB,CAAC,SAAD,CAArB;AACAF,gBAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACD;;AAhBa;AAAA;;AAAA;AAAA;AAAA;AAkBdwB,cAAAA,OAAO,CAACC,GAAR;;AAlBc;AAoBhBhB,cAAAA,UAAU,CAAC,KAAD,CAAV;AApBgB;AAAA;;AAAA;AAwBhBA,cAAAA,UAAU,CAAC,IAAD,CAAV,CAxBgB,CAyBhB;;AACMN,cAAAA,KA1BU,GA0BH;AACX,yBAAS;AACP,4BAAU,CAAC;AAAE,0BAAMzB,MAAR;AAAgB,gCAAY;AAA5B,mBAAD;AADH;AADE,eA1BG;AAAA;AAAA;AAAA,qBAgCRS,QAAQ,CAAC3B,gBAAgB,CAACoB,YAAD,EAAeuB,KAAf,CAAjB,CAhCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoCdqB,cAAAA,OAAO,CAACC,GAAR;;AApCc;AAsChB;AACAhB,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAvCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXa,WAAW;AAAA;AAAA;AAAA,KAAjB;;AA2CA,MAAMI,QAAQ;AAAA,yEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfH,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,oBAA6BE,MAA7B;AAAqCC,gBAAAA,IAAI,EAAE7C,MAA3C;AAAmD8C,gBAAAA,MAAM,EAAEjD;AAA3D;AACA6B,cAAAA,UAAU,CAAC,IAAD,CAAV;AACMqB,cAAAA,QAHS,qBAGOH,MAHP;AAGeC,gBAAAA,IAAI,EAAE7C,MAHrB;AAG6B8C,gBAAAA,MAAM,EAAEjD;AAHrC;AAAA;AAAA,qBAITO,QAAQ,CAAC5B,uBAAuB,CAACuE,QAAD,CAAxB,CAJC;;AAAA;AAKfrB,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAX,cAAAA,cAAc,CAAC,KAAD,CAAd;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAR4B,QAAQ;AAAA;AAAA;AAAA,KAAd;;AASA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AACpCR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,SAAvB;AACD,GAFD;;AA3FuM,sBA+FnLpF,IAAI,CAACqF,OAAL,EA/FmL;AAAA;AAAA,MA+FhMC,SA/FgM;;AAiGvM,MAAMC,aAAa;AAAA,yEAAG,kBAAOR,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdS,cAAAA,YADc,gCACKhC,UADL,IACiBuB,MAAM,CAAChD,KADxB;AAEd0D,cAAAA,YAFc,GAEC;AAAE1D,gBAAAA,KAAK,EAAE;AAAEwB,kBAAAA,IAAI,EAAEiC;AAAR;AAAT,eAFD;AAGpB3B,cAAAA,UAAU,CAAC,IAAD,CAAV;AAHoB;AAAA,qBAIdtB,QAAQ,CAAC7B,UAAU,CAACoB,MAAD,EAAS2D,YAAT,CAAX,CAJM;;AAAA;AAKpBH,cAAAA,SAAS,CAACI,WAAV;AACAlC,cAAAA,UAAU,CAACmC,IAAX,CAAgBZ,MAAM,CAAChD,KAAvB;AACA8B,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAf,cAAAA,gBAAgB,CAAC,SAAD,CAAhB,CARoB,CASpB;;AAToB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbyC,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAYA,MAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACR,SAAD,EAAe;AACzCR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,SAAvB;AACD,GAFD;;AAIA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WAAOC,IAAI,CAACC,GAAL,CAASC,KAAT,CACLF,IADK,EAEL1D,KAAK,CAAC6D,GAAN,CAAU,UAAU5D,IAAV,EAAgB;AACxB,aAAOA,IAAI,CAAC6D,SAAZ;AACD,KAFD,CAFK,CAAP;AAMD,GAPD;;AASA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WAAOL,IAAI,CAACM,GAAL,CAASJ,KAAT,CACLF,IADK,EAEL1D,KAAK,CAAC6D,GAAN,CAAU,UAAU5D,IAAV,EAAgB;AACxB,aAAOA,IAAI,CAAC6D,SAAZ;AACD,KAFD,CAFK,CAAP;AAMD,GAPD;;AAWA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CACE;AADF;AAEE,IAAA,KAAK,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAE;AACLG,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,IAAI,EAAE,MAFD;AAGLC,QAAAA,GAAG,EAAE;AAHA,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGzF,QAAQ,CAACa,QAAD,CARX,CADF,eAqBE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEa,QAAQ,GAAGA,QAAH,GAAc,qCAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CAHJ;AA6BE,IAAA,OAAO,EAAE,cACP;AACE,MAAA,KAAK,EAAE;AACLgE,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE,YAFX;AAGLC,QAAAA,UAAU,EAAE,QAHP;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,MAAA,OAAO,EAAE;AAAA,eAAM3D,WAAW,CAAC,IAAD,CAAjB;AAAA,OAA1B;AAAmD,oBAAW,MAA9D;AAAqE,MAAA,SAAS,EAAC,sBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsG;AAAK,MAAA,OAAO,EAAC,eAAb;AAA6B,MAAA,SAAS,EAAC,OAAvC;AAA+C,mBAAU,MAAzD;AAAgE,MAAA,KAAK,EAAC,KAAtE;AAA4E,MAAA,MAAM,EAAC,KAAnF;AAAyF,MAAA,IAAI,EAAEH,aAA/F;AAA8G,qBAAY,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiI;AAAM,MAAA,CAAC,EAAC,oLAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjI,eAAqU;AAAM,MAAA,CAAC,EAAC,+PAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArU,CAAtG,CARF,CADO,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CO,KA7BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA4EE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAErB,QADT;AAEE,IAAA,WAAW,eACT;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGa,IAAI,IAAIA,IAAI,CAACuE,YAAL,IAAqB,aAA7B,GAA6C,yBAA7C,GAAyE,EAF5E,EAGGvE,IAAI,IAAIA,IAAI,CAACuE,YAAL,IAAqB,eAA7B,GAA+C,2BAA/C,GAA6E,EAHhF,EAIG9F,QAAQ,CAACW,IAAD,CAJX,eAKE;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGqC,SAAS,CAAC+C,MAAV,CAAiBxE,IAAI,IAAIA,IAAI,CAAC6D,SAA9B,CADH,aALF,eASE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC7E,IAAI,CAAC2D,IAAL,CAAU8B,IAA1C,CATF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAkBE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM5D,cAAc,CAAC,IAAD,CAApB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF,CA5EF,CADF,eAwGE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAEH,QAHX;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAAC,KAAD,CAAjB;AAAA,KAJZ;AAKE,IAAA,SAAS,EAAC,eALZ;AAME,IAAA,MAAM,EAAE,IANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGQ,UAAU,IAAIA,UAAU,CAACuD,MAAX,GAAoB,CAAlC,gBACC,oBAAC,IAAD;AACE,IAAA,UAAU,EAAEvD,UADd;AAEE,IAAA,UAAU,EAAE,oBAACwD,IAAD,EAAOC,KAAP;AAAA,0BAEV,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,QAAA,KAAK,EAAE;AAAET,UAAAA,OAAO,EAAE,MAAX;AAAmBE,UAAAA,UAAU,EAAE;AAA/B,SADT;AAEE,QAAA,MAAM,eACJ,oBAAC,MAAD;AACE,UAAA,GAAG,EAAE1F,MADP;AAEE,UAAA,KAAK,EAAE;AAAEkG,YAAAA,MAAM,EAAE,EAAV;AAAcC,YAAAA,KAAK,EAAE;AAArB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQE,QAAA,WAAW,eAAE,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAEH,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAmBG,IA3BN,eA4BE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,aAAa,EAAE;AAAEjF,MAAAA,KAAK,EAAE;AAAT,KAFjB;AAGE,IAAA,QAAQ,EAAEwD,aAHZ;AAIE,IAAA,cAAc,EAAEK,mBAJlB;AAKE,IAAA,IAAI,EAAEN,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE,CAAC;AAAE8B,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAO3D,WAAW,CAAC2D,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAFZ;AAGE,IAAA,WAAW,EAAC,mBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAPF,eAiBE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,QAAQ,EAAE5D,OAHZ;AAIE,IAAA,OAAO,EAAEA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAjBF,CA5BF,CAxGF,eAiKE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,mBADR;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAEX,WAHX;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMC,cAAc,CAAC,KAAD,CAApB;AAAA,KAJZ;AAKE,IAAA,SAAS,EAAC,eALZ;AAME,IAAA,MAAM,EAAE,IANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAE;AAAEuE,MAAAA,IAAI,EAAE;AAAR,KAFZ;AAGE,IAAA,UAAU,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAHd;AAIE,IAAA,aAAa,EAAEpD,uBAJjB;AAKE,IAAA,QAAQ,EAAES,QALZ;AAME,IAAA,cAAc,EAAEK,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAEiC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBM,MAAAA,UAAU,EAAE,IAA9B;AAAoCL,MAAAA,OAAO,EAAE;AAA7C,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CARF,eAiBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBM,MAAAA,UAAU,EAAE,IAA9B;AAAoCL,MAAAA,OAAO,EAAE;AAA7C,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAjBF,eAmCE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAmB,IAAA,WAAW,EAAC,0CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAnCF,eA0CE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE;AAAEM,MAAAA,MAAM,EAAE,CAAV;AAAaF,MAAAA,IAAI,EAAE;AAAnB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,QAAQ,EAAE7D,OAHZ;AAIE,IAAA,OAAO,EAAEA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA1CF,CARF,CAjKF,CADF;AAkOD,CAvWD;;AAyWA,eAAexC,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, Divider, Button, Modal, Input, Form, Spin, Image, List, Avatar } from \"antd\";\r\nimport {\r\n  CommentOutlined,\r\n  LikeOutlined,\r\n  DislikeOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Config from \"../../../config\";\r\nimport { updateLead } from \"../../../redux/actions/lead-actions\";\r\nimport { createLeadClientMessage, updateLeadClient } from \"../../../redux/actions/lead-client-actions\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport NotesListCard from \"../../../components/shared/displayCard/NotesListCard\";\r\nimport avatar from '../../../assets/images/notes.png';\r\nimport { useEffect } from \"react\";\r\n\r\nconst { Meta } = Card;\r\nconst { TextArea } = Input;\r\n\r\nconst CardViewRoom = ({ lead, roomName, roomPrice, homeName, name, address, approval, coverImage, liked, leadID, notes, leadClientId, leadClientName, leadClientPhone, homeID, rooms, room, roomId }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const imageUrl = coverImage ? `${Config.API}/assets/${coverImage}` : null;\r\n  const badgeBG = approval === \"accepted\" ? \"#52c41a\" : approval === \"pending\" ? \"#ff6d00\" : \"#ff0000\";\r\n  const likeColor = liked == true ? \"#008000\" : \"#000\";\r\n\r\n  const dislikeColor = liked == false ? \"#ff0000\" : \"#000\";\r\n  const [noteIconColor, setNoteIconColor] = useState(!!notes ? \"#0000ff\" : \"#000000\");\r\n  const [openNote, setOpenNote] = useState(false);\r\n  const [openConnect, setOpenConnect] = useState(false);\r\n  const [likeButtonColor, setLikeButtonColor] = useState(likeColor);\r\n  const [dislikeButtonColor, setDislikeButtonColor] = useState(dislikeColor);\r\n  // const [notesValue, setNotesValue] = useState(notes);\r\n  const [notesValue, setNotesValue] = useState(\r\n    !!notes ? notes.data : []\r\n  );\r\n  const [noteData, setNoteData] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n  });\r\n  useEffect(() => {\r\n    setLikeButtonColor(likeColor);\r\n    setDislikeButtonColor(dislikeColor);\r\n  }, [likeColor, dislikeColor]);\r\n  const contactFormInitialValue = {\r\n    first_name: leadClientName.split(\" \")[0],\r\n    last_name: leadClientName.split(\" \")[1],\r\n    phone: leadClientPhone,\r\n    // message: \"Kindly contact us for more information.\",\r\n  };\r\n\r\n  const likeHandler = async (likeValue) => {\r\n    if (likeValue != null && liked != likeValue) {\r\n      setLoading(true);\r\n      const data = {\r\n        \"leads\": {\r\n          \"update\": [{ \"id\": leadID, \"is_liked\": likeValue }],\r\n        }\r\n      }\r\n      try {\r\n        await dispatch(updateLeadClient(leadClientId, data));\r\n        if (likeValue === true) {\r\n          setDislikeButtonColor(\"#000\");\r\n          setLikeButtonColor(\"#008000\");\r\n        } else {\r\n          setDislikeButtonColor(\"#ff0000\");\r\n          setLikeButtonColor(\"#000\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    else {\r\n\r\n      setLoading(true);\r\n      // const data = { is_liked: likeValue };\r\n      const data = {\r\n        \"leads\": {\r\n          \"update\": [{ \"id\": leadID, \"is_liked\": null }],\r\n        }\r\n      }\r\n      try {\r\n        await dispatch(updateLeadClient(leadClientId, data));\r\n        // await dispatch(updateLead(leadID, data));\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      // loadingHandle();\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Success:\", { ...values, home: homeID, client: leadClientId });\r\n    setLoading(true);\r\n    const formData = { ...values, home: homeID, client: leadClientId };\r\n    await dispatch(createLeadClientMessage(formData));\r\n    setLoading(false);\r\n    setOpenConnect(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const [notesForm] = Form.useForm();\r\n\r\n  const onNotesFinish = async (values) => {\r\n    const newNotesData = [...notesValue, values.notes];\r\n    const updatedNotes = { notes: { data: newNotesData } };\r\n    setLoading(true);\r\n    await dispatch(updateLead(leadID, updatedNotes));\r\n    notesForm.resetFields();\r\n    notesValue.push(values.notes);\r\n    setLoading(false);\r\n    setNoteIconColor(\"#0000ff\");\r\n    //setOpenNote(false);\r\n  };\r\n\r\n  const onNotesFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const getMaxRoomCost = () => {\r\n    return Math.max.apply(\r\n      Math,\r\n      rooms.map(function (room) {\r\n        return room.base_rate;\r\n      })\r\n    );\r\n  };\r\n\r\n  const getMinRoomCost = () => {\r\n    return Math.min.apply(\r\n      Math,\r\n      rooms.map(function (room) {\r\n        return room.base_rate;\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        // style={{ width: 400, marginRight: 10 }}\r\n        cover={\r\n          <div>\r\n            <span\r\n              className=\" home-status\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"10px\",\r\n                top: \"10px\",\r\n              }}\r\n            >\r\n              {humanize(approval)}\r\n            </span>\r\n            {/* <img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"200px\",\r\n                backgroundPosition: \"center center\",\r\n                backgroundRepeat: \"no-repeat\",\r\n              }}\r\n              alt=\"home-image\"\r\n              src={imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\"}\r\n            /> */}\r\n            <Image\r\n              src={imageUrl ? imageUrl : \"https://via.placeholder.com/600X400\"}\r\n            />\r\n          </div>\r\n        }\r\n        actions={[\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <span role=\"img\" onClick={() => setOpenNote(true)} aria-label=\"form\" className=\"anticon anticon-form\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"form\" width=\"1em\" height=\"1em\" fill={noteIconColor} aria-hidden=\"true\"><path d=\"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\"></path><path d=\"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\"></path></svg></span>\r\n\r\n          </div>,\r\n          // <div\r\n          //   style={{\r\n          //     display: \"flex\",\r\n          //     justifyContent: \"flex-end\",\r\n          //     marginRight: 10,\r\n          //   }}\r\n          // >\r\n          //   {loading && !openConnect && !openNote ? (\r\n          //     <Spin\r\n          //       style={{\r\n          //         padding: 10,\r\n          //         backgroundColor: \"#fff\",\r\n          //         display: \"flex\",\r\n          //         justifyContent: \"flex-end\",\r\n          //       }}\r\n          //     />\r\n          //   ) : (\r\n          //     <React.Fragment>\r\n          //       <LikeOutlined\r\n          //         key=\"like\"\r\n          //         style={{ fontSize: \"20px\", color: likeButtonColor }}\r\n          //         onClick={() => likeHandler(true)}\r\n          //       />\r\n          //       <Divider type=\"vertical\" />\r\n          //       <DislikeOutlined\r\n          //         key=\"dislike\"\r\n          //         style={{ fontSize: \"20px\", color: dislikeButtonColor }}\r\n          //         onClick={() => likeHandler(false)}\r\n          //       />\r\n          //     </React.Fragment>\r\n          //   )}\r\n          // </div>,\r\n        ]}\r\n      >\r\n        {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}> */}\r\n        <div className=\"card-content community_detail\">\r\n          <Meta\r\n            title={homeName}\r\n            description={\r\n              <div className=\"card-details\">\r\n\r\n                {room && room.availability == \"shared_male\" ? \"Shared Room - Male Only\" : \"\"}\r\n                {room && room.availability == \"shared_female\" ? \"Shared Room - Female Only\" : \"\"}\r\n                {humanize(name)}\r\n                <p className=\"budget\">\r\n                  {formatter.format(room && room.base_rate)} / Month\r\n                  {/* {room && room.base_rate} / Month */}\r\n                </p>\r\n                <p className=\"address-deatils\">{lead.home.city}</p>\r\n              </div>\r\n\r\n            }\r\n          />\r\n          <Button\r\n            className=\"connect-btn\"\r\n            onClick={() => setOpenConnect(true)}\r\n          >\r\n            Message\r\n          </Button>\r\n\r\n        </div>\r\n      </Card>\r\n      <Modal\r\n        title=\"Add Note\"\r\n        centered\r\n        visible={openNote}\r\n        onCancel={() => setOpenNote(false)}\r\n        className=\"connect-modal\"\r\n        footer={null}\r\n      >\r\n        {notesValue && notesValue.length > 0 ? (\r\n          <List\r\n            dataSource={notesValue}\r\n            renderItem={(note, index) => (\r\n\r\n              <List.Item key={index}>\r\n                <List.Item.Meta\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  avatar={\r\n                    <Avatar\r\n                      src={avatar}\r\n                      style={{ height: 30, width: 30 }}\r\n                    />\r\n                  }\r\n                  description={<NotesListCard note={note} />}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          ></List>\r\n        ) : null}\r\n        <Form\r\n          name=\"notes\"\r\n          initialValues={{ notes: \"\" }}\r\n          onFinish={onNotesFinish}\r\n          onFinishFailed={onNotesFinishFailed}\r\n          form={notesForm}\r\n        >\r\n          <Form.Item\r\n            name=\"notes\"\r\n            rules={[{ required: true, message: \"This field is required!\" }]}\r\n          >\r\n            <TextArea\r\n              rows={4}\r\n              onChange={(e) => setNoteData(e.target.value)}\r\n              placeholder=\"Add notes here..!\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Message Community\"\r\n        centered\r\n        visible={openConnect}\r\n        onCancel={() => setOpenConnect(false)}\r\n        className=\"connect-modal\"\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"connect\"\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          initialValues={contactFormInitialValue}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"first_name\"\r\n            rules={[\r\n              { required: true, whitespace: true, message: \"Please input your first name!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"First Name\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"last_name\"\r\n            rules={[\r\n              { required: true, whitespace: true, message: \"Please input your last name!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Last Name\" />\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            rules={[\r\n              { required: true, message: \"Please input your phone number!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Phone\" />\r\n          </Form.Item> */}\r\n          <Form.Item\r\n            label=\"Message\"\r\n            name=\"message\"\r\n            rules={[{ required: true, message: \"Please input your message!\" }]}\r\n          >\r\n            <TextArea rows={4} placeholder=\"Write your message to the community here\" />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4, span: 16 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CardViewRoom;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\admin\\\\partner\\\\date-available-popover.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Select, DatePicker, Button, Modal, Form } from \"antd\";\nimport moment from \"moment\";\nimport { roomAvailabilityOptions, roomAvailabilityOptionsAdmin } from \"../../../constants/defaultValues\";\nimport { notifyUser } from \"../../../services/notification-service\";\nvar dateFormat = \"MMM DD, YYYY\";\n\nvar DateAvailablePopOver = function DateAvailablePopOver(_ref) {\n  var data = _ref.data,\n      updateRoom = _ref.updateRoom;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setIsModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      availableForm = _Form$useForm2[0];\n\n  availableForm.setFieldsValue({\n    availability: data.availability,\n    date_available: data.date_available && moment(data.date_available, \"YYYY-MM-DD\")\n  });\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = function handleOk() {\n    availableForm.submit();\n  };\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  var finish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!(values.availability && values.date_available)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return dispatch(updateRoom(data.id, {\n                availability: values.availability,\n                date_available: values.date_available.format(\"YYYY-MM-DD\")\n              }));\n\n            case 5:\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              notifyUser(JSON.parse(_context.t0.response.data).errors[0].message, \"error\");\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function finish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    style: {\n      backgroundColor: \"\".concat(!!data.availability ? data.availability == \"no\" ? \"#f44456\" : \"#73c053\" : \"#f44456\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, !!data.availability ? roomAvailabilityOptions.map(function (_ref3) {\n    var value = _ref3.value,\n        text = _ref3.text;\n    return value == data.availability && text;\n  }) : \"No\"), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Availability\",\n    visible: isModalVisible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    okButtonProps: {\n      loading: loading\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onFinish: finish,\n    form: availableForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Availability\",\n    name: \"availability\",\n    rules: [{\n      required: true,\n      message: \"Please select availability\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, data.type == \"shared_2_people\" || data.type == \"shared_3_people\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"no\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"shared_male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \"Only Male\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"shared_female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, \"Only Female\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"yes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"no\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, \"No\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"date_available\",\n    label: \"Date Available\",\n    rules: [{\n      required: true,\n      message: \"Please input date\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    format: dateFormat,\n    defaultValue: data.date_available && moment(data.date_available, \"YYYY-MM-DD\") // onChange={(date, dateString) => {\n    //     console.log(date.format(\"YYYY-MM-DD\"), dateString, 'date, dateString');\n    // }\n    //     // handelDateAvailableChange(date, dateString, room.key)\n    // }\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default DateAvailablePopOver;","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/admin/partner/date-available-popover.js"],"names":["React","useEffect","useState","useDispatch","Select","DatePicker","Button","Modal","Form","moment","roomAvailabilityOptions","roomAvailabilityOptionsAdmin","notifyUser","dateFormat","DateAvailablePopOver","data","updateRoom","dispatch","isModalVisible","setIsModalVisible","loading","setLoading","useForm","availableForm","setFieldsValue","availability","date_available","showModal","handleOk","submit","handleCancel","finish","values","id","format","JSON","parse","response","errors","message","backgroundColor","map","value","text","required","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,IAA5C,QAAyD,MAAzD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,uBAAT,EAAkCC,4BAAlC,QAAsE,kCAAtE;AACA,SAASC,UAAT,QAA2B,wCAA3B;AAEA,IAAMC,UAAU,GAAG,cAAnB;;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA0B;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACnD,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AADmD,kBAEPD,QAAQ,CAAC,KAAD,CAFD;AAAA;AAAA,MAE5CgB,cAF4C;AAAA,MAE5BC,iBAF4B;;AAAA,mBAGrBjB,QAAQ,CAAC,KAAD,CAHa;AAAA;AAAA,MAG5CkB,OAH4C;AAAA,MAGnCC,UAHmC;;AAAA,sBAI3Bb,IAAI,CAACc,OAAL,EAJ2B;AAAA;AAAA,MAI5CC,aAJ4C;;AAKnDA,EAAAA,aAAa,CAACC,cAAd,CAA6B;AACzBC,IAAAA,YAAY,EAAEV,IAAI,CAACU,YADM;AAEzBC,IAAAA,cAAc,EAAEX,IAAI,CAACW,cAAL,IAAuBjB,MAAM,CAACM,IAAI,CAACW,cAAN,EAAsB,YAAtB;AAFpB,GAA7B;;AAIA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBR,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBL,IAAAA,aAAa,CAACM,MAAd;AACH,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBX,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,MAAMY,MAAM;AAAA,yEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACXX,cAAAA,UAAU,CAAC,IAAD,CAAV;AADW;;AAAA,oBAGHW,MAAM,CAACP,YAAP,IAAuBO,MAAM,CAACN,cAH3B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIGT,QAAQ,CAACD,UAAU,CAACD,IAAI,CAACkB,EAAN,EAAU;AAAER,gBAAAA,YAAY,EAAEO,MAAM,CAACP,YAAvB;AAAqCC,gBAAAA,cAAc,EAAEM,MAAM,CAACN,cAAP,CAAsBQ,MAAtB,CAA6B,YAA7B;AAArD,eAAV,CAAX,CAJX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOPtB,cAAAA,UAAU,CAACuB,IAAI,CAACC,KAAL,CAAW,YAAMC,QAAN,CAAetB,IAA1B,EAAgCuB,MAAhC,CAAuC,CAAvC,EAA0CC,OAA3C,EAAoD,OAApD,CAAV;AACAlB,cAAAA,UAAU,CAAC,KAAD,CAAV;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANU,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAcA,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEJ,SAAhC;AACI,IAAA,KAAK,EAAE;AAAEa,MAAAA,eAAe,YAAK,CAAC,CAACzB,IAAI,CAACU,YAAP,GAAuBV,IAAI,CAACU,YAAL,IAAqB,IAArB,GAA4B,SAA5B,GAAwC,SAA/D,GAA4E,SAAjF;AAAjB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK,CAAC,CAACV,IAAI,CAACU,YAAP,GAAsBf,uBAAuB,CAAC+B,GAAxB,CAA4B;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,IAAV,SAAUA,IAAV;AAAA,WAAqBD,KAAK,IAAI3B,IAAI,CAACU,YAAd,IAA8BkB,IAAnD;AAAA,GAA5B,CAAtB,GAA6G,IAFlH,CADJ,eAOI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,OAAO,EAAEzB,cAArC;AAAqD,IAAA,IAAI,EAAEU,QAA3D;AAAqE,IAAA,QAAQ,EAAEE,YAA/E;AAA6F,IAAA,aAAa,EAAE;AAAEV,MAAAA,OAAO,EAAEA;AAAX,KAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,MAAhB;AAAwB,IAAA,IAAI,EAAER,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,cAArC;AAAoD,IAAA,KAAK,EAAE,CACvD;AAAEqB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBL,MAAAA,OAAO,EAAE;AAA3B,KADuD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,IAAI,CAAC8B,IAAL,IAAa,iBAAb,IAAkC9B,IAAI,CAAC8B,IAAL,IAAa,iBAA/C,gBACG,uDACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADH,gBAKS,uDACF,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADE,eAEF,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,CANd,CAHJ,CADJ,eAgBI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,gBAAhB;AAAiC,IAAA,KAAK,EAAC,gBAAvC;AAAwD,IAAA,KAAK,EAAE,CAC3D;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBL,MAAAA,OAAO,EAAE;AAA3B,KAD2D,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAE1B,UADZ;AAEI,IAAA,YAAY,EAAEE,IAAI,CAACW,cAAL,IAAuBjB,MAAM,CAACM,IAAI,CAACW,cAAN,EAAsB,YAAtB,CAF/C,CAGA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAhBJ,CADJ,CAPJ,CADJ;AA0CH,CA7ED;;AA+EA,eAAeZ,oBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Select, DatePicker, Button, Modal, Form, } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { roomAvailabilityOptions, roomAvailabilityOptionsAdmin } from \"../../../constants/defaultValues\";\r\nimport { notifyUser } from \"../../../services/notification-service\";\r\n\r\nconst dateFormat = \"MMM DD, YYYY\";\r\nconst DateAvailablePopOver = ({ data, updateRoom }) => {\r\n    const dispatch = useDispatch();\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [availableForm] = Form.useForm();\r\n    availableForm.setFieldsValue({\r\n        availability: data.availability,\r\n        date_available: data.date_available && moment(data.date_available, \"YYYY-MM-DD\")\r\n    })\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        availableForm.submit();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const finish = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            if (values.availability && values.date_available) {\r\n                await dispatch(updateRoom(data.id, { availability: values.availability, date_available: values.date_available.format(\"YYYY-MM-DD\") }));\r\n            }\r\n        } catch (error) {\r\n            notifyUser(JSON.parse(error.response.data).errors[0].message, \"error\");\r\n            setLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" onClick={showModal}\r\n                style={{ backgroundColor: `${!!data.availability ? (data.availability == \"no\" ? \"#f44456\" : \"#73c053\") : \"#f44456\"}` }}>\r\n                {!!data.availability ? roomAvailabilityOptions.map(({ value, text }) => value == data.availability && text) : \"No\"}\r\n\r\n                {/* {data.availability ? data.availability : \"No\"} */}\r\n            </Button>\r\n            <Modal title=\"Availability\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} okButtonProps={{ loading: loading }}>\r\n                <Form onFinish={finish} form={availableForm}>\r\n                    <Form.Item label=\"Availability\" name=\"availability\" rules={[\r\n                        { required: true, message: \"Please select availability\" }\r\n                    ]} >\r\n                        <Select >\r\n                            {data.type == \"shared_2_people\" || data.type == \"shared_3_people\" ?\r\n                                <>\r\n                                    <Select.Option value=\"no\">No</Select.Option>\r\n                                    <Select.Option value=\"shared_male\">Only Male</Select.Option>\r\n                                    <Select.Option value=\"shared_female\">Only Female</Select.Option>\r\n                                </> : <>\r\n                                    <Select.Option value=\"yes\">Yes</Select.Option>\r\n                                    <Select.Option value=\"no\">No</Select.Option>\r\n                                </>}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"date_available\" label=\"Date Available\" rules={[\r\n                        { required: true, message: \"Please input date\" }\r\n                    ]} >\r\n                        <DatePicker\r\n                            format={dateFormat}\r\n                            defaultValue={data.date_available && moment(data.date_available, \"YYYY-MM-DD\")}\r\n                        // onChange={(date, dateString) => {\r\n                        //     console.log(date.format(\"YYYY-MM-DD\"), dateString, 'date, dateString');\r\n                        // }\r\n                        //     // handelDateAvailableChange(date, dateString, room.key)\r\n                        // }\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DateAvailablePopOver;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Downloads\\\\secondhome\\\\src\\\\app\\\\pages\\\\home-owner\\\\leads\\\\lead-dashboard.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getLeadById as _getLeadById } from \"../../../redux/actions/lead-actions\";\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Tabs, Skeleton, Descriptions, Card } from \"antd\";\nimport { compose } from \"redux\";\nimport ListClients from \"./clients/list-clients\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport ListResidents from \"./residents/list-residents\";\nimport Financial from \"./residents/financial\";\nimport Equipment from \"./residents/equipment\";\nimport CareLevel from \"./residents/care-level\";\nimport Medical from \"./residents/medical\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport NotesListCard from \"../../../components/shared/displayCard/NotesListCard\";\nimport { residentMoveTimeFrameOptions } from '../../../constants/defaultValues';\nvar TabPane = Tabs.TabPane;\n\nvar LeadDashboard = function LeadDashboard(_ref) {\n  var editLead = _ref.editLead,\n      editLeadLoading = _ref.editLeadLoading;\n\n  var _useParams = useParams(),\n      leadId = _useParams.leadId,\n      activeKey = _useParams.activeKey;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(_getLeadById(leadId, {\n      fields: \"*,client.*,client.primary_resident.*,client.second_resident.*,client.second_contact.*,client.third_contact.*\"\n    }));\n    return function () {\n      console.log(\"Leads Dashboard Unmounting\");\n    };\n  }, []);\n\n  var getTimeFrameValue = function getTimeFrameValue(editLead) {\n    var timeFrameValue = \"\";\n\n    if (editLead.client) {\n      if (editLead.client.primary_resident) {\n        residentMoveTimeFrameOptions.forEach(function (Item) {\n          if (Item.value == editLead.client.primary_resident.move_time_frame) {\n            timeFrameValue = Item.text;\n          }\n        });\n      } // else if (editLead.client.second_resident) {\n      //   residentMoveTimeFrameOptions.forEach(Item => {\n      //     if (Item.value == editLead.client.second_resident.move_time_frame) {\n      //       timeFrameValue = Item.text\n      //     }\n      //   })\n      // }\n      else {\n          timeFrameValue = \"\";\n        }\n    }\n\n    return timeFrameValue;\n  };\n\n  function formatNumber(e) {\n    if (e) {\n      var x = e.toString().replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\n      return !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\n    }\n  }\n\n  var getBudgetNotesValue = function getBudgetNotesValue(editLead) {\n    var budgetNotesValue = \"\";\n\n    if (editLead.client) {\n      console.log(editLead);\n\n      if (editLead.client.primary_resident) {\n        budgetNotesValue = editLead.client.primary_resident.budget_notes;\n      } // else if (editLead.client.second_resident) {\n      //   budgetNotesValue = editLead.client.second_resident.budget_notes\n      // }\n      else {\n          budgetNotesValue = \"\";\n        }\n    }\n\n    return budgetNotesValue;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/owner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/owner/leads\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Leads\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/owner/leads/\".concat(leadId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Client\"))), /*#__PURE__*/React.createElement(PageHeader, {\n    className: \"site-page-header\",\n    title: editLead && editLead.client ? humanize(editLead.client.name) : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 8,\n    lg: 8,\n    xl: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Overview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    loading: editLeadLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Descriptions, {\n    column: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"First Resident Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, editLead.client.primary_resident ? humanize(editLead.client.primary_resident.name) : \"\"), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Second Resident Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, editLead.client.second_resident ? humanize(editLead.client.second_resident.name) : \"\"), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, editLead.client ? /*#__PURE__*/React.createElement(\"a\", {\n    href: \"tell:\".concat(editLead.client.cell),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 73\n    }\n  }, formatNumber(editLead.client.cell)) : \"\"), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, editLead.client ? /*#__PURE__*/React.createElement(\"a\", {\n    href: \"tell:\".concat(editLead.client.phone),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 74\n    }\n  }, formatNumber(editLead.client.phone)) : \"\"), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, editLead.client ? editLead.client.email : \"\"), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Budget Notes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, getBudgetNotesValue(editLead)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Move Time Frame\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, getTimeFrameValue(editLead))), editLead.notes && editLead.notes.data && /*#__PURE__*/React.createElement(List, {\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 31\n      }\n    }, \"Notes : \"),\n    dataSource: editLead.notes.data,\n    bordered: true,\n    renderItem: function renderItem(note, index) {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, note);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 8,\n    lg: 16,\n    xl: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: activeKey ? activeKey : \"client\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Client\",\n    key: \"client\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(ListClients, {\n    leadId: leadId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Resident\",\n    key: \"resident\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(ListResidents, {\n    leadId: leadId,\n    editLead: editLead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Financial\",\n    key: \"financial\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(Financial, {\n    leadId: leadId,\n    editLead: editLead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Care Level\",\n    key: \"care-level\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(CareLevel, {\n    leadId: leadId,\n    editLead: editLead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Medical\",\n    key: \"medical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(Medical, {\n    leadId: leadId,\n    editLead: editLead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Equipment\",\n    key: \"equipment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, editLead && /*#__PURE__*/React.createElement(Equipment, {\n    leadId: leadId,\n    editLead: editLead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 28\n    }\n  }))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    editLead: state.lead.editLead,\n    editLeadLoading: state.lead.editLeadLoading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getLeadById: function getLeadById() {\n      return dispatch(_getLeadById());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(LeadDashboard);","map":{"version":3,"sources":["C:/Users/SFelizardo/Downloads/secondhome/src/app/pages/home-owner/leads/lead-dashboard.js"],"names":["React","useEffect","useState","connect","useDispatch","Link","useParams","getLeadById","List","Divider","Row","Col","Button","PageHeader","Table","Tag","Space","Breadcrumb","Tabs","Skeleton","Descriptions","Card","compose","ListClients","humanize","ListResidents","Financial","Equipment","CareLevel","Medical","Avatar","NotesListCard","residentMoveTimeFrameOptions","TabPane","LeadDashboard","editLead","editLeadLoading","leadId","activeKey","dispatch","fields","console","log","getTimeFrameValue","timeFrameValue","client","primary_resident","forEach","Item","value","move_time_frame","text","formatNumber","e","x","toString","replace","match","getBudgetNotesValue","budgetNotesValue","budget_notes","name","second_resident","cell","phone","email","notes","data","note","index","mapStateToProps","state","lead","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getLeadById } from \"../../../redux/actions/lead-actions\";\r\nimport { List, Divider, Row, Col, Button, PageHeader, Table, Tag, Space, Breadcrumb, Tabs, Skeleton, Descriptions, Card } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport ListClients from \"./clients/list-clients\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport ListResidents from \"./residents/list-residents\";\r\nimport Financial from \"./residents/financial\";\r\nimport Equipment from \"./residents/equipment\";\r\nimport CareLevel from \"./residents/care-level\";\r\nimport Medical from \"./residents/medical\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport NotesListCard from \"../../../components/shared/displayCard/NotesListCard\";\r\nimport { residentMoveTimeFrameOptions } from '../../../constants/defaultValues';\r\n\r\nconst { TabPane } = Tabs;\r\nconst LeadDashboard = ({ editLead, editLeadLoading }) => {\r\n\r\n  const { leadId, activeKey } = useParams();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getLeadById(leadId, { fields: \"*,client.*,client.primary_resident.*,client.second_resident.*,client.second_contact.*,client.third_contact.*\" }))\r\n    return () => {\r\n      console.log(\"Leads Dashboard Unmounting\");\r\n    };\r\n  }, []);\r\n\r\n\r\n  const getTimeFrameValue = (editLead) => {\r\n    let timeFrameValue = \"\"\r\n    if (editLead.client) {\r\n      if (editLead.client.primary_resident) {\r\n        residentMoveTimeFrameOptions.forEach(Item => {\r\n          if (Item.value == editLead.client.primary_resident.move_time_frame) {\r\n            timeFrameValue = Item.text\r\n          }\r\n        })\r\n      }\r\n      // else if (editLead.client.second_resident) {\r\n      //   residentMoveTimeFrameOptions.forEach(Item => {\r\n      //     if (Item.value == editLead.client.second_resident.move_time_frame) {\r\n      //       timeFrameValue = Item.text\r\n      //     }\r\n      //   })\r\n      // }\r\n      else {\r\n        timeFrameValue = \"\"\r\n      }\r\n    }\r\n    return timeFrameValue\r\n  }\r\n\r\n  function formatNumber(e){\r\n    if(e){\r\n    var x = e.toString().replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\r\n    return !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\r\n    \r\n    }\r\n  }\r\n\r\n  const getBudgetNotesValue = (editLead) => {\r\n    let budgetNotesValue = \"\"\r\n    if (editLead.client) {\r\n      console.log(editLead);\r\n      if (editLead.client.primary_resident) {\r\n        budgetNotesValue = editLead.client.primary_resident.budget_notes\r\n      }\r\n      // else if (editLead.client.second_resident) {\r\n      //   budgetNotesValue = editLead.client.second_resident.budget_notes\r\n      // }\r\n      else {\r\n        budgetNotesValue = \"\"\r\n      }\r\n    }\r\n    return budgetNotesValue\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/owner\">Home</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/owner/leads\">Leads</Link>\r\n        </Breadcrumb.Item>\r\n\r\n        <Breadcrumb.Item>\r\n          <Link to={`/owner/leads/${leadId}`}>Client</Link>\r\n        </Breadcrumb.Item>\r\n\r\n      </Breadcrumb>\r\n      <PageHeader className=\"site-page-header\" title={editLead && editLead.client ? (humanize(editLead.client.name)) : \"\"} />\r\n      <Row gutter={30}>\r\n        <Col xs={24} sm={24} md={8} lg={8} xl={8}>\r\n          <Card title=\"Overview\">\r\n            <Skeleton loading={editLeadLoading}>\r\n              {editLead && (\r\n                <>\r\n                  <Descriptions column={1}>\r\n                    {/* <Descriptions.Item label=\"Status\">{humanize(editLead.status)}</Descriptions.Item> */}\r\n                    <Descriptions.Item label=\"First Resident Name\">{editLead.client.primary_resident ? humanize(editLead.client.primary_resident.name) : \"\"}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Second Resident Name\">{editLead.client.second_resident ? humanize(editLead.client.second_resident.name) : \"\"}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Cell\">{editLead.client ? (<a href={`tell:${editLead.client.cell}`}>{formatNumber(editLead.client.cell)}</a>) : \"\"}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Phone\">{editLead.client ? (<a href={`tell:${editLead.client.phone}`}>{formatNumber(editLead.client.phone)}</a>) : \"\"}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Email\">{editLead.client ? (editLead.client.email) : \"\"}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Budget Notes\">{getBudgetNotesValue(editLead)}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Move Time Frame\">{getTimeFrameValue(editLead)}</Descriptions.Item>\r\n                  </Descriptions>\r\n                  {editLead.notes && editLead.notes.data &&\r\n                    <List\r\n                      header={<div >Notes : </div>}\r\n                      dataSource={editLead.notes.data}\r\n                      bordered\r\n                      renderItem={(note, index) => (\r\n                        <List.Item>\r\n                          {note}\r\n\r\n                        </List.Item>\r\n                      )}\r\n\r\n                    >\r\n\r\n                    </List>\r\n                  }\r\n                </>\r\n              )}\r\n\r\n            </Skeleton>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={8} lg={16} xl={16}>\r\n          <Tabs defaultActiveKey={activeKey ? activeKey : \"client\"} >\r\n            <TabPane tab=\"Client\" key=\"client\">\r\n              {editLead && <ListClients leadId={leadId} />}\r\n            </TabPane>\r\n            <TabPane tab=\"Resident\" key=\"resident\">\r\n              {editLead && <ListResidents leadId={leadId} editLead={editLead} />}\r\n            </TabPane>\r\n\r\n            <TabPane tab=\"Financial\" key=\"financial\">\r\n              {editLead && <Financial leadId={leadId} editLead={editLead} />}\r\n            </TabPane>\r\n            <TabPane tab=\"Care Level\" key=\"care-level\">\r\n              {editLead && <CareLevel leadId={leadId} editLead={editLead} />}\r\n            </TabPane>\r\n            <TabPane tab=\"Medical\" key=\"medical\">\r\n              {editLead && <Medical leadId={leadId} editLead={editLead} />}\r\n            </TabPane>\r\n            <TabPane tab=\"Equipment\" key=\"equipment\">\r\n              {editLead && <Equipment leadId={leadId} editLead={editLead} />}\r\n            </TabPane>\r\n            {/* <TabPane tab=\"Documents\" key=\"documents\">\r\n            </TabPane> */}\r\n\r\n          </Tabs>\r\n\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    editLead: state.lead.editLead,\r\n    editLeadLoading: state.lead.editLeadLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getLeadById: () => dispatch(getLeadById())\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(LeadDashboard);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SFelizardo\\\\Desktop\\\\Projects\\\\secondhome\\\\second-home-referrals\\\\src\\\\app\\\\pages\\\\home-owner\\\\availability\\\\list-rooms-availability.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listAllRooms as _listAllRooms, updateRoom as _updateRoom, setRoomListLoading as _setRoomListLoading } from \"../../../redux/actions/room-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table, Tag, Space, Tooltip } from \"antd\";\nimport { compose } from \"redux\";\nimport { EditOutlined, FilterFilled } from \"@ant-design/icons\";\nimport { roomAvailabilityOptions, roomCareTypesOptions, floorLevelOptions } from \"../../../constants/defaultValues\";\nimport { humanize } from \"../../../helpers/string-helper\";\nimport { getNumberWithOrdinal } from \"../../../helpers/number-helper\";\nimport moment from \"moment\";\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\nimport DateAvailablePopOver from \"../../admin/partner/date-available-popover\";\nimport userService from \"../../../services/user-service\";\nvar dateFormat = \"MMM DD, YYYY\";\n\nvar ListRoomsAvailability = function ListRoomsAvailability(_ref) {\n  var roomList = _ref.roomList,\n      roomListLoading = _ref.roomListLoading,\n      roomUpdated = _ref.roomUpdated,\n      roomMessage = _ref.roomMessage,\n      roomListMeta = _ref.roomListMeta;\n  var user = userService.getLoggedInUser();\n\n  var _useState = useState({\n    pageSize: 5,\n    current: 1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var _useState5 = useState({\n    home: {\n      user_created: {\n        _eq: user.id\n      }\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(_listAllRooms({\n      fields: [\"*\", \"home.*\"],\n      filter: filters,\n      sort: sort,\n      page: pagination.current,\n      limit: pagination.pageSize,\n      meta: \"*\"\n    }));\n    roomListMeta && setPagination(_objectSpread({}, pagination, {\n      total: roomListMeta.filter_count\n    }));\n    return function () {\n      console.log(\"Rooms Unmounting\");\n    };\n  }, [roomUpdated, roomListLoading]);\n\n  var handelTableChange = function handelTableChange(_ref2, tableFilters, sorter) {\n    var current = _ref2.current;\n    console.log(tableFilters);\n\n    if (sorter && sorter.field) {\n      if (sorter.order == \"ascend\") {\n        setSort(sorter.field);\n      } else {\n        setSort(\"-\" + sorter.field);\n      }\n    }\n\n    var _filters = {\n      home: {\n        _nnull: null\n      }\n    };\n    Object.entries(tableFilters).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n\n      var orFilter = [];\n\n      if (value) {\n        switch (key) {\n          case \"availability\":\n            _filters.availability = {\n              _in: value\n            };\n            break;\n\n          case \"room_care_type\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                room_care_type: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"floor_level\":\n            _filters.floor_level = {\n              _in: value\n            };\n            break;\n\n          case \"name\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                name: {\n                  _contains: data\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          case \"base_rate\":\n            _filters.base_rate = {\n              _in: value\n            };\n            break;\n\n          case \"home_name\":\n            orFilter = [];\n            value.map(function (data) {\n              orFilter.push({\n                home: {\n                  name: {\n                    _contains: data\n                  }\n                }\n              });\n            });\n            _filters._or = orFilter;\n            break;\n\n          default:\n            _filters = {\n              home: {\n                _nnull: null\n              }\n            };\n            break;\n        }\n      } else {}\n    });\n    setFilters(_objectSpread({}, _filters));\n    setPagination(_objectSpread({}, pagination, {\n      current: current\n    }));\n    dispatch(_setRoomListLoading(true));\n  };\n\n  var handelAvailabilityChange = function handelAvailabilityChange(value, roomId) {\n    if (value == \"no\") {\n      dispatch(_updateRoom(roomId, {\n        availability: value,\n        date_available: null\n      }));\n    } else {\n      dispatch(_updateRoom(roomId, {\n        availability: value\n      }));\n    }\n  };\n\n  var handelDateAvailableChange = function handelDateAvailableChange(date, dateString, roomId) {\n    // console.log(date.format(\"YYYY-MM-DD\"));\n    dispatch(_updateRoom(roomId, {\n      date_available: date.format(\"YYYY-MM-DD\")\n    }));\n  };\n\n  var columns = [{\n    title: \"Community Name\",\n    dataIndex: \"home_name\",\n    key: \"home_name\",\n    //...getColumnSearchProps(\"home_name\"),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/owner/communities/\".concat(room.home_id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, text));\n    }\n  }, {\n    title: \"Room Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //...getColumnSearchProps(\"name\"),\n    render: function render(text, room) {\n      return /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/owner/communities/\".concat(room.home_id, \"/rooms/\").concat(room.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, text));\n    }\n  }, {\n    title: \"Pricing\",\n    dataIndex: \"base_rate\",\n    key: \"base_rate\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //...getColumnSearchProps(\"base_rate\"),\n    render: function render(text, room) {\n      return !!text && /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      }, \"$\".concat(text));\n    }\n  }, {\n    title: \"Floor Level\",\n    dataIndex: \"floor_level\",\n    key: \"floor_level\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: floorLevelOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    })),\n    render: function render(text, room) {\n      return !!text && /*#__PURE__*/React.createElement(Space, {\n        size: \"middle\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, \"\".concat(getNumberWithOrdinal(text), \" Floor\"));\n    }\n  }, {\n    title: \"Room Type\",\n    dataIndex: \"type\",\n    key: \"type\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: roomCareTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    })),\n    render: function render(text) {\n      return /*#__PURE__*/React.createElement(Tag, {\n        color: \"blue\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, humanize(text));\n    }\n  }, {\n    title: \"Room Care Type\",\n    dataIndex: \"room_care_type\",\n    key: \"room_care_type\",\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: roomCareTypesOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    })),\n    render: function render(room_care_type) {\n      return room_care_type && room_care_type.map(function (tag) {\n        return /*#__PURE__*/React.createElement(Tag, {\n          color: \"blue\",\n          key: tag,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }\n        }, humanize(tag));\n      });\n    }\n  }, {\n    title: \"Availability\",\n    dataIndex: \"availability\",\n    key: \"availability\",\n    style: {\n      width: \"130px\"\n    },\n    //sorter: true,\n    sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n    //filters: roomAvailabilityOptions,\n    filterIcon: /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FilterFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    })),\n    render: function render(value, room) {\n      return /*#__PURE__*/React.createElement(DateAvailablePopOver, {\n        data: value,\n        updateRoom: _updateRoom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }) // <Select\n      //   style={{ width: \"130px\" }}\n      //   defaultValue={value}\n      //   onChange={(value) => handelAvailabilityChange(value, room.key)}\n      // >\n      //   {roomAvailabilityOptions.map((option) => {\n      //     return (\n      //       <Select.Option value={option.value}>{option.text}</Select.Option>\n      //     );\n      //   })}\n      // </Select>\n      ;\n    }\n  } // {\n  //   title: \"Date Available\",\n  //   dataIndex: \"date_available\",\n  //   key: \"date_available\",\n  //   sorter: true,\n  //   sortDirections: [\"ascend\", \"descend\", \"ascend\"],\n  //   render: (text, room) => (\n  //     <Space direction=\"vertical\" size=\"middle\">\n  //       <DatePicker\n  //         format={dateFormat}\n  //         defaultValue={text && moment(text, \"YYYY-MM-DD\")}\n  //         onChange={(date, dateString) =>\n  //           handelDateAvailableChange(date, dateString, room.key)\n  //         }\n  //       />\n  //     </Space>\n  //   ),\n  // },\n  ];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    loading: roomListLoading,\n    dataSource: roomList.map(function (item) {\n      console.log(item, 'item');\n      return {\n        name: item.name,\n        base_rate: item.base_rate,\n        room_care_type: item.room_care_type,\n        type: item.type,\n        floor_level: item.floor_level,\n        key: item.id,\n        home_name: item.home ? item.home.name : null,\n        availability: item,\n        // date_available,\n        home_id: item.home ? item.home.id : null\n      };\n    }),\n    pagination: pagination,\n    onChange: handelTableChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomList: state.room.roomList,\n    roomListLoading: state.room.roomListLoading,\n    roomUpdated: state.room.roomUpdated,\n    roomMessage: state.room.roomMessage,\n    roomListMeta: state.room.roomListMeta\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    listAllRooms: function listAllRooms() {\n      return dispatch(_listAllRooms());\n    },\n    updateRoom: function updateRoom() {\n      return dispatch(_updateRoom());\n    },\n    setRoomListLoading: function setRoomListLoading() {\n      return dispatch(_setRoomListLoading());\n    }\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ListRoomsAvailability);","map":{"version":3,"sources":["C:/Users/SFelizardo/Desktop/Projects/secondhome/second-home-referrals/src/app/pages/home-owner/availability/list-rooms-availability.js"],"names":["React","useEffect","useState","connect","listAllRooms","updateRoom","setRoomListLoading","useDispatch","Link","Row","Col","Table","Tag","Space","Tooltip","compose","EditOutlined","FilterFilled","roomAvailabilityOptions","roomCareTypesOptions","floorLevelOptions","humanize","getNumberWithOrdinal","moment","getColumnSearchProps","DateAvailablePopOver","userService","dateFormat","ListRoomsAvailability","roomList","roomListLoading","roomUpdated","roomMessage","roomListMeta","user","getLoggedInUser","pageSize","current","pagination","setPagination","sort","setSort","home","user_created","_eq","id","filters","setFilters","dispatch","fields","filter","page","limit","meta","total","filter_count","console","log","handelTableChange","tableFilters","sorter","field","order","_filters","_nnull","Object","entries","forEach","key","value","orFilter","availability","_in","map","data","push","room_care_type","_contains","_or","floor_level","name","base_rate","handelAvailabilityChange","roomId","date_available","handelDateAvailableChange","date","dateString","format","columns","title","dataIndex","render","text","room","home_id","sortDirections","filterIcon","tag","style","width","item","type","home_name","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { listAllRooms, updateRoom, setRoomListLoading, } from \"../../../redux/actions/room-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Row, Col, Table, Tag, Space, Tooltip, } from \"antd\";\r\nimport { compose } from \"redux\";\r\nimport { EditOutlined, FilterFilled } from \"@ant-design/icons\";\r\nimport { roomAvailabilityOptions, roomCareTypesOptions, floorLevelOptions, } from \"../../../constants/defaultValues\";\r\nimport { humanize } from \"../../../helpers/string-helper\";\r\nimport { getNumberWithOrdinal } from \"../../../helpers/number-helper\";\r\nimport moment from \"moment\";\r\nimport { getColumnSearchProps } from \"../../../helpers/columnSearchProps\";\r\nimport DateAvailablePopOver from \"../../admin/partner/date-available-popover\";\r\nimport userService from \"../../../services/user-service\";\r\n\r\nconst dateFormat = \"MMM DD, YYYY\";\r\n\r\nconst ListRoomsAvailability = ({\r\n  roomList,\r\n  roomListLoading,\r\n  roomUpdated,\r\n  roomMessage,\r\n  roomListMeta,\r\n}) => {\r\n  const user = userService.getLoggedInUser();\r\n  const [pagination, setPagination] = useState({\r\n    pageSize: 5,\r\n    current: 1,\r\n  });\r\n  const [sort, setSort] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    home: {\r\n      user_created\r\n        : { _eq: user.id }\r\n    }\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      listAllRooms({\r\n        fields: [\"*\", \"home.*\"],\r\n        filter: filters,\r\n        sort,\r\n        page: pagination.current,\r\n        limit: pagination.pageSize,\r\n        meta: \"*\",\r\n      })\r\n    );\r\n    roomListMeta &&\r\n      setPagination({ ...pagination, total: roomListMeta.filter_count });\r\n\r\n    return () => {\r\n      console.log(\"Rooms Unmounting\");\r\n    };\r\n  }, [roomUpdated, roomListLoading]);\r\n\r\n  const handelTableChange = ({ current }, tableFilters, sorter) => {\r\n    console.log(tableFilters);\r\n    if (sorter && sorter.field) {\r\n      if (sorter.order == \"ascend\") {\r\n        setSort(sorter.field);\r\n      } else {\r\n        setSort(\"-\" + sorter.field);\r\n      }\r\n    }\r\n\r\n    let _filters = { home: { _nnull: null } };\r\n\r\n    Object.entries(tableFilters).forEach(([key, value]) => {\r\n      let orFilter = [];\r\n      if (value) {\r\n        switch (key) {\r\n          case \"availability\":\r\n            _filters.availability = { _in: value };\r\n            break;\r\n\r\n          case \"room_care_type\":\r\n            orFilter = [];\r\n            value.map((data) => {\r\n              orFilter.push({ room_care_type: { _contains: data } });\r\n            });\r\n            _filters._or = orFilter;\r\n            break;\r\n          case \"floor_level\":\r\n            _filters.floor_level = { _in: value };\r\n            break;\r\n          case \"name\":\r\n            orFilter = [];\r\n            value.map((data) => {\r\n              orFilter.push({ name: { _contains: data } });\r\n            });\r\n            _filters._or = orFilter;\r\n            break;\r\n          case \"base_rate\":\r\n            _filters.base_rate = { _in: value };\r\n            break;\r\n          case \"home_name\":\r\n            orFilter = [];\r\n            value.map((data) => {\r\n              orFilter.push({ home: { name: { _contains: data } } });\r\n            });\r\n            _filters._or = orFilter;\r\n            break;\r\n\r\n          default:\r\n            _filters = { home: { _nnull: null } }\r\n            break;\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n    setFilters({ ..._filters });\r\n    setPagination({ ...pagination, current });\r\n    dispatch(setRoomListLoading(true));\r\n  };\r\n\r\n  const handelAvailabilityChange = (value, roomId) => {\r\n    if (value == \"no\") {\r\n      dispatch(\r\n        updateRoom(roomId, { availability: value, date_available: null })\r\n      );\r\n    } else {\r\n      dispatch(updateRoom(roomId, { availability: value }));\r\n    }\r\n  };\r\n\r\n  const handelDateAvailableChange = (date, dateString, roomId) => {\r\n    // console.log(date.format(\"YYYY-MM-DD\"));\r\n    dispatch(updateRoom(roomId, { date_available: date.format(\"YYYY-MM-DD\") }));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Community Name\",\r\n      dataIndex: \"home_name\",\r\n      key: \"home_name\",\r\n      //...getColumnSearchProps(\"home_name\"),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          <Link to={`/owner/communities/${room.home_id}`}>{text}</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Room Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      //sorter: true,\r\n      sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n      //...getColumnSearchProps(\"name\"),\r\n      render: (text, room) => (\r\n        <Space size=\"middle\">\r\n          <Link to={`/owner/communities/${room.home_id}/rooms/${room.key}`}>\r\n            {text}\r\n          </Link>\r\n        </Space>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Pricing\",\r\n      dataIndex: \"base_rate\",\r\n      key: \"base_rate\",\r\n      //sorter: true,\r\n      sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n      //...getColumnSearchProps(\"base_rate\"),\r\n      render: (text, room) => !!text && <Space size=\"middle\">{`$${text}`}</Space>,\r\n    },\r\n    {\r\n      title: \"Floor Level\",\r\n      dataIndex: \"floor_level\",\r\n      key: \"floor_level\",\r\n      //sorter: true,\r\n      sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n      //filters: floorLevelOptions,\r\n      filterIcon: (\r\n        <Tooltip title=\"Filter\">\r\n          <FilterFilled />\r\n        </Tooltip>\r\n      ),\r\n      render: (text, room) => (\r\n        !!text &&\r\n        <Space size=\"middle\">{`${getNumberWithOrdinal(text)} Floor`}</Space>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Room Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      //sorter: true,\r\n      sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n      //filters: roomCareTypesOptions,\r\n      filterIcon: (\r\n        <Tooltip title=\"Filter\">\r\n          <FilterFilled />\r\n        </Tooltip>\r\n      ),\r\n      render: (text) =>\r\n\r\n        <Tag color=\"blue\">\r\n          {humanize(text)}\r\n        </Tag>\r\n\r\n    },\r\n    {\r\n      title: \"Room Care Type\",\r\n      dataIndex: \"room_care_type\",\r\n      key: \"room_care_type\",\r\n      //sorter: true,\r\n      sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n      //filters: roomCareTypesOptions,\r\n      filterIcon: (\r\n        <Tooltip title=\"Filter\">\r\n          <FilterFilled />\r\n        </Tooltip>\r\n      ),\r\n      render: (room_care_type) =>\r\n        room_care_type && room_care_type.map((tag) => (\r\n          <Tag color=\"blue\" key={tag}>\r\n            {humanize(tag)}\r\n          </Tag>\r\n        )),\r\n    },\r\n\r\n    {\r\n      title: \"Availability\",\r\n      dataIndex: \"availability\",\r\n      key: \"availability\",\r\n      style: { width: \"130px\" },\r\n      //sorter: true,\r\n      sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n      //filters: roomAvailabilityOptions,\r\n      filterIcon: (\r\n        <Tooltip title=\"Filter\">\r\n          <FilterFilled />\r\n        </Tooltip>\r\n      ),\r\n      render: (value, room) => (\r\n        <DateAvailablePopOver data={value} updateRoom={updateRoom} />\r\n        // <Select\r\n        //   style={{ width: \"130px\" }}\r\n        //   defaultValue={value}\r\n        //   onChange={(value) => handelAvailabilityChange(value, room.key)}\r\n        // >\r\n        //   {roomAvailabilityOptions.map((option) => {\r\n        //     return (\r\n        //       <Select.Option value={option.value}>{option.text}</Select.Option>\r\n        //     );\r\n        //   })}\r\n        // </Select>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Date Available\",\r\n    //   dataIndex: \"date_available\",\r\n    //   key: \"date_available\",\r\n    //   sorter: true,\r\n    //   sortDirections: [\"ascend\", \"descend\", \"ascend\"],\r\n    //   render: (text, room) => (\r\n    //     <Space direction=\"vertical\" size=\"middle\">\r\n    //       <DatePicker\r\n    //         format={dateFormat}\r\n    //         defaultValue={text && moment(text, \"YYYY-MM-DD\")}\r\n    //         onChange={(date, dateString) =>\r\n    //           handelDateAvailableChange(date, dateString, room.key)\r\n    //         }\r\n    //       />\r\n    //     </Space>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={30}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n          <Table\r\n            columns={columns}\r\n            loading={roomListLoading}\r\n            dataSource={roomList.map(\r\n              (item) => {\r\n                console.log(item, 'item');\r\n                return {\r\n                  name: item.name,\r\n                  base_rate: item.base_rate,\r\n                  room_care_type: item.room_care_type,\r\n                  type: item.type,\r\n                  floor_level: item.floor_level,\r\n                  key: item.id,\r\n                  home_name: item.home ? item.home.name : null,\r\n                  availability: item,\r\n                  // date_available,\r\n                  home_id: item.home ? item.home.id : null,\r\n                };\r\n              }\r\n            )}\r\n            pagination={pagination}\r\n            onChange={handelTableChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomList: state.room.roomList,\r\n    roomListLoading: state.room.roomListLoading,\r\n    roomUpdated: state.room.roomUpdated,\r\n    roomMessage: state.room.roomMessage,\r\n    roomListMeta: state.room.roomListMeta,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    listAllRooms: () => dispatch(listAllRooms()),\r\n    updateRoom: () => dispatch(updateRoom()),\r\n    setRoomListLoading: () => dispatch(setRoomListLoading()),\r\n  };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\r\n  ListRoomsAvailability\r\n);\r\n"]},"metadata":{},"sourceType":"module"}